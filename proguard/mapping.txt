android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.a:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.b:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    void bumpBackStackNesting(int) -> a
    int commit() -> a
    int commitInternal(boolean) -> a
    void run() -> run
    void popFromBackStack(boolean) -> b
    java.lang.String getName() -> b
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.c:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.d:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.BackStackState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    android.support.v4.util.SimpleArrayMap sClassMap -> P
    int mState -> a
    android.view.View mAnimatingAway -> b
    int mStateAfterAnimating -> c
    android.os.Bundle mSavedFragmentState -> d
    android.util.SparseArray mSavedViewState -> e
    int mIndex -> f
    java.lang.String mWho -> g
    android.os.Bundle mArguments -> h
    android.support.v4.app.Fragment mTarget -> i
    int mTargetIndex -> j
    int mTargetRequestCode -> k
    boolean mAdded -> l
    boolean mRemoving -> m
    boolean mResumed -> n
    boolean mFromLayout -> o
    boolean mInLayout -> p
    boolean mRestored -> q
    int mBackStackNesting -> r
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> s
    android.support.v4.app.FragmentActivity mActivity -> t
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> u
    android.support.v4.app.Fragment mParentFragment -> v
    int mFragmentId -> w
    int mContainerId -> x
    java.lang.String mTag -> y
    boolean mHidden -> z
    boolean mDetached -> A
    boolean mRetainInstance -> B
    boolean mRetaining -> C
    boolean mHasMenu -> D
    boolean mMenuVisible -> E
    boolean mCalled -> F
    int mNextAnim -> G
    android.view.ViewGroup mContainer -> H
    android.view.View mView -> I
    android.view.View mInnerView -> J
    boolean mDeferStart -> K
    boolean mUserVisibleHint -> L
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> M
    boolean mLoadersStarted -> N
    boolean mCheckedForLoaderManager -> O
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    boolean isSupportFragmentClass(android.content.Context,java.lang.String) -> b
    void restoreViewState(android.os.Bundle) -> a
    void setIndex(int,android.support.v4.app.Fragment) -> a
    boolean isInBackStack() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    android.support.v4.app.FragmentActivity getActivity() -> b
    android.content.res.Resources getResources() -> c
    boolean isDetached() -> d
    void onHiddenChanged(boolean) -> a
    void onActivityResult(int,int,android.content.Intent) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> a
    void onAttach(android.app.Activity) -> a
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> a
    void onCreate(android.os.Bundle) -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void onActivityCreated(android.os.Bundle) -> d
    void onViewStateRestored(android.os.Bundle) -> e
    void onStart() -> e
    void onResume() -> f
    void onSaveInstanceState(android.os.Bundle) -> f
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> g
    void onStop() -> h
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> i
    void onDestroy() -> j
    void initState() -> k
    void onDetach() -> l
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    void onPrepareOptionsMenu(android.view.Menu) -> a
    void onDestroyOptionsMenu() -> m
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onOptionsMenuClosed(android.view.Menu) -> b
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> b
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void instantiateChildFragmentManager() -> n
    void performCreate(android.os.Bundle) -> g
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> b
    void performActivityCreated(android.os.Bundle) -> h
    void performStart() -> o
    void performResume() -> p
    void performConfigurationChanged(android.content.res.Configuration) -> a
    void performLowMemory() -> q
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> b
    boolean performPrepareOptionsMenu(android.view.Menu) -> c
    boolean performOptionsItemSelected(android.view.MenuItem) -> c
    boolean performContextItemSelected(android.view.MenuItem) -> d
    void performOptionsMenuClosed(android.view.Menu) -> d
    void performSaveInstanceState(android.os.Bundle) -> i
    void performPause() -> r
    void performStop() -> s
    void performReallyStop() -> t
    void performDestroyView() -> u
    void performDestroy() -> v
android.support.v4.app.Fragment$1 -> android.support.v4.app.e:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.f:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.g:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.h:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> c
    boolean mCreated -> d
    boolean mResumed -> e
    boolean mStopped -> f
    boolean mReallyStopped -> g
    boolean mRetaining -> h
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    android.support.v4.util.SimpleArrayMap mAllLoaderManagers -> l
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> m
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> a
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> b
    void supportInvalidateOptionsMenu() -> c
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> a
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    void doReallyStop(boolean) -> a
    void onReallyStop() -> d
    void onAttachFragment(android.support.v4.app.Fragment) -> a
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void invalidateSupportFragment(java.lang.String) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.i:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.j:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    android.support.v4.util.SimpleArrayMap children -> c
    java.util.ArrayList fragments -> d
    android.support.v4.util.SimpleArrayMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.app.k:
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentManager -> android.support.v4.app.l:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.m:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.n:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> c
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> a
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> b
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> d
    void makeActive(android.support.v4.app.Fragment) -> c
    void makeInactive(android.support.v4.app.Fragment) -> d
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void checkStateLoss() -> t
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> e
    void reportBackStackChanged() -> f
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> g
    void saveFragmentViewState(android.support.v4.app.Fragment) -> e
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> f
    android.os.Parcelable saveAllState() -> h
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    void noteStateNotSaved() -> i
    void dispatchCreate() -> j
    void dispatchActivityCreated() -> k
    void dispatchStart() -> l
    void dispatchResume() -> m
    void dispatchPause() -> n
    void dispatchStop() -> o
    void dispatchReallyStop() -> p
    void dispatchDestroyView() -> q
    void dispatchDestroy() -> r
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> s
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
    int transitToStyleIndex(int,boolean) -> b
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.o:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.p:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.q:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.r:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.content.Context mContext -> b
    android.support.v4.app.FragmentManager mFragmentManager -> c
    int mContainerId -> d
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> e
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> f
    boolean mAttached -> g
    void setup() -> setup
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.s:
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.t:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.u:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.v:
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    int commit() -> a
android.support.v4.app.LoaderManager -> android.support.v4.app.w:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.x:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.y:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.z:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.aa:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.NotificationCompat -> android.support.v4.app.ab:
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL -> a
    android.support.v4.app.NotificationCompat$NotificationCompatImpl access$000() -> a
android.support.v4.app.NotificationCompat$Action -> android.support.v4.app.ac:
    int icon -> a
    java.lang.CharSequence title -> b
    android.app.PendingIntent actionIntent -> c
android.support.v4.app.NotificationCompat$BigPictureStyle -> android.support.v4.app.ad:
    android.graphics.Bitmap mPicture -> a
    android.graphics.Bitmap mBigLargeIcon -> b
    boolean mBigLargeIconSet -> c
android.support.v4.app.NotificationCompat$BigTextStyle -> android.support.v4.app.ae:
    java.lang.CharSequence mBigText -> a
android.support.v4.app.NotificationCompat$Builder -> android.support.v4.app.af:
    android.content.Context mContext -> a
    java.lang.CharSequence mContentTitle -> b
    java.lang.CharSequence mContentText -> c
    android.app.PendingIntent mContentIntent -> d
    android.app.PendingIntent mFullScreenIntent -> e
    android.widget.RemoteViews mTickerView -> f
    android.graphics.Bitmap mLargeIcon -> g
    java.lang.CharSequence mContentInfo -> h
    int mNumber -> i
    int mPriority -> j
    boolean mUseChronometer -> k
    android.support.v4.app.NotificationCompat$Style mStyle -> l
    java.lang.CharSequence mSubText -> m
    int mProgressMax -> n
    int mProgress -> o
    boolean mProgressIndeterminate -> p
    java.util.ArrayList mActions -> q
    android.app.Notification mNotification -> r
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int) -> a
    android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> a
    android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> b
    android.support.v4.app.NotificationCompat$Builder setProgress(int,int,boolean) -> a
    android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> a
    android.support.v4.app.NotificationCompat$Builder setOngoing(boolean) -> a
    android.support.v4.app.NotificationCompat$Builder setAutoCancel(boolean) -> b
    void setFlag(int,boolean) -> a
    android.app.Notification build() -> a
android.support.v4.app.NotificationCompat$InboxStyle -> android.support.v4.app.ag:
    java.util.ArrayList mTexts -> a
android.support.v4.app.NotificationCompat$NotificationCompatImpl -> android.support.v4.app.ah:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplBase -> android.support.v4.app.ai:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb -> android.support.v4.app.aj:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich -> android.support.v4.app.ak:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean -> android.support.v4.app.al:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$Style -> android.support.v4.app.am:
    java.lang.CharSequence mBigContentTitle -> d
    java.lang.CharSequence mSummaryText -> e
    boolean mSummaryTextSet -> f
android.support.v4.app.NotificationCompatHoneycomb -> android.support.v4.app.an:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap) -> a
android.support.v4.app.NotificationCompatIceCreamSandwich -> android.support.v4.app.ao:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean) -> a
android.support.v4.app.NotificationCompatJellybean -> android.support.v4.app.ap:
    android.app.Notification$Builder b -> a
    void addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> a
    void addBigTextStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence) -> a
    void addBigPictureStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap,android.graphics.Bitmap,boolean) -> a
    void addInboxStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList) -> a
    android.app.Notification build() -> a
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.aq:
android.support.v4.content.Loader -> android.support.v4.a.a:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    boolean mProcessingChange -> g
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void startLoading() -> a
    void onStartLoading() -> b
    void stopLoading() -> c
    void onStopLoading() -> d
    void reset() -> e
    void onReset() -> f
    java.lang.String dataToString(java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.a.b:
android.support.v4.os.ParcelableCompat -> android.support.v4.b.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.b.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.b.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.b.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.b.e:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.ArrayMap -> android.support.v4.c.a:
    android.support.v4.util.MapCollections mCollections -> a
    android.support.v4.util.MapCollections getCollection() -> b
    void putAll(java.util.Map) -> putAll
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
android.support.v4.util.ArrayMap$1 -> android.support.v4.c.b:
    android.support.v4.util.ArrayMap this$0 -> a
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.ContainerHelpers -> android.support.v4.c.c:
    int[] EMPTY_INTS -> a
    long[] EMPTY_LONGS -> b
    java.lang.Object[] EMPTY_OBJECTS -> c
    int idealIntArraySize(int) -> a
    int idealByteArraySize(int) -> b
    boolean equal(java.lang.Object,java.lang.Object) -> a
    int binarySearch(int[],int,int) -> a
android.support.v4.util.DebugUtils -> android.support.v4.c.d:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.e:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.LruCache -> android.support.v4.c.f:
    java.util.LinkedHashMap map -> a
    int size -> b
    int maxSize -> c
    int putCount -> d
    int createCount -> e
    int evictionCount -> f
    int hitCount -> g
    int missCount -> h
    java.lang.Object get(java.lang.Object) -> a
    java.lang.Object put(java.lang.Object,java.lang.Object) -> a
    void trimToSize(int) -> a
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> a
    java.lang.Object create(java.lang.Object) -> b
    int safeSizeOf(java.lang.Object,java.lang.Object) -> c
    int sizeOf(java.lang.Object,java.lang.Object) -> b
    java.lang.String toString() -> toString
android.support.v4.util.MapCollections -> android.support.v4.c.g:
    android.support.v4.util.MapCollections$EntrySet mEntrySet -> b
    android.support.v4.util.MapCollections$KeySet mKeySet -> c
    android.support.v4.util.MapCollections$ValuesCollection mValues -> d
    boolean containsAllHelper(java.util.Map,java.util.Collection) -> a
    boolean removeAllHelper(java.util.Map,java.util.Collection) -> b
    boolean retainAllHelper(java.util.Map,java.util.Collection) -> c
    java.lang.Object[] toArrayHelper(int) -> b
    java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> a
    boolean equalsSetHelper(java.util.Set,java.lang.Object) -> a
    java.util.Set getEntrySet() -> d
    java.util.Set getKeySet() -> e
    java.util.Collection getValues() -> f
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.MapCollections$ArrayIterator -> android.support.v4.c.h:
    int mOffset -> a
    int mSize -> b
    int mIndex -> c
    boolean mCanRemove -> d
    android.support.v4.util.MapCollections this$0 -> e
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
android.support.v4.util.MapCollections$EntrySet -> android.support.v4.c.i:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.util.Map$Entry) -> a
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean add(java.lang.Object) -> add
android.support.v4.util.MapCollections$KeySet -> android.support.v4.c.j:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
android.support.v4.util.MapCollections$MapIterator -> android.support.v4.c.k:
    int mEnd -> a
    int mIndex -> b
    boolean mEntryValid -> c
    android.support.v4.util.MapCollections this$0 -> d
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> a
    void remove() -> remove
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object next() -> next
android.support.v4.util.MapCollections$ValuesCollection -> android.support.v4.c.l:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v4.util.SimpleArrayMap -> android.support.v4.c.m:
    java.lang.Object[] mBaseCache -> b
    int mBaseCacheSize -> c
    java.lang.Object[] mTwiceBaseCache -> d
    int mTwiceBaseCacheSize -> e
    int[] mHashes -> f
    java.lang.Object[] mArray -> g
    int mSize -> h
    int indexOf(java.lang.Object,int) -> a
    int indexOfNull() -> a
    void allocArrays(int) -> e
    void freeArrays(int[],java.lang.Object[],int) -> a
    void clear() -> clear
    void ensureCapacity(int) -> a
    boolean containsKey(java.lang.Object) -> containsKey
    int indexOfValue(java.lang.Object) -> a
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object keyAt(int) -> b
    java.lang.Object valueAt(int) -> c
    java.lang.Object setValueAt(int,java.lang.Object) -> a
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeAt(int) -> d
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.c.n:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    android.support.v4.util.SparseArrayCompat clone() -> a
    void gc() -> d
    int size() -> b
    int keyAt(int) -> a
    java.lang.Object valueAt(int) -> b
    void clear() -> c
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.a:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> b
    java.lang.Object DEFAULT_DELEGATE -> c
    java.lang.Object mBridge -> a
    java.lang.Object getBridge() -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.b:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.c:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.d:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.e:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.f:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.g:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.h:
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> a
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.i:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.j:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.k:
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> a
    java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.l:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.m:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.GravityCompat -> android.support.v4.view.n:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> a
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.o:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.p:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.q:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompatJellybeanMr1 -> android.support.v4.view.r:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.KeyEventCompat -> android.support.v4.view.s:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
    void startTracking(android.view.KeyEvent) -> b
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.t:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.u:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.v:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.w:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatEclair -> android.support.v4.view.x:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.y:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.MotionEventCompat -> android.support.v4.view.z:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionMasked(android.view.MotionEvent) -> a
    int getActionIndex(android.view.MotionEvent) -> b
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> c
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.aa:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.ab:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.ac:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.ad:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.PagerAdapter -> android.support.v4.view.ae:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    void startUpdate(android.view.View) -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    void finishUpdate(android.view.View) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> b
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    int getItemPosition(java.lang.Object) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    float getPageWidth(int) -> a
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.af:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.ag:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.ah:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.ai:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.aj:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.ViewCompat -> android.support.v4.view.ak:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    android.view.ViewParent getParentForAccessibility(android.view.View) -> f
    boolean isOpaque(android.view.View) -> g
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.al:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    long getFrameTime() -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    android.view.ViewParent getParentForAccessibility(android.view.View) -> f
    boolean isOpaque(android.view.View) -> g
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> android.support.v4.view.am:
    boolean isOpaque(android.view.View) -> g
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.an:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.ao:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ap:
    boolean canScrollHorizontally(android.view.View,int) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.aq:
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    android.view.ViewParent getParentForAccessibility(android.view.View) -> f
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.ar:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
android.support.v4.view.ViewCompat$KitKatViewCompatImpl -> android.support.v4.view.as:
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.at:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    android.view.ViewParent getParentForAccessibility(android.view.View) -> f
    boolean isOpaque(android.view.View) -> g
android.support.v4.view.ViewCompatEclairMr1 -> android.support.v4.view.au:
    boolean isOpaque(android.view.View) -> a
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.av:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.aw:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.ax:
    boolean canScrollHorizontally(android.view.View,int) -> a
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> a
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ay:
    void postInvalidateOnAnimation(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> b
    void setImportantForAccessibility(android.view.View,int) -> a
    android.view.ViewParent getParentForAccessibility(android.view.View) -> c
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.az:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> a
android.support.v4.view.ViewGroupCompat -> android.support.v4.view.ba:
    android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl IMPL -> a
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl -> android.support.v4.view.bb:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl -> android.support.v4.view.bc:
android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl -> android.support.v4.view.bd:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatJellybeanMR2Impl -> android.support.v4.view.be:
android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl -> android.support.v4.view.bf:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompatHC -> android.support.v4.view.bg:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    int mExpectedAdapterCount -> b
    java.util.Comparator COMPARATOR -> c
    android.view.animation.Interpolator sInterpolator -> d
    java.util.ArrayList mItems -> e
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> f
    android.graphics.Rect mTempRect -> g
    android.support.v4.view.PagerAdapter mAdapter -> h
    int mCurItem -> i
    int mRestoredCurItem -> j
    android.os.Parcelable mRestoredAdapterState -> k
    java.lang.ClassLoader mRestoredClassLoader -> l
    android.widget.Scroller mScroller -> m
    android.support.v4.view.ViewPager$PagerObserver mObserver -> n
    int mPageMargin -> o
    android.graphics.drawable.Drawable mMarginDrawable -> p
    int mTopPageBounds -> q
    int mBottomPageBounds -> r
    float mFirstOffset -> s
    float mLastOffset -> t
    int mChildWidthMeasureSpec -> u
    int mChildHeightMeasureSpec -> v
    boolean mInLayout -> w
    boolean mScrollingCacheEnabled -> x
    boolean mPopulatePending -> y
    int mOffscreenPageLimit -> z
    boolean mIsBeingDragged -> A
    boolean mIsUnableToDrag -> B
    int mDefaultGutterSize -> C
    int mGutterSize -> D
    int mTouchSlop -> E
    float mLastMotionX -> F
    float mLastMotionY -> G
    float mInitialMotionX -> H
    float mInitialMotionY -> I
    int mActivePointerId -> J
    android.view.VelocityTracker mVelocityTracker -> K
    int mMinimumVelocity -> L
    int mMaximumVelocity -> M
    int mFlingDistance -> N
    int mCloseEnough -> O
    boolean mFakeDragging -> P
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> Q
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> R
    boolean mFirstLayout -> S
    boolean mNeedCalculatePageOffsets -> T
    boolean mCalledSuper -> U
    int mDecorChildCount -> V
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> W
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> Z
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> aa
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> ab
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> ac
    int mDrawingOrder -> ad
    java.util.ArrayList mDrawingOrderedChildren -> ae
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> af
    java.lang.Runnable mEndScrollRunnable -> ag
    int mScrollState -> ah
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> f
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    int getClientWidth() -> getClientWidth
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> a
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> a
    void populate() -> b
    void populate(int) -> a
    void sortChildDrawingOrder() -> g
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll(boolean) -> a
    boolean isGutterDrag(float,float) -> a
    void enableLayers(boolean) -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestParentDisallowInterceptTouchEvent(boolean) -> c
    boolean performDrag(float) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> h
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> i
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> c
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> c
    boolean pageRight() -> d
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    int[] access$400() -> e
android.support.v4.view.ViewPager$1 -> android.support.v4.view.bh:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.bi:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.bj:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.bk:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.bl:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.bm:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.bn:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.bo:
    void transformPage(android.view.View,float) -> a
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.bp:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.bq:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.br:
    int compare(android.view.View,android.view.View) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.a.a:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> a
    java.lang.Object mInfo -> b
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object) -> a
    java.lang.Object getInfo() -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void setSource(android.view.View) -> a
    void addChild(android.view.View) -> b
    int getActions() -> b
    void addAction(int) -> a
    void setParent(android.view.View) -> c
    void getBoundsInParent(android.graphics.Rect) -> a
    void setBoundsInParent(android.graphics.Rect) -> b
    void getBoundsInScreen(android.graphics.Rect) -> c
    void setBoundsInScreen(android.graphics.Rect) -> d
    boolean isCheckable() -> c
    boolean isChecked() -> d
    boolean isFocusable() -> e
    void setFocusable(boolean) -> a
    boolean isFocused() -> f
    void setFocused(boolean) -> b
    boolean isVisibleToUser() -> g
    void setVisibleToUser(boolean) -> c
    boolean isAccessibilityFocused() -> h
    void setAccessibilityFocused(boolean) -> d
    boolean isSelected() -> i
    void setSelected(boolean) -> e
    boolean isClickable() -> j
    void setClickable(boolean) -> f
    boolean isLongClickable() -> k
    void setLongClickable(boolean) -> g
    boolean isEnabled() -> l
    void setEnabled(boolean) -> h
    boolean isPassword() -> m
    boolean isScrollable() -> n
    java.lang.CharSequence getPackageName() -> o
    void setPackageName(java.lang.CharSequence) -> a
    java.lang.CharSequence getClassName() -> p
    void setClassName(java.lang.CharSequence) -> b
    java.lang.CharSequence getText() -> q
    java.lang.CharSequence getContentDescription() -> r
    void setContentDescription(java.lang.CharSequence) -> c
    void recycle() -> s
    java.lang.String getViewIdResourceName() -> t
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String getActionSymbolicName(int) -> b
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.a.b:
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    java.lang.CharSequence getText(java.lang.Object) -> f
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isClickable(java.lang.Object) -> i
    boolean isEnabled(java.lang.Object) -> j
    boolean isFocusable(java.lang.Object) -> k
    boolean isFocused(java.lang.Object) -> l
    boolean isLongClickable(java.lang.Object) -> m
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    boolean isSelected(java.lang.Object) -> p
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setClickable(java.lang.Object,boolean) -> a
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void setEnabled(java.lang.Object,boolean) -> b
    void setFocusable(java.lang.Object,boolean) -> c
    void setFocused(java.lang.Object,boolean) -> d
    void setLongClickable(java.lang.Object,boolean) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void setSelected(java.lang.Object,boolean) -> f
    void setSource(java.lang.Object,android.view.View) -> c
    void recycle(java.lang.Object) -> q
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.a.c:
    java.lang.Object obtain(java.lang.Object) -> a
    void setSource(java.lang.Object,android.view.View) -> c
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void addAction(java.lang.Object,int) -> a
    void setParent(java.lang.Object,android.view.View) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isFocusable(java.lang.Object) -> k
    void setFocusable(java.lang.Object,boolean) -> c
    boolean isFocused(java.lang.Object) -> l
    void setFocused(java.lang.Object,boolean) -> d
    boolean isVisibleToUser(java.lang.Object) -> r
    void setVisibleToUser(java.lang.Object,boolean) -> g
    boolean isAccessibilityFocused(java.lang.Object) -> s
    void setAccessibilityFocused(java.lang.Object,boolean) -> h
    boolean isSelected(java.lang.Object) -> p
    void setSelected(java.lang.Object,boolean) -> f
    boolean isClickable(java.lang.Object) -> i
    void setClickable(java.lang.Object,boolean) -> a
    boolean isLongClickable(java.lang.Object) -> m
    void setLongClickable(java.lang.Object,boolean) -> e
    boolean isEnabled(java.lang.Object) -> j
    void setEnabled(java.lang.Object,boolean) -> b
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    java.lang.CharSequence getText(java.lang.Object) -> f
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void recycle(java.lang.Object) -> q
    java.lang.String getViewIdResourceName(java.lang.Object) -> t
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.a.d:
    boolean isVisibleToUser(java.lang.Object) -> r
    void setVisibleToUser(java.lang.Object,boolean) -> g
    boolean isAccessibilityFocused(java.lang.Object) -> s
    void setAccessibilityFocused(java.lang.Object,boolean) -> h
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl -> android.support.v4.view.a.e:
    java.lang.String getViewIdResourceName(java.lang.Object) -> t
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl -> android.support.v4.view.a.f:
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.a.g:
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    java.lang.CharSequence getText(java.lang.Object) -> f
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isClickable(java.lang.Object) -> i
    boolean isEnabled(java.lang.Object) -> j
    boolean isFocusable(java.lang.Object) -> k
    boolean isFocused(java.lang.Object) -> l
    boolean isVisibleToUser(java.lang.Object) -> r
    boolean isAccessibilityFocused(java.lang.Object) -> s
    boolean isLongClickable(java.lang.Object) -> m
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    boolean isSelected(java.lang.Object) -> p
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setClickable(java.lang.Object,boolean) -> a
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void setEnabled(java.lang.Object,boolean) -> b
    void setFocusable(java.lang.Object,boolean) -> c
    void setFocused(java.lang.Object,boolean) -> d
    void setVisibleToUser(java.lang.Object,boolean) -> g
    void setAccessibilityFocused(java.lang.Object,boolean) -> h
    void setLongClickable(java.lang.Object,boolean) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void setSelected(java.lang.Object,boolean) -> f
    void setSource(java.lang.Object,android.view.View) -> c
    void recycle(java.lang.Object) -> q
    java.lang.String getViewIdResourceName(java.lang.Object) -> t
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> android.support.v4.view.a.h:
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    java.lang.CharSequence getText(java.lang.Object) -> f
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isClickable(java.lang.Object) -> i
    boolean isEnabled(java.lang.Object) -> j
    boolean isFocusable(java.lang.Object) -> k
    boolean isFocused(java.lang.Object) -> l
    boolean isLongClickable(java.lang.Object) -> m
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    boolean isSelected(java.lang.Object) -> p
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setClickable(java.lang.Object,boolean) -> a
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void setEnabled(java.lang.Object,boolean) -> b
    void setFocusable(java.lang.Object,boolean) -> c
    void setFocused(java.lang.Object,boolean) -> d
    void setLongClickable(java.lang.Object,boolean) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void setSelected(java.lang.Object,boolean) -> f
    void setSource(java.lang.Object,android.view.View) -> c
    void recycle(java.lang.Object) -> q
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean -> android.support.v4.view.a.i:
    boolean isVisibleToUser(java.lang.Object) -> a
    void setVisibleToUser(java.lang.Object,boolean) -> a
    boolean isAccessibilityFocused(java.lang.Object) -> b
    void setAccesibilityFocused(java.lang.Object,boolean) -> b
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2 -> android.support.v4.view.a.j:
    java.lang.String getViewIdResourceName(java.lang.Object) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.a.k:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> a
    java.lang.Object mProvider -> b
    java.lang.Object getProvider() -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> b
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.a.l:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.a.m:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.a.n:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> b
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    java.lang.Object createAccessibilityNodeInfo(int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl -> android.support.v4.view.a.o:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1 -> android.support.v4.view.a.p:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl this$0 -> b
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    java.lang.Object findFocus(int) -> b
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.a.q:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.a.r:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.a.s:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.a.t:
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat -> android.support.v4.view.a.u:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1 -> android.support.v4.view.a.v:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
    android.view.accessibility.AccessibilityNodeInfo findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge -> android.support.v4.view.a.w:
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    java.lang.Object findFocus(int) -> b
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    int[] LAYOUT_ATTRS -> a
    int mMinDrawerMargin -> b
    int mScrimColor -> c
    float mScrimOpacity -> d
    android.graphics.Paint mScrimPaint -> e
    android.support.v4.widget.ViewDragHelper mLeftDragger -> f
    android.support.v4.widget.ViewDragHelper mRightDragger -> g
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> h
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> i
    int mDrawerState -> j
    boolean mInLayout -> k
    boolean mFirstLayout -> l
    int mLockModeLeft -> m
    int mLockModeRight -> n
    boolean mDisallowInterceptRequested -> o
    boolean mChildrenCanceledTouch -> p
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> q
    float mInitialMotionX -> r
    float mInitialMotionY -> s
    android.graphics.drawable.Drawable mShadowLeft -> t
    android.graphics.drawable.Drawable mShadowRight -> u
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> a
    int getDrawerLockMode(android.view.View) -> a
    void updateDrawerState(int,int,android.view.View) -> a
    void dispatchOnDrawerClosed(android.view.View) -> b
    void dispatchOnDrawerOpened(android.view.View) -> c
    void dispatchOnDrawerSlide(android.view.View,float) -> a
    void setDrawerViewOffset(android.view.View,float) -> b
    float getDrawerViewOffset(android.view.View) -> d
    int getDrawerViewAbsoluteGravity(android.view.View) -> e
    boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> a
    android.view.View findOpenDrawer() -> a
    android.view.View findDrawerWithGravity(int) -> a
    java.lang.String gravityToString(int) -> b
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean hasOpaqueBackground(android.view.View) -> k
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> f
    boolean isDrawerView(android.view.View) -> g
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> b
    void closeDrawers(boolean) -> a
    void openDrawer(android.view.View) -> h
    void closeDrawer(android.view.View) -> i
    boolean isDrawerVisible(android.view.View) -> j
    boolean hasPeekingDrawer() -> d
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean hasVisibleDrawer() -> e
    android.view.View findVisibleDrawer() -> f
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    int[] access$100() -> c
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.a:
    void onDrawerSlide(android.view.View,float) -> a
    void onDrawerOpened(android.view.View) -> a
    void onDrawerClosed(android.view.View) -> b
    void onDrawerStateChanged(int) -> a
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.b:
    int gravity -> a
    float onScreen -> b
    boolean isPeeking -> c
    boolean knownOpen -> d
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> a
    int lockModeLeft -> b
    int lockModeRight -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.c:
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.d:
    int mAbsGravity -> b
    android.support.v4.widget.ViewDragHelper mDragger -> c
    java.lang.Runnable mPeekRunnable -> d
    android.support.v4.widget.DrawerLayout this$0 -> a
    void removeCallbacks() -> a
    boolean tryCaptureView(android.view.View,int) -> a
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void closeOtherDrawer() -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getViewHorizontalDragRange(android.view.View) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.e:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.f:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.g:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.h:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.i:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.j:
    java.lang.Object mScroller -> a
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl IMPL -> b
    android.support.v4.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished() -> a
    int getCurrX() -> b
    int getCurrY() -> c
    int getFinalX() -> d
    int getFinalY() -> e
    boolean computeScrollOffset() -> f
    void startScroll(int,int,int,int,int) -> a
    void abortAnimation() -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.k:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> android.support.v4.widget.l:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> android.support.v4.widget.m:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.n:
android.support.v4.widget.ScrollerCompatGingerbread -> android.support.v4.widget.o:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    int mSliderFadeColor -> b
    int mCoveredFadeColor -> c
    android.graphics.drawable.Drawable mShadowDrawable -> d
    int mOverhangSize -> e
    boolean mCanSlide -> f
    android.view.View mSlideableView -> g
    float mSlideOffset -> h
    float mParallaxOffset -> i
    int mSlideRange -> j
    boolean mIsUnableToDrag -> k
    int mParallaxBy -> l
    float mInitialMotionX -> m
    float mInitialMotionY -> n
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> o
    android.support.v4.widget.ViewDragHelper mDragHelper -> p
    boolean mPreservedOpenState -> q
    boolean mFirstLayout -> r
    android.graphics.Rect mTmpRect -> s
    java.util.ArrayList mPostedRunnables -> t
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> a
    void setParallaxDistance(int) -> setParallaxDistance
    int getParallaxDistance() -> getParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    int getSliderFadeColor() -> getSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    void updateObscuredViewsVisibility(android.view.View) -> a
    void setAllChildrenVisible() -> a
    boolean viewIsOpaque(android.view.View) -> c
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane(android.view.View,int) -> a
    boolean openPane(android.view.View,int) -> b
    boolean openPane() -> b
    boolean closePane() -> c
    boolean isOpen() -> d
    boolean isSlideable() -> e
    void dimChildView(android.view.View,float,int) -> a
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> d
    boolean smoothSlideTo(float,int) -> a
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowResource(int) -> setShadowResource
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> a
    boolean isDimmed(android.view.View) -> b
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void access$900(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
    java.util.ArrayList access$1000(android.support.v4.widget.SlidingPaneLayout) -> a
android.support.v4.widget.SlidingPaneLayout$1 -> android.support.v4.widget.p:
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.q:
    android.view.View mChildView -> a
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.r:
    int[] ATTRS -> e
    float weight -> a
    boolean slideable -> b
    boolean dimWhenOffset -> c
    android.graphics.Paint dimPaint -> d
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.s:
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.t:
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.u:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.v:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.w:
    java.lang.reflect.Method mGetDisplayList -> a
    java.lang.reflect.Field mRecreateDisplayList -> b
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.x:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.y:
    int mDragState -> a
    int mTouchSlop -> b
    int mActivePointerId -> c
    float[] mInitialMotionX -> d
    float[] mInitialMotionY -> e
    float[] mLastMotionX -> f
    float[] mLastMotionY -> g
    int[] mInitialEdgesTouched -> h
    int[] mEdgeDragsInProgress -> i
    int[] mEdgeDragsLocked -> j
    int mPointersDown -> k
    android.view.VelocityTracker mVelocityTracker -> l
    float mMaxVelocity -> m
    float mMinVelocity -> n
    int mEdgeSize -> o
    int mTrackingEdges -> p
    android.support.v4.widget.ScrollerCompat mScroller -> q
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> r
    android.view.View mCapturedView -> s
    boolean mReleaseInProgress -> t
    android.view.ViewGroup mParentView -> u
    android.view.animation.Interpolator sInterpolator -> v
    java.lang.Runnable mSetIdleRunnable -> w
    int getViewDragState() -> a
    int getEdgeSize() -> b
    void captureChildView(android.view.View,int) -> a
    android.view.View getCapturedView() -> c
    int getTouchSlop() -> d
    void cancel() -> e
    void abort() -> f
    boolean smoothSlideViewTo(android.view.View,int,int) -> a
    boolean settleCapturedViewAt(int,int) -> a
    boolean forceSettleCapturedViewAt(int,int,int,int) -> a
    int computeSettleDuration(android.view.View,int,int,int,int) -> a
    int computeAxisDuration(int,int,int) -> a
    int clampMag(int,int,int) -> b
    float clampMag(float,float,float) -> a
    float distanceInfluenceForSnapDuration(float) -> a
    boolean continueSettling(boolean) -> a
    void dispatchViewReleased(float,float) -> a
    void clearMotionHistory() -> g
    void clearMotionHistory(int) -> d
    void ensureMotionHistorySizeForId(int) -> e
    void saveInitialMotion(float,float,int) -> a
    void saveLastMotion(android.view.MotionEvent) -> c
    boolean isPointerDown(int) -> a
    void setDragState(int) -> b
    boolean tryCaptureViewForDrag(android.view.View,int) -> b
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> a
    void processTouchEvent(android.view.MotionEvent) -> b
    void reportNewEdgeDrags(float,float,int) -> b
    boolean checkNewEdgeDrag(float,float,int,int) -> a
    boolean checkTouchSlop(android.view.View,float,float) -> a
    boolean checkTouchSlop(int) -> c
    boolean checkTouchSlop(int,int) -> b
    void releaseViewForPointerUp() -> h
    void dragTo(int,int,int,int) -> b
    boolean isCapturedViewUnder(int,int) -> c
    boolean isViewUnder(android.view.View,int,int) -> b
    android.view.View findTopChildUnder(int,int) -> d
    int getEdgesTouched(int,int) -> e
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.z:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.aa:
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getOrderedChildIndex(int) -> c
    int getViewHorizontalDragRange(android.view.View) -> a
    int getViewVerticalDragRange(android.view.View) -> b
    boolean tryCaptureView(android.view.View,int) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
com.hippo.ehviewer.AppContext -> com.hippo.ehviewer.AppContext:
    java.lang.Thread$UncaughtExceptionHandler mDefaultHandler -> a
    com.hippo.ehviewer.util.EhClient mEhClient -> b
    com.hippo.ehviewer.util.ThreadPool mNetworkThreadPool -> c
    void onCreate() -> onCreate
    com.hippo.ehviewer.util.EhClient getEhClient() -> a
    com.hippo.ehviewer.util.ThreadPool getNetworkThreadPool() -> b
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    boolean handleException(java.lang.Throwable) -> a
com.hippo.ehviewer.BeautifyScreen -> com.hippo.ehviewer.a:
    android.content.Context mContext -> a
    int mStatusBarHeight -> b
    int mNavigationBarHeight -> c
    int sbbId -> d
    int nbbId -> e
    void init(android.content.Context) -> a
    void ColourfyScreen(android.app.Activity) -> a
    boolean isPortrait(android.app.Activity) -> c
    void fixColour(android.app.Activity) -> b
com.hippo.ehviewer.DiskCache -> com.hippo.ehviewer.b:
    java.lang.String TAG -> a
    android.content.Context mContext -> b
    android.graphics.BitmapFactory$Options opt -> c
    com.jakewharton.disklrucache.DiskLruCache diskLruCache -> d
    long size() -> a
    long maxSize() -> b
    void setMaxSize(long) -> a
    void close() -> c
    java.lang.Object get(java.lang.String,int) -> a
    boolean put(java.lang.String,java.io.InputStream) -> a
    void clear() -> d
com.hippo.ehviewer.DiskCache$CacheOutputStream -> com.hippo.ehviewer.c:
    com.jakewharton.disklrucache.DiskLruCache$Editor editor -> b
    boolean failed -> c
    com.hippo.ehviewer.DiskCache this$0 -> a
    void close() -> close
    void flush() -> flush
    void write(int) -> write
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
com.hippo.ehviewer.DownloadInfo -> com.hippo.ehviewer.d:
    java.lang.String gid -> a
    java.lang.String thumb -> b
    java.lang.String title -> c
    int status -> d
    boolean type -> e
    java.lang.String detailUrlStr -> f
    int pageSum -> g
    int lastStartIndex -> h
    java.lang.String pageUrlStr -> i
    float totalSize -> j
    float downloadSize -> k
com.hippo.ehviewer.ImageLoadManager -> com.hippo.ehviewer.e:
    android.content.Context mContext -> a
    java.util.Stack mLoadCacheTask -> b
    com.hippo.ehviewer.ImageLoadManager$ImageDownloadManager mImageDownloadTask -> c
    android.support.v4.util.LruCache mMemoryCache -> d
    com.hippo.ehviewer.DiskCache mDiskCache -> e
    com.hippo.ehviewer.ImageLoadManager$LoadTask curLoadTask -> f
    com.hippo.ehviewer.ImageLoadManager$LoadTask emptyLoadTask -> g
    android.os.Handler loadImageHandler -> h
    void add(com.hippo.ehviewer.widget.LoadImageView,boolean) -> a
    java.util.Stack access$0(com.hippo.ehviewer.ImageLoadManager) -> a
    void access$1(com.hippo.ehviewer.ImageLoadManager,com.hippo.ehviewer.ImageLoadManager$LoadTask) -> a
    com.hippo.ehviewer.ImageLoadManager$LoadTask access$2(com.hippo.ehviewer.ImageLoadManager) -> b
    android.support.v4.util.LruCache access$3(com.hippo.ehviewer.ImageLoadManager) -> c
    com.hippo.ehviewer.DiskCache access$4(com.hippo.ehviewer.ImageLoadManager) -> d
    com.hippo.ehviewer.ImageLoadManager$ImageDownloadManager access$5(com.hippo.ehviewer.ImageLoadManager) -> e
    android.os.Handler access$6() -> a
    android.content.Context access$7(com.hippo.ehviewer.ImageLoadManager) -> f
com.hippo.ehviewer.ImageLoadManager$1 -> com.hippo.ehviewer.f:
    void handleMessage(android.os.Message) -> handleMessage
com.hippo.ehviewer.ImageLoadManager$ImageDownloadManager -> com.hippo.ehviewer.g:
    java.util.Stack mDownloadTask -> b
    int workingDownloadThreads -> c
    com.hippo.ehviewer.ImageLoadManager this$0 -> a
    void add(com.hippo.ehviewer.ImageLoadManager$LoadTask) -> a
    java.util.Stack access$0(com.hippo.ehviewer.ImageLoadManager$ImageDownloadManager) -> a
    int access$1(com.hippo.ehviewer.ImageLoadManager$ImageDownloadManager) -> b
    void access$2(com.hippo.ehviewer.ImageLoadManager$ImageDownloadManager,int) -> a
    com.hippo.ehviewer.ImageLoadManager access$3(com.hippo.ehviewer.ImageLoadManager$ImageDownloadManager) -> c
com.hippo.ehviewer.ImageLoadManager$ImageDownloadManager$DownloadImageTask -> com.hippo.ehviewer.h:
    com.hippo.ehviewer.ImageLoadManager$ImageDownloadManager this$1 -> a
    void run() -> run
com.hippo.ehviewer.ImageLoadManager$LoadFromCacheTask -> com.hippo.ehviewer.i:
    com.hippo.ehviewer.ImageLoadManager this$0 -> a
    void run() -> run
com.hippo.ehviewer.ImageLoadManager$LoadTask -> com.hippo.ehviewer.j:
    com.hippo.ehviewer.widget.LoadImageView liv -> a
    boolean download -> b
    android.graphics.Bitmap bitmap -> c
    com.hippo.ehviewer.ImageLoadManager this$0 -> d
com.hippo.ehviewer.ListMangaDetail -> com.hippo.ehviewer.k:
    java.lang.String gid -> a
    java.lang.String token -> b
    java.lang.String archiver_key -> c
    java.lang.String title -> d
    java.lang.String title_jpn -> e
    int category -> f
    java.lang.String thumb -> g
    java.lang.String uploader -> h
    java.lang.String posted -> i
    java.lang.String filecount -> j
    long filesize -> k
    boolean expunged -> l
    java.lang.String rating -> m
    java.lang.String torrentcount -> n
    java.lang.String[][] tags -> o
com.hippo.ehviewer.ListUrls -> com.hippo.ehviewer.l:
    int page -> a
    int numPerPage -> b
    int max -> c
    int type -> d
    boolean mAdvsearch -> e
    int advsearchType -> f
    boolean isMinRating -> g
    int minRating -> h
    java.lang.String search -> i
    boolean equals(java.lang.Object) -> equals
    boolean isSameUrls(com.hippo.ehviewer.ListUrls) -> a
    com.hippo.ehviewer.ListUrls clone() -> a
    int getType() -> b
    java.lang.String getSearch() -> c
    void setAdvance(int) -> a
    void setAdvance(int,int) -> a
    boolean isAdvance() -> d
    int getAdvanceType() -> e
    boolean isMinRating() -> f
    int getMinRating() -> g
    void setMax(int) -> b
    int getMax() -> h
    boolean setPage(int) -> c
    int getPage() -> i
    void setNumPerPage(int) -> d
    int getNumPerPage() -> j
    java.lang.String getUrl() -> k
    java.lang.Object clone() -> clone
com.hippo.ehviewer.MangaDetail -> com.hippo.ehviewer.m:
    java.lang.String pages -> p
    java.lang.String size -> q
    java.lang.String resized -> r
    java.lang.String parent -> s
    java.lang.String visible -> t
    java.lang.String language -> u
    java.lang.String people -> v
    java.lang.String firstPage -> w
    int previewSum -> x
    int previewPerPage -> y
    com.hippo.ehviewer.PageList[] previewLists -> z
com.hippo.ehviewer.PageList -> com.hippo.ehviewer.n:
    com.hippo.ehviewer.PageList$Row curRow -> b
    java.util.ArrayList rowArray -> a
    void addItem(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
com.hippo.ehviewer.PageList$Row -> com.hippo.ehviewer.o:
    java.lang.String imageUrl -> a
    java.util.ArrayList itemArray -> b
    int startIndex -> c
    com.hippo.ehviewer.PageList this$0 -> d
    void addItem(int,int,int,int,java.lang.String) -> a
com.hippo.ehviewer.PageList$Row$Item -> com.hippo.ehviewer.p:
    int xOffset -> a
    int yOffset -> b
    int width -> c
    int height -> d
    java.lang.String url -> e
    com.hippo.ehviewer.PageList$Row this$1 -> f
com.hippo.ehviewer.R -> com.hippo.ehviewer.q:
com.hippo.ehviewer.R$styleable -> com.hippo.ehviewer.r:
    int[] AutoWrapLayout -> AutoWrapLayout
    int AutoWrapLayout_baseLine -> AutoWrapLayout_baseLine
    int[] CheckImage -> CheckImage
    int CheckImage_mask -> CheckImage_mask
    int[] SuperImageView -> SuperImageView
    int SuperImageView_adjustViewBounds -> SuperImageView_adjustViewBounds
    int SuperImageView_baseline -> SuperImageView_baseline
    int SuperImageView_baselineAlignBottom -> SuperImageView_baselineAlignBottom
    int SuperImageView_cropToPadding -> SuperImageView_cropToPadding
    int SuperImageView_drawableAlpha -> SuperImageView_drawableAlpha
    int SuperImageView_maxHeight -> SuperImageView_maxHeight
    int SuperImageView_maxWidth -> SuperImageView_maxWidth
    int SuperImageView_scaleType -> SuperImageView_scaleType
    int SuperImageView_src -> SuperImageView_src
    int SuperImageView_tint -> SuperImageView_tint
com.hippo.ehviewer.StartActivity -> com.hippo.ehviewer.StartActivity:
    java.lang.String lastCrash -> a
    boolean isAnimationOver -> b
    boolean isCheckOver -> c
    android.app.AlertDialog createWarningDialog() -> a
    android.app.AlertDialog createNetworkErrorDialog() -> b
    android.app.AlertDialog createSendCrashDialog() -> c
    android.app.AlertDialog createNoSdCardDialog() -> d
    void onCreate(android.os.Bundle) -> onCreate
    void check(int) -> a
    void checkOver() -> e
    boolean isNetworkAvailable() -> f
    void redirectTo() -> g
    void access$0(com.hippo.ehviewer.StartActivity,int) -> a
    java.lang.String access$1(com.hippo.ehviewer.StartActivity) -> a
    void access$2(com.hippo.ehviewer.StartActivity,java.lang.String) -> a
    void access$3(com.hippo.ehviewer.StartActivity) -> b
    boolean access$4(com.hippo.ehviewer.StartActivity) -> c
    void access$5(com.hippo.ehviewer.StartActivity) -> d
    void access$6(com.hippo.ehviewer.StartActivity,boolean) -> a
com.hippo.ehviewer.StartActivity$1 -> com.hippo.ehviewer.s:
    com.hippo.ehviewer.StartActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hippo.ehviewer.StartActivity$2 -> com.hippo.ehviewer.t:
    com.hippo.ehviewer.StartActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hippo.ehviewer.StartActivity$3 -> com.hippo.ehviewer.u:
    com.hippo.ehviewer.StartActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hippo.ehviewer.StartActivity$4 -> com.hippo.ehviewer.v:
    com.hippo.ehviewer.StartActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hippo.ehviewer.StartActivity$5 -> com.hippo.ehviewer.w:
    com.hippo.ehviewer.StartActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.hippo.ehviewer.StartActivity access$0(com.hippo.ehviewer.StartActivity$5) -> a
com.hippo.ehviewer.StartActivity$5$1 -> com.hippo.ehviewer.x:
    com.hippo.ehviewer.StartActivity$5 this$1 -> a
    void onClick(android.view.View) -> onClick
com.hippo.ehviewer.StartActivity$6 -> com.hippo.ehviewer.y:
    com.hippo.ehviewer.StartActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hippo.ehviewer.StartActivity$7 -> com.hippo.ehviewer.z:
    com.hippo.ehviewer.StartActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hippo.ehviewer.StartActivity$8 -> com.hippo.ehviewer.aa:
    com.hippo.ehviewer.StartActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hippo.ehviewer.StartActivity$9 -> com.hippo.ehviewer.ab:
    com.hippo.ehviewer.StartActivity this$0 -> a
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
com.hippo.ehviewer.UpdateHelper -> com.hippo.ehviewer.ac:
    com.hippo.ehviewer.AppContext mAppContext -> a
    com.hippo.ehviewer.UpdateHelper$OnCheckUpdateListener mListener -> b
    boolean mEnabled -> c
    android.os.Handler mHandler -> d
    com.hippo.ehviewer.UpdateHelper SetOnCheckUpdateListener(com.hippo.ehviewer.UpdateHelper$OnCheckUpdateListener) -> a
    void autoCheckUpdate() -> a
    void setEnabled(boolean) -> a
    void checkUpdate() -> b
    boolean access$0() -> c
    void access$1(boolean) -> b
    com.hippo.ehviewer.AppContext access$2(com.hippo.ehviewer.UpdateHelper) -> a
    com.hippo.ehviewer.UpdateHelper$OnCheckUpdateListener access$3(com.hippo.ehviewer.UpdateHelper) -> b
    android.os.Handler access$4() -> d
com.hippo.ehviewer.UpdateHelper$1 -> com.hippo.ehviewer.ad:
    void handleMessage(android.os.Message) -> handleMessage
com.hippo.ehviewer.UpdateHelper$2 -> com.hippo.ehviewer.ae:
    com.hippo.ehviewer.UpdateHelper this$0 -> a
    com.hippo.ehviewer.network.HttpHelper val$hp -> b
    java.lang.String run(com.hippo.ehviewer.util.ThreadPool$JobContext) -> a
    java.lang.Object run(com.hippo.ehviewer.util.ThreadPool$JobContext) -> b
com.hippo.ehviewer.UpdateHelper$3 -> com.hippo.ehviewer.af:
    com.hippo.ehviewer.UpdateHelper this$0 -> a
    com.hippo.ehviewer.network.HttpHelper val$hp -> b
    void onFutureDone(com.hippo.ehviewer.util.Future) -> a
com.hippo.ehviewer.UpdateHelper$CheckUpdatePackage -> com.hippo.ehviewer.ag:
    com.hippo.ehviewer.UpdateHelper$OnCheckUpdateListener listener -> a
    com.hippo.ehviewer.AppContext appContext -> b
    java.lang.String pageContext -> c
    com.hippo.ehviewer.network.HttpHelper hp -> d
    com.hippo.ehviewer.UpdateHelper this$0 -> e
com.hippo.ehviewer.UpdateHelper$OnCheckUpdateListener -> com.hippo.ehviewer.ah:
    void onSuccess(java.lang.String,long,java.lang.String,java.lang.String) -> a
    void onNoUpdate() -> a
    void onFailure(java.lang.String) -> a
com.hippo.ehviewer.UpdateHelper$UpdateListener -> com.hippo.ehviewer.ai:
    android.content.Context mContext -> a
    java.lang.String mFileName -> b
    android.app.NotificationManager mNotifyManager -> c
    android.support.v4.app.NotificationCompat$Builder mBuilder -> d
    void onDownloadStartConnect() -> a
    void onDownloadStartDownload(int) -> a
    void onDownloadStatusUpdate(int,int) -> a
    void onDownloadOver(int) -> b
com.hippo.ehviewer.activity.DownloadActivity -> com.hippo.ehviewer.activity.DownloadActivity:
    com.hippo.ehviewer.service.DownloadServiceConnection mServiceConn -> a
    java.util.List mDownloadInfos -> b
    com.hippo.ehviewer.activity.DownloadActivity$DlAdapter mDlAdapter -> c
    int longClickItemIndex -> d
    android.app.AlertDialog longClickDialog -> e
    android.content.BroadcastReceiver mReceiver -> f
    android.app.AlertDialog setLongClickDialog() -> a
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    void onCreate(android.os.Bundle) -> onCreate
    com.hippo.ehviewer.activity.DownloadActivity$DlAdapter access$0(com.hippo.ehviewer.activity.DownloadActivity) -> a
    java.util.List access$1(com.hippo.ehviewer.activity.DownloadActivity) -> b
    com.hippo.ehviewer.service.DownloadServiceConnection access$2(com.hippo.ehviewer.activity.DownloadActivity) -> c
    int access$3(com.hippo.ehviewer.activity.DownloadActivity) -> d
    android.app.AlertDialog access$4(com.hippo.ehviewer.activity.DownloadActivity) -> e
    void access$5(com.hippo.ehviewer.activity.DownloadActivity,int) -> a
com.hippo.ehviewer.activity.DownloadActivity$1 -> com.hippo.ehviewer.activity.a:
    com.hippo.ehviewer.activity.DownloadActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.hippo.ehviewer.activity.DownloadActivity$2 -> com.hippo.ehviewer.activity.b:
    com.hippo.ehviewer.activity.DownloadActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.hippo.ehviewer.activity.DownloadActivity$3 -> com.hippo.ehviewer.activity.c:
    com.hippo.ehviewer.activity.DownloadActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hippo.ehviewer.activity.DownloadActivity$4 -> com.hippo.ehviewer.activity.d:
    com.hippo.ehviewer.activity.DownloadActivity this$0 -> a
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
com.hippo.ehviewer.activity.DownloadActivity$DlAdapter -> com.hippo.ehviewer.activity.e:
    android.view.LayoutInflater mInflater -> b
    com.hippo.ehviewer.activity.DownloadActivity this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void setDownloadInfo(com.hippo.ehviewer.view.DownloadItemLayout,com.hippo.ehviewer.DownloadInfo) -> a
    com.hippo.ehviewer.activity.DownloadActivity access$0(com.hippo.ehviewer.activity.DownloadActivity$DlAdapter) -> a
com.hippo.ehviewer.activity.DownloadActivity$DlAdapter$1 -> com.hippo.ehviewer.activity.f:
    com.hippo.ehviewer.activity.DownloadActivity$DlAdapter this$1 -> a
    android.widget.ProgressBar val$pb -> b
    android.widget.TextView val$info -> c
    android.widget.ImageView val$action -> d
    com.hippo.ehviewer.view.DownloadItemLayout val$view -> e
    com.hippo.ehviewer.DownloadInfo val$di -> f
    void onClick(android.view.View) -> onClick
com.hippo.ehviewer.activity.DownloadActivity$DlAdapter$2 -> com.hippo.ehviewer.activity.g:
    com.hippo.ehviewer.activity.DownloadActivity$DlAdapter this$1 -> a
    android.widget.ProgressBar val$pb -> b
    android.widget.TextView val$info -> c
    android.widget.ImageView val$action -> d
    com.hippo.ehviewer.view.DownloadItemLayout val$view -> e
    com.hippo.ehviewer.DownloadInfo val$di -> f
    void onClick(android.view.View) -> onClick
com.hippo.ehviewer.activity.DownloadActivity$DlAdapter$3 -> com.hippo.ehviewer.activity.h:
    com.hippo.ehviewer.activity.DownloadActivity$DlAdapter this$1 -> a
    android.widget.ProgressBar val$pb -> b
    android.widget.TextView val$info -> c
    android.widget.ImageView val$action -> d
    com.hippo.ehviewer.view.DownloadItemLayout val$view -> e
    com.hippo.ehviewer.DownloadInfo val$di -> f
    void onClick(android.view.View) -> onClick
com.hippo.ehviewer.activity.DownloadActivity$DlAdapter$4 -> com.hippo.ehviewer.activity.i:
    com.hippo.ehviewer.activity.DownloadActivity$DlAdapter this$1 -> a
    com.hippo.ehviewer.DownloadInfo val$di -> b
    void onClick(android.view.View) -> onClick
com.hippo.ehviewer.activity.DownloadActivity$DlAdapter$5 -> com.hippo.ehviewer.activity.j:
    com.hippo.ehviewer.activity.DownloadActivity$DlAdapter this$1 -> a
    android.widget.ProgressBar val$pb -> b
    android.widget.TextView val$info -> c
    android.widget.ImageView val$action -> d
    com.hippo.ehviewer.view.DownloadItemLayout val$view -> e
    com.hippo.ehviewer.DownloadInfo val$di -> f
    void onClick(android.view.View) -> onClick
com.hippo.ehviewer.activity.FavouriteActivity -> com.hippo.ehviewer.activity.FavouriteActivity:
    com.hippo.ehviewer.activity.FavouriteActivity$FlAdapter flAdapter -> a
    java.util.ArrayList mFavouriteLmd -> b
    int longClickItemIndex -> c
    com.hippo.ehviewer.ImageLoadManager mImageLoadManager -> d
    com.hippo.ehviewer.service.DownloadServiceConnection mServiceConn -> e
    android.app.AlertDialog longClickDialog -> f
    android.app.AlertDialog setLongClickDialog() -> a
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onResume() -> onResume
    void onCreate(android.os.Bundle) -> onCreate
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onDestroy() -> onDestroy
    void buttonListItemCancel(android.view.View) -> buttonListItemCancel
    java.util.ArrayList access$0(com.hippo.ehviewer.activity.FavouriteActivity) -> a
    com.hippo.ehviewer.ImageLoadManager access$1(com.hippo.ehviewer.activity.FavouriteActivity) -> b
    int access$2(com.hippo.ehviewer.activity.FavouriteActivity) -> c
    com.hippo.ehviewer.activity.FavouriteActivity$FlAdapter access$3(com.hippo.ehviewer.activity.FavouriteActivity) -> d
    com.hippo.ehviewer.service.DownloadServiceConnection access$4(com.hippo.ehviewer.activity.FavouriteActivity) -> e
    android.app.AlertDialog access$5(com.hippo.ehviewer.activity.FavouriteActivity) -> f
    void access$6(com.hippo.ehviewer.activity.FavouriteActivity,int) -> a
com.hippo.ehviewer.activity.FavouriteActivity$1 -> com.hippo.ehviewer.activity.k:
    com.hippo.ehviewer.activity.FavouriteActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.hippo.ehviewer.activity.FavouriteActivity$2 -> com.hippo.ehviewer.activity.l:
    com.hippo.ehviewer.activity.FavouriteActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hippo.ehviewer.activity.FavouriteActivity$3 -> com.hippo.ehviewer.activity.m:
    com.hippo.ehviewer.activity.FavouriteActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.hippo.ehviewer.activity.FavouriteActivity$4 -> com.hippo.ehviewer.activity.n:
    com.hippo.ehviewer.activity.FavouriteActivity this$0 -> a
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
com.hippo.ehviewer.activity.FavouriteActivity$FlAdapter -> com.hippo.ehviewer.activity.o:
    android.view.LayoutInflater mInflater -> b
    com.hippo.ehviewer.activity.FavouriteActivity this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.hippo.ehviewer.activity.MangaActivity -> com.hippo.ehviewer.activity.MangaActivity:
    java.lang.String TAG -> a
    com.hippo.ehviewer.AppContext mAppContext -> b
    com.hippo.ehviewer.util.EhClient mEhClient -> c
    android.widget.RelativeLayout mainView -> d
    java.lang.String gid -> e
    java.lang.String title -> f
    int retryTimes -> g
    boolean stopFlag -> h
    int pageSum -> i
    int firstPage -> j
    int lastPage -> k
    java.lang.String allPrePageUrl -> l
    java.lang.String allNextPageUrl -> m
    boolean getPrePage -> n
    boolean mStop -> o
    java.io.File mFolder -> p
    com.hippo.ehviewer.gallery.data.ImageSet mImageSet -> q
    java.util.List imagesUrl -> r
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onResume() -> onResume
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    boolean access$0(com.hippo.ehviewer.activity.MangaActivity) -> a
    java.lang.String access$1(com.hippo.ehviewer.activity.MangaActivity) -> b
    void access$2(com.hippo.ehviewer.activity.MangaActivity,int) -> a
    java.util.List access$3(com.hippo.ehviewer.activity.MangaActivity) -> c
    int access$4(com.hippo.ehviewer.activity.MangaActivity) -> d
    java.lang.String access$5(com.hippo.ehviewer.activity.MangaActivity) -> e
    void access$6(com.hippo.ehviewer.activity.MangaActivity,java.lang.String) -> a
    int access$7(com.hippo.ehviewer.activity.MangaActivity) -> f
    void access$8(com.hippo.ehviewer.activity.MangaActivity,java.lang.String) -> b
    int access$9(com.hippo.ehviewer.activity.MangaActivity) -> g
    java.lang.String access$10(com.hippo.ehviewer.activity.MangaActivity) -> h
    java.io.File access$11(com.hippo.ehviewer.activity.MangaActivity) -> i
    com.hippo.ehviewer.AppContext access$12(com.hippo.ehviewer.activity.MangaActivity) -> j
    com.hippo.ehviewer.gallery.data.ImageSet access$13(com.hippo.ehviewer.activity.MangaActivity) -> k
    boolean access$14(com.hippo.ehviewer.activity.MangaActivity) -> l
    void access$15(com.hippo.ehviewer.activity.MangaActivity,int) -> b
    void access$16(com.hippo.ehviewer.activity.MangaActivity,boolean) -> a
    void access$17(com.hippo.ehviewer.activity.MangaActivity,int) -> c
    com.hippo.ehviewer.util.EhClient access$18(com.hippo.ehviewer.activity.MangaActivity) -> m
    int access$19(com.hippo.ehviewer.activity.MangaActivity) -> n
    void access$20(com.hippo.ehviewer.activity.MangaActivity,boolean) -> b
    boolean access$21(com.hippo.ehviewer.activity.MangaActivity) -> o
com.hippo.ehviewer.activity.MangaActivity$1 -> com.hippo.ehviewer.activity.p:
    com.hippo.ehviewer.activity.MangaActivity this$0 -> a
    void onLastPageEdge() -> a
    void onFirstPageEdge() -> b
com.hippo.ehviewer.activity.MangaActivity$2 -> com.hippo.ehviewer.activity.q:
    com.hippo.ehviewer.activity.MangaActivity this$0 -> a
    void onTapText(int) -> a
com.hippo.ehviewer.activity.MangaActivity$3 -> com.hippo.ehviewer.activity.r:
    com.hippo.ehviewer.activity.MangaActivity this$0 -> a
    void onScrollPage(int) -> a
com.hippo.ehviewer.activity.MangaActivity$MangaUrlGetListener -> com.hippo.ehviewer.activity.s:
    com.hippo.ehviewer.activity.MangaActivity this$0 -> a
    void onSuccess(java.lang.Object,java.lang.String[]) -> a
    boolean testImage(java.lang.String,java.lang.String) -> a
    void onGetImage(int,int,java.lang.String) -> a
    void onFailure(java.lang.Object,java.lang.String) -> a
    boolean access$0(com.hippo.ehviewer.activity.MangaActivity$MangaUrlGetListener,java.lang.String,java.lang.String) -> a
    void access$1(com.hippo.ehviewer.activity.MangaActivity$MangaUrlGetListener,int,int,java.lang.String) -> a
    com.hippo.ehviewer.activity.MangaActivity access$3(com.hippo.ehviewer.activity.MangaActivity$MangaUrlGetListener) -> a
com.hippo.ehviewer.activity.MangaActivity$MangaUrlGetListener$1 -> com.hippo.ehviewer.activity.t:
    com.hippo.ehviewer.activity.MangaActivity$MangaUrlGetListener this$1 -> a
    java.lang.String val$imageName -> b
    int val$index -> c
    java.lang.String val$nextPageUrl -> d
    com.hippo.ehviewer.network.Downloader val$downloader -> e
    void run() -> run
com.hippo.ehviewer.activity.MangaDetailActivity -> com.hippo.ehviewer.activity.MangaDetailActivity:
    com.hippo.ehviewer.AppContext mAppContext -> a
    com.hippo.ehviewer.util.EhClient mEhClient -> b
    java.lang.String url -> c
    android.widget.ScrollView scrollView -> d
    android.widget.LinearLayout mainView -> e
    android.widget.ProgressBar waitPb -> f
    android.widget.Button refeshButton -> g
    android.view.ViewGroup mangaDetailNormal -> h
    android.view.ViewGroup mangaDetailOffensive -> i
    android.view.ViewGroup mangaDetailPining -> j
    android.view.ViewGroup pageListMain -> k
    com.hippo.ehviewer.widget.AutoWrapLayout pageListLayout -> l
    android.widget.ProgressBar waitPageList -> m
    android.widget.TextView previewNumText -> n
    android.widget.TextView previewNumText2 -> o
    android.widget.Button previewRefreshButton -> p
    android.view.View bottomPanel -> q
    android.app.AlertDialog goToDialog -> r
    com.hippo.ehviewer.MangaDetail mangaDetail -> s
    int curPage -> t
    com.hippo.ehviewer.service.DownloadServiceConnection mServiceConn -> u
    void addPageItem(int) -> a
    void addPageImage(int,int,android.graphics.Bitmap) -> a
    void buttonRefresh(android.view.View) -> buttonRefresh
    void buttonFinsh(android.view.View) -> buttonFinsh
    void buttonOnce(android.view.View) -> buttonOnce
    void buttonEvery(android.view.View) -> buttonEvery
    void buttonRead(android.view.View) -> buttonRead
    void ButtonBack(android.view.View) -> ButtonBack
    void ButtonFront(android.view.View) -> ButtonFront
    void ButtonPreviewRefresh(android.view.View) -> ButtonPreviewRefresh
    android.app.AlertDialog createGoToDialog() -> a
    void goTo(android.view.View) -> goTo
    void refreshPageList() -> b
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    void onCreate(android.os.Bundle) -> onCreate
    void layout(com.hippo.ehviewer.MangaDetail) -> a
    void addTags(android.widget.LinearLayout,java.lang.String[][]) -> a
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void access$0(com.hippo.ehviewer.activity.MangaDetailActivity,int,int,android.graphics.Bitmap) -> a
    android.widget.ProgressBar access$1(com.hippo.ehviewer.activity.MangaDetailActivity) -> a
    android.widget.Button access$2(com.hippo.ehviewer.activity.MangaDetailActivity) -> b
    com.hippo.ehviewer.MangaDetail access$3(com.hippo.ehviewer.activity.MangaDetailActivity) -> c
    void access$4(com.hippo.ehviewer.activity.MangaDetailActivity,com.hippo.ehviewer.MangaDetail) -> a
    android.widget.ProgressBar access$5(com.hippo.ehviewer.activity.MangaDetailActivity) -> d
    android.widget.Button access$6(com.hippo.ehviewer.activity.MangaDetailActivity) -> e
    android.app.AlertDialog access$7(com.hippo.ehviewer.activity.MangaDetailActivity) -> f
    int access$8(com.hippo.ehviewer.activity.MangaDetailActivity) -> g
    void access$9(com.hippo.ehviewer.activity.MangaDetailActivity,int) -> a
    void access$10(com.hippo.ehviewer.activity.MangaDetailActivity) -> h
    void access$11(com.hippo.ehviewer.activity.MangaDetailActivity,int) -> b
com.hippo.ehviewer.activity.MangaDetailActivity$1 -> com.hippo.ehviewer.activity.u:
    com.hippo.ehviewer.activity.MangaDetailActivity this$0 -> a
    int val$index1 -> b
    void onClick(android.view.View) -> onClick
com.hippo.ehviewer.activity.MangaDetailActivity$2 -> com.hippo.ehviewer.activity.v:
    com.hippo.ehviewer.activity.MangaDetailActivity this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.hippo.ehviewer.activity.MangaDetailActivity$3 -> com.hippo.ehviewer.activity.w:
    com.hippo.ehviewer.activity.MangaDetailActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.hippo.ehviewer.activity.MangaDetailActivity$4 -> com.hippo.ehviewer.activity.x:
    com.hippo.ehviewer.activity.MangaDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hippo.ehviewer.activity.MangaDetailActivity$5 -> com.hippo.ehviewer.activity.y:
    com.hippo.ehviewer.activity.MangaDetailActivity this$0 -> a
    void onSuccess(java.lang.Object,com.hippo.ehviewer.PageList) -> a
    void onFailure(java.lang.Object,java.lang.String) -> a
com.hippo.ehviewer.activity.MangaDetailActivity$MangaDetailGetListener -> com.hippo.ehviewer.activity.z:
    com.hippo.ehviewer.activity.MangaDetailActivity this$0 -> a
    void onSuccess(com.hippo.ehviewer.MangaDetail) -> a
    void onFailure(java.lang.String) -> a
com.hippo.ehviewer.activity.MangaDetailActivity$PageImageGetListener -> com.hippo.ehviewer.activity.aa:
    com.hippo.ehviewer.activity.MangaDetailActivity this$0 -> a
    void onSuccess(java.lang.Object,java.lang.Object) -> a
    void onFailure(int) -> a
com.hippo.ehviewer.activity.MangaDetailActivity$TextViewWithUrl -> com.hippo.ehviewer.activity.ab:
    java.lang.String url -> b
    com.hippo.ehviewer.activity.MangaDetailActivity this$0 -> a
    java.lang.String access$0(com.hippo.ehviewer.activity.MangaDetailActivity$TextViewWithUrl) -> a
com.hippo.ehviewer.activity.MangaDownloadActivity -> com.hippo.ehviewer.activity.MangaDownloadActivity:
    android.widget.RelativeLayout mainView -> a
    com.hippo.ehviewer.gallery.data.DownloadImageSet mDownloadImageSet -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onDestroy() -> onDestroy
com.hippo.ehviewer.activity.MangaDownloadActivity$1 -> com.hippo.ehviewer.activity.ac:
    com.hippo.ehviewer.activity.MangaDownloadActivity this$0 -> a
    void onLastPageEdge() -> a
    void onFirstPageEdge() -> b
com.hippo.ehviewer.activity.MangaListActivity -> com.hippo.ehviewer.activity.MangaListActivity:
    java.lang.String TAG -> a
    com.hippo.ehviewer.AppContext mAppContext -> b
    com.hippo.ehviewer.util.EhClient mEhClient -> c
    com.hippo.ehviewer.widget.DrawerLayout drawer -> d
    com.hippo.ehviewer.view.GetPaddingRelativeLayout mainLayout -> e
    com.hippo.ehviewer.view.TagListView listMenu -> f
    android.widget.RelativeLayout loginMenu -> g
    android.widget.ListView isExhentaiList -> h
    com.hippo.ehviewer.widget.PullListView pullListView -> i
    android.widget.ListView listView -> j
    android.view.View waitView -> k
    android.widget.Button freshButton -> l
    android.view.View noFoundView -> m
    android.widget.ImageView sadpanda -> n
    android.view.ViewGroup loginView -> o
    android.view.ViewGroup loginOverView -> p
    android.widget.Button loginButton -> q
    android.widget.Button checkLoginButton -> r
    android.view.View waitloginView -> s
    android.widget.TextView usernameText -> t
    android.widget.Button logoutButton -> u
    android.view.View waitlogoutView -> v
    com.hippo.ehviewer.view.TagsAdapter tagsAdapter -> w
    com.hippo.ehviewer.ListUrls lus -> x
    com.hippo.ehviewer.activity.MangaListActivity$GmlAdapter gmlAdapter -> y
    java.util.ArrayList listMenuTitle -> z
    int mStableItemCount -> A
    java.util.ArrayList lmdArray -> B
    com.hippo.ehviewer.ImageLoadManager mImageLoadManager -> C
    int longClickItemIndex -> D
    boolean mListFirst -> E
    boolean mLoadListOver -> F
    android.app.AlertDialog loginDialog -> G
    android.app.AlertDialog filterDialog -> H
    android.app.AlertDialog longClickDialog -> I
    java.lang.String newTagName -> J
    long curBackTime -> K
    long lastGetStamp -> L
    int firstPage -> M
    int lastPage -> N
    int firstIndex -> O
    int lastIndex -> P
    int visiblePage -> Q
    java.lang.String title -> R
    com.hippo.ehviewer.service.DownloadServiceConnection mServiceConn -> S
    android.app.AlertDialog createLoginDialog() -> a
    android.app.AlertDialog createFilterDialog() -> b
    com.hippo.ehviewer.ListUrls getLus(android.app.AlertDialog) -> a
    com.hippo.ehviewer.ListUrls getLus(android.view.View) -> a
    android.app.AlertDialog createLongClickDialog() -> c
    android.app.AlertDialog createJumpDialog() -> d
    android.app.AlertDialog createSetNameDialog(java.lang.String,java.lang.String,com.hippo.ehviewer.activity.MangaListActivity$OnSetNameListener) -> a
    android.app.AlertDialog createModifyTagDialog(int) -> a
    void setFilterView(android.view.View,com.hippo.ehviewer.ListUrls) -> a
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onResume() -> onResume
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    void onBackPressed() -> onBackPressed
    void jump() -> e
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onDestroy() -> onDestroy
    void checkUpdate() -> f
    void checkLogin(boolean) -> a
    void layoutDrawRight() -> g
    boolean refresh(com.hippo.ehviewer.ListUrls,java.lang.String) -> a
    void buttonRefresh(android.view.View) -> buttonRefresh
    void buttonLogout(android.view.View) -> buttonLogout
    void buttonLogin(android.view.View) -> buttonLogin
    void buttonCheckLogin(android.view.View) -> buttonCheckLogin
    long access$0(com.hippo.ehviewer.activity.MangaListActivity) -> a
    void access$1(com.hippo.ehviewer.activity.MangaListActivity,com.hippo.ehviewer.ListUrls) -> a
    void access$2(com.hippo.ehviewer.activity.MangaListActivity,java.lang.String) -> a
    android.view.View access$3(com.hippo.ehviewer.activity.MangaListActivity) -> b
    android.widget.Button access$4(com.hippo.ehviewer.activity.MangaListActivity) -> c
    void access$5(com.hippo.ehviewer.activity.MangaListActivity,boolean) -> a
    com.hippo.ehviewer.widget.PullListView access$6(com.hippo.ehviewer.activity.MangaListActivity) -> d
    android.view.View access$7(com.hippo.ehviewer.activity.MangaListActivity) -> e
    android.widget.ImageView access$8(com.hippo.ehviewer.activity.MangaListActivity) -> f
    java.util.ArrayList access$9(com.hippo.ehviewer.activity.MangaListActivity) -> g
    com.hippo.ehviewer.activity.MangaListActivity$GmlAdapter access$10(com.hippo.ehviewer.activity.MangaListActivity) -> h
    com.hippo.ehviewer.ListUrls access$11(com.hippo.ehviewer.activity.MangaListActivity) -> i
    int access$12(com.hippo.ehviewer.activity.MangaListActivity) -> j
    void access$13(com.hippo.ehviewer.activity.MangaListActivity,int) -> a
    void access$14(com.hippo.ehviewer.activity.MangaListActivity,int) -> b
    void access$15(com.hippo.ehviewer.activity.MangaListActivity,int) -> c
    void access$16(com.hippo.ehviewer.activity.MangaListActivity,int) -> d
    void access$17(com.hippo.ehviewer.activity.MangaListActivity,int) -> e
    java.lang.String access$18(com.hippo.ehviewer.activity.MangaListActivity) -> k
    int access$19(com.hippo.ehviewer.activity.MangaListActivity) -> l
    android.widget.ListView access$20(com.hippo.ehviewer.activity.MangaListActivity) -> m
    int access$21(com.hippo.ehviewer.activity.MangaListActivity) -> n
    int access$22(com.hippo.ehviewer.activity.MangaListActivity) -> o
    int access$23(com.hippo.ehviewer.activity.MangaListActivity) -> p
    boolean access$24(com.hippo.ehviewer.activity.MangaListActivity) -> q
    boolean access$25(com.hippo.ehviewer.activity.MangaListActivity) -> r
    com.hippo.ehviewer.ImageLoadManager access$26(com.hippo.ehviewer.activity.MangaListActivity) -> s
    void access$27(com.hippo.ehviewer.activity.MangaListActivity,boolean) -> b
    android.widget.Button access$28(com.hippo.ehviewer.activity.MangaListActivity) -> t
    android.view.View access$29(com.hippo.ehviewer.activity.MangaListActivity) -> u
    android.app.AlertDialog access$30(com.hippo.ehviewer.activity.MangaListActivity) -> v
    com.hippo.ehviewer.util.EhClient access$31(com.hippo.ehviewer.activity.MangaListActivity) -> w
    void access$32(com.hippo.ehviewer.activity.MangaListActivity,boolean) -> c
    void access$33(com.hippo.ehviewer.activity.MangaListActivity) -> x
    com.hippo.ehviewer.widget.DrawerLayout access$34(com.hippo.ehviewer.activity.MangaListActivity) -> y
    android.app.AlertDialog access$35(com.hippo.ehviewer.activity.MangaListActivity) -> z
    com.hippo.ehviewer.ListUrls access$36(com.hippo.ehviewer.activity.MangaListActivity,android.app.AlertDialog) -> a
    boolean access$37(com.hippo.ehviewer.activity.MangaListActivity,com.hippo.ehviewer.ListUrls,java.lang.String) -> a
    java.util.ArrayList access$38(com.hippo.ehviewer.activity.MangaListActivity) -> A
    com.hippo.ehviewer.view.TagsAdapter access$39(com.hippo.ehviewer.activity.MangaListActivity) -> B
    android.app.AlertDialog access$40(com.hippo.ehviewer.activity.MangaListActivity,java.lang.String,java.lang.String,com.hippo.ehviewer.activity.MangaListActivity$OnSetNameListener) -> a
    int access$41(com.hippo.ehviewer.activity.MangaListActivity) -> C
    com.hippo.ehviewer.service.DownloadServiceConnection access$42(com.hippo.ehviewer.activity.MangaListActivity) -> D
    android.app.AlertDialog access$43(com.hippo.ehviewer.activity.MangaListActivity) -> E
    com.hippo.ehviewer.ListUrls access$44(com.hippo.ehviewer.activity.MangaListActivity,android.view.View) -> a
    java.lang.String access$45(com.hippo.ehviewer.activity.MangaListActivity) -> F
    int access$46(com.hippo.ehviewer.activity.MangaListActivity) -> G
    void access$47(com.hippo.ehviewer.activity.MangaListActivity,java.lang.String) -> b
    android.app.AlertDialog access$48(com.hippo.ehviewer.activity.MangaListActivity,int) -> f
    void access$49(com.hippo.ehviewer.activity.MangaListActivity,long) -> a
    void access$50(com.hippo.ehviewer.activity.MangaListActivity,int) -> g
    android.widget.Button access$51(com.hippo.ehviewer.activity.MangaListActivity) -> H
    android.widget.Button access$52(com.hippo.ehviewer.activity.MangaListActivity) -> I
    android.view.View access$53(com.hippo.ehviewer.activity.MangaListActivity) -> J
com.hippo.ehviewer.activity.MangaListActivity$1 -> com.hippo.ehviewer.activity.ad:
    com.hippo.ehviewer.activity.MangaListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.hippo.ehviewer.activity.MangaListActivity access$0(com.hippo.ehviewer.activity.MangaListActivity$1) -> a
com.hippo.ehviewer.activity.MangaListActivity$1$1 -> com.hippo.ehviewer.activity.ae:
    com.hippo.ehviewer.activity.MangaListActivity$1 this$1 -> a
    void onSuccess() -> a
    void onFailure(java.lang.String) -> a
com.hippo.ehviewer.activity.MangaListActivity$10 -> com.hippo.ehviewer.activity.af:
    com.hippo.ehviewer.activity.MangaListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hippo.ehviewer.activity.MangaListActivity$11 -> com.hippo.ehviewer.activity.ag:
    com.hippo.ehviewer.activity.MangaListActivity this$0 -> a
    android.widget.EditText val$et -> b
    java.lang.String val$oldStr -> c
    com.hippo.ehviewer.activity.MangaListActivity$OnSetNameListener val$listener -> d
    void onClick(android.view.View) -> onClick
com.hippo.ehviewer.activity.MangaListActivity$12 -> com.hippo.ehviewer.activity.ah:
    com.hippo.ehviewer.activity.MangaListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hippo.ehviewer.activity.MangaListActivity$13 -> com.hippo.ehviewer.activity.ai:
    com.hippo.ehviewer.activity.MangaListActivity this$0 -> a
    android.view.View val$advance -> b
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.hippo.ehviewer.activity.MangaListActivity$14 -> com.hippo.ehviewer.activity.aj:
    com.hippo.ehviewer.activity.MangaListActivity this$0 -> a
    android.view.View val$view -> b
    int val$position -> c
    void onClick(android.view.View) -> onClick
com.hippo.ehviewer.activity.MangaListActivity$15 -> com.hippo.ehviewer.activity.ak:
    com.hippo.ehviewer.activity.MangaListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hippo.ehviewer.activity.MangaListActivity$16 -> com.hippo.ehviewer.activity.al:
    com.hippo.ehviewer.activity.MangaListActivity this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
    com.hippo.ehviewer.activity.MangaListActivity access$0(com.hippo.ehviewer.activity.MangaListActivity$16) -> a
com.hippo.ehviewer.activity.MangaListActivity$16$1 -> com.hippo.ehviewer.activity.am:
    com.hippo.ehviewer.activity.MangaListActivity$16 this$1 -> a
    int val$position -> b
    android.view.View val$v -> c
    void onSetVaildName(java.lang.String) -> a
com.hippo.ehviewer.activity.MangaListActivity$17 -> com.hippo.ehviewer.activity.an:
    com.hippo.ehviewer.activity.MangaListActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.hippo.ehviewer.activity.MangaListActivity$18 -> com.hippo.ehviewer.activity.ao:
    com.hippo.ehviewer.activity.MangaListActivity this$0 -> a
    void onModify(int) -> a
com.hippo.ehviewer.activity.MangaListActivity$19 -> com.hippo.ehviewer.activity.ap:
    com.hippo.ehviewer.activity.MangaListActivity this$0 -> a
    void onMoveStart() -> a
    void onMoveOver() -> b
com.hippo.ehviewer.activity.MangaListActivity$2 -> com.hippo.ehviewer.activity.aq:
    com.hippo.ehviewer.activity.MangaListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hippo.ehviewer.activity.MangaListActivity$20 -> com.hippo.ehviewer.activity.ar:
    com.hippo.ehviewer.activity.MangaListActivity this$0 -> a
    java.lang.String[] val$isExhentaiListTitle -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.hippo.ehviewer.activity.MangaListActivity$21 -> com.hippo.ehviewer.activity.as:
    com.hippo.ehviewer.activity.MangaListActivity this$0 -> a
    android.widget.BaseAdapter val$isExhentaiListAdapter -> b
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.hippo.ehviewer.activity.MangaListActivity$22 -> com.hippo.ehviewer.activity.at:
    com.hippo.ehviewer.activity.MangaListActivity this$0 -> a
    void onHeaderRefresh() -> a
    void onHeaderRefresh(java.lang.Object) -> a
com.hippo.ehviewer.activity.MangaListActivity$23 -> com.hippo.ehviewer.activity.au:
    com.hippo.ehviewer.activity.MangaListActivity this$0 -> a
    void onFooterRefresh() -> a
com.hippo.ehviewer.activity.MangaListActivity$24 -> com.hippo.ehviewer.activity.av:
    com.hippo.ehviewer.activity.MangaListActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.hippo.ehviewer.activity.MangaListActivity$25 -> com.hippo.ehviewer.activity.aw:
    com.hippo.ehviewer.activity.MangaListActivity this$0 -> a
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
com.hippo.ehviewer.activity.MangaListActivity$26 -> com.hippo.ehviewer.activity.ax:
    com.hippo.ehviewer.activity.MangaListActivity this$0 -> a
    android.widget.SearchView val$searchView -> b
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
com.hippo.ehviewer.activity.MangaListActivity$27 -> com.hippo.ehviewer.activity.ay:
    com.hippo.ehviewer.activity.MangaListActivity this$0 -> a
    void onSuccess(java.lang.String,long,java.lang.String,java.lang.String) -> a
    void onNoUpdate() -> a
    void onFailure(java.lang.String) -> a
    com.hippo.ehviewer.activity.MangaListActivity access$0(com.hippo.ehviewer.activity.MangaListActivity$27) -> a
com.hippo.ehviewer.activity.MangaListActivity$27$1 -> com.hippo.ehviewer.activity.az:
    com.hippo.ehviewer.activity.MangaListActivity$27 this$1 -> a
    java.lang.String val$url -> b
    void onClick(android.view.View) -> onClick
com.hippo.ehviewer.activity.MangaListActivity$27$2 -> com.hippo.ehviewer.activity.ba:
    com.hippo.ehviewer.activity.MangaListActivity$27 this$1 -> a
    void onClick(android.view.View) -> onClick
com.hippo.ehviewer.activity.MangaListActivity$28 -> com.hippo.ehviewer.activity.bb:
    com.hippo.ehviewer.activity.MangaListActivity this$0 -> a
    void onSuccess() -> a
    void onFailure(java.lang.String) -> a
com.hippo.ehviewer.activity.MangaListActivity$29 -> com.hippo.ehviewer.activity.bc:
    com.hippo.ehviewer.activity.MangaListActivity this$0 -> a
    void onSuccess() -> a
    void onFailure(java.lang.String) -> a
com.hippo.ehviewer.activity.MangaListActivity$3 -> com.hippo.ehviewer.activity.bd:
    com.hippo.ehviewer.activity.MangaListActivity this$0 -> a
    android.view.View val$advance -> b
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.hippo.ehviewer.activity.MangaListActivity$4 -> com.hippo.ehviewer.activity.be:
    com.hippo.ehviewer.activity.MangaListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hippo.ehviewer.activity.MangaListActivity$5 -> com.hippo.ehviewer.activity.bf:
    com.hippo.ehviewer.activity.MangaListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hippo.ehviewer.activity.MangaListActivity$6 -> com.hippo.ehviewer.activity.bg:
    com.hippo.ehviewer.activity.MangaListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.hippo.ehviewer.activity.MangaListActivity access$0(com.hippo.ehviewer.activity.MangaListActivity$6) -> a
com.hippo.ehviewer.activity.MangaListActivity$6$1 -> com.hippo.ehviewer.activity.bh:
    com.hippo.ehviewer.activity.MangaListActivity$6 this$1 -> a
    android.view.View val$v -> b
    void onSetVaildName(java.lang.String) -> a
com.hippo.ehviewer.activity.MangaListActivity$7 -> com.hippo.ehviewer.activity.bi:
    com.hippo.ehviewer.activity.MangaListActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.hippo.ehviewer.activity.MangaListActivity$8 -> com.hippo.ehviewer.activity.bj:
    com.hippo.ehviewer.activity.MangaListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hippo.ehviewer.activity.MangaListActivity$9 -> com.hippo.ehviewer.activity.bk:
    com.hippo.ehviewer.activity.MangaListActivity this$0 -> a
    android.widget.EditText val$et -> b
    void onClick(android.view.View) -> onClick
com.hippo.ehviewer.activity.MangaListActivity$GmlAdapter -> com.hippo.ehviewer.activity.bl:
    android.view.LayoutInflater mInflater -> b
    com.hippo.ehviewer.activity.MangaListActivity this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.hippo.ehviewer.activity.MangaListActivity$MangaListGetListener -> com.hippo.ehviewer.activity.bm:
    com.hippo.ehviewer.activity.MangaListActivity this$0 -> a
    void onSuccess(java.lang.Object,java.util.ArrayList,int,int) -> a
    void onFailure(java.lang.Object,java.lang.String) -> a
    void setHeaderPullString() -> a
com.hippo.ehviewer.activity.MangaListActivity$MangaListGetPackage -> com.hippo.ehviewer.activity.bn:
    long stamp -> a
    com.hippo.ehviewer.ListUrls targetListUrls -> b
    boolean setPosition -> c
    java.lang.String title -> d
    com.hippo.ehviewer.activity.MangaListActivity this$0 -> e
com.hippo.ehviewer.activity.MangaListActivity$MangaListListener -> com.hippo.ehviewer.activity.bo:
    com.hippo.ehviewer.activity.MangaListActivity this$0 -> a
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
com.hippo.ehviewer.activity.MangaListActivity$OnSetNameListener -> com.hippo.ehviewer.activity.bp:
    void onSetVaildName(java.lang.String) -> a
com.hippo.ehviewer.activity.MangaListActivity$RefreshPackage -> com.hippo.ehviewer.activity.bq:
    com.hippo.ehviewer.ListUrls listUrls -> a
    java.lang.String title -> b
    com.hippo.ehviewer.activity.MangaListActivity this$0 -> c
com.hippo.ehviewer.activity.SettingsActivity -> com.hippo.ehviewer.activity.SettingsActivity:
    java.lang.String TAG -> a
    android.content.Context mContext -> b
    android.preference.EditTextPreference cachePre -> c
    android.preference.Preference clearCachePre -> d
    android.preference.Preference authorPer -> e
    com.hippo.ehviewer.preference.AutoListPreference screenOriPer -> f
    android.preference.Preference changelogPer -> g
    android.preference.Preference thanksPer -> h
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onResume() -> onResume
    void onCreate(android.os.Bundle) -> onCreate
    void updateCpCacheSummary() -> a
    android.content.Context access$0(com.hippo.ehviewer.activity.SettingsActivity) -> a
    void access$1(com.hippo.ehviewer.activity.SettingsActivity) -> b
com.hippo.ehviewer.activity.SettingsActivity$1 -> com.hippo.ehviewer.activity.br:
    com.hippo.ehviewer.activity.SettingsActivity this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.hippo.ehviewer.activity.SettingsActivity$2 -> com.hippo.ehviewer.activity.bs:
    com.hippo.ehviewer.activity.SettingsActivity this$0 -> a
    boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
com.hippo.ehviewer.activity.SettingsActivity$3 -> com.hippo.ehviewer.activity.bt:
    com.hippo.ehviewer.activity.SettingsActivity this$0 -> a
    boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
com.hippo.ehviewer.activity.SettingsActivity$4 -> com.hippo.ehviewer.activity.bu:
    com.hippo.ehviewer.activity.SettingsActivity this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.hippo.ehviewer.activity.SettingsActivity$5 -> com.hippo.ehviewer.activity.bv:
    com.hippo.ehviewer.activity.SettingsActivity this$0 -> a
    boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
com.hippo.ehviewer.activity.SettingsActivity$6 -> com.hippo.ehviewer.activity.bw:
    com.hippo.ehviewer.activity.SettingsActivity this$0 -> a
    boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
com.hippo.ehviewer.activity.SettingsActivity$7 -> com.hippo.ehviewer.activity.bx:
    com.hippo.ehviewer.activity.SettingsActivity this$0 -> a
    android.preference.Preference val$update -> b
    boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
    com.hippo.ehviewer.activity.SettingsActivity access$0(com.hippo.ehviewer.activity.SettingsActivity$7) -> a
com.hippo.ehviewer.activity.SettingsActivity$7$1 -> com.hippo.ehviewer.activity.by:
    com.hippo.ehviewer.activity.SettingsActivity$7 this$1 -> a
    android.preference.Preference val$update -> b
    void onSuccess(java.lang.String,long,java.lang.String,java.lang.String) -> a
    void onNoUpdate() -> a
    void onFailure(java.lang.String) -> a
    com.hippo.ehviewer.activity.SettingsActivity$7 access$0(com.hippo.ehviewer.activity.SettingsActivity$7$1) -> a
com.hippo.ehviewer.activity.SettingsActivity$7$1$1 -> com.hippo.ehviewer.activity.bz:
    com.hippo.ehviewer.activity.SettingsActivity$7$1 this$2 -> a
    java.lang.String val$url -> b
    android.preference.Preference val$update -> c
    void onClick(android.view.View) -> onClick
com.hippo.ehviewer.activity.SettingsActivity$7$1$2 -> com.hippo.ehviewer.activity.ca:
    com.hippo.ehviewer.activity.SettingsActivity$7$1 this$2 -> a
    android.preference.Preference val$update -> b
    void onClick(android.view.View) -> onClick
com.hippo.ehviewer.activity.SettingsActivity$8 -> com.hippo.ehviewer.activity.cb:
    com.hippo.ehviewer.activity.SettingsActivity this$0 -> a
    boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
com.hippo.ehviewer.exception.FileException -> com.hippo.ehviewer.a.a:
    int mErrorCode -> a
    java.lang.String getMessage() -> getMessage
com.hippo.ehviewer.exception.NoSdCardException -> com.hippo.ehviewer.a.b:
com.hippo.ehviewer.exception.RedirectionException -> com.hippo.ehviewer.a.c:
com.hippo.ehviewer.exception.ResponseCodeException -> com.hippo.ehviewer.a.d:
    int mResponseCode -> a
    int getResponseCode() -> a
com.hippo.ehviewer.exception.StopRequestException -> com.hippo.ehviewer.a.e:
com.hippo.ehviewer.gallery.GalleryView -> com.hippo.ehviewer.gallery.a:
    float[] LEFT_AREA_SCALE -> j
    float[] TOP_AREA_SCALE -> k
    float[] RIGHT_AREA_SCALE -> l
    float[] BOTTOM_AREA_SCALE -> m
    float[] CENTER_AREA_SCALE -> n
    float LINE_WIDTH -> o
    int TAP_AREA_TEXT_SIZE -> p
    com.hippo.ehviewer.gallery.ui.GestureRecognizer mGestureRecognizer -> q
    android.content.Context mContext -> r
    com.hippo.ehviewer.gallery.data.ImageSet mImageSet -> s
    int mState -> t
    boolean isScale -> u
    int scaleMode -> v
    int startMode -> w
    int mScrollState -> x
    int scrollXOffset -> y
    int scrollYOffset -> z
    int stopScrollXOffset -> A
    int stopScrollYOffset -> B
    float mScale -> C
    boolean mShowEdegTip -> D
    int mWidth -> E
    int mHeight -> F
    com.hippo.ehviewer.gallery.GalleryView$ShowItem[] showItems -> G
    int mCurIndex -> H
    int mSize -> I
    boolean mInit -> J
    int[] leftArea -> K
    int[] topArea -> L
    int[] rightArea -> M
    int[] bottomArea -> N
    int[] centerArea -> O
    com.hippo.ehviewer.gallery.GalleryView$Text leftText -> P
    com.hippo.ehviewer.gallery.GalleryView$Text topText -> Q
    com.hippo.ehviewer.gallery.GalleryView$Text rightText -> R
    com.hippo.ehviewer.gallery.GalleryView$Text bottomText -> S
    com.hippo.ehviewer.gallery.GalleryView$Text centerText -> T
    boolean mShowTapArea -> U
    boolean mShowTapAreaTurn -> V
    com.hippo.ehviewer.gallery.GalleryView$OnEdgeListener mOnEdgeListener -> W
    com.hippo.ehviewer.gallery.GalleryView$OnTapTextListener mOnTapTextListener -> X
    com.hippo.ehviewer.gallery.GalleryView$OnScrollPageListener mOnScrollPageListener -> Y
    void setOnEdgeListener(com.hippo.ehviewer.gallery.GalleryView$OnEdgeListener) -> a
    void setOnTapTextListener(com.hippo.ehviewer.gallery.GalleryView$OnTapTextListener) -> a
    void setOnScrollPageListener(com.hippo.ehviewer.gallery.GalleryView$OnScrollPageListener) -> a
    void setState() -> g
    void drawTapArea(com.hippo.ehviewer.gallery.glrenderer.GLCanvas) -> c
    void drawRect(com.hippo.ehviewer.gallery.glrenderer.GLCanvas,int[]) -> a
    void render(com.hippo.ehviewer.gallery.glrenderer.GLCanvas) -> a
    void resetSizePosition() -> h
    void resetSizePosition(int) -> b
    void setCenterInArea(int[],com.hippo.ehviewer.gallery.GalleryView$ShowItem) -> a
    void setTapArea() -> i
    void onLayout(boolean,int,int,int,int) -> a
    void loadImage(int) -> c
    java.lang.String getErrorStateString(int) -> d
    boolean isFirstPage() -> j
    boolean isLastPage() -> k
    boolean zoom(boolean) -> a
    boolean goToPrePage() -> l
    boolean goToNextPage() -> m
    boolean onTouch(android.view.MotionEvent) -> a
    void adjustPosition(com.hippo.ehviewer.gallery.GalleryView$ShowItem) -> b
    int getTargetIndex(com.hippo.ehviewer.gallery.GalleryView$ShowItem) -> a
    int access$0(com.hippo.ehviewer.gallery.GalleryView) -> a
    com.hippo.ehviewer.gallery.GalleryView$ShowItem[] access$1(com.hippo.ehviewer.gallery.GalleryView) -> b
    void access$2(com.hippo.ehviewer.gallery.GalleryView,int) -> a
    int access$3(com.hippo.ehviewer.gallery.GalleryView) -> c
    int access$4(com.hippo.ehviewer.gallery.GalleryView) -> d
    void access$5(com.hippo.ehviewer.gallery.GalleryView,int) -> b
    boolean access$6(com.hippo.ehviewer.gallery.GalleryView) -> e
    void access$7(com.hippo.ehviewer.gallery.GalleryView,int) -> c
    boolean access$8(com.hippo.ehviewer.gallery.GalleryView) -> f
    int access$9(com.hippo.ehviewer.gallery.GalleryView) -> g
    boolean access$10(com.hippo.ehviewer.gallery.GalleryView) -> h
    com.hippo.ehviewer.gallery.GalleryView$OnTapTextListener access$11(com.hippo.ehviewer.gallery.GalleryView) -> i
    int[] access$12(com.hippo.ehviewer.gallery.GalleryView) -> j
    com.hippo.ehviewer.gallery.GalleryView$OnEdgeListener access$13(com.hippo.ehviewer.gallery.GalleryView) -> k
    int[] access$14(com.hippo.ehviewer.gallery.GalleryView) -> l
    boolean access$15(com.hippo.ehviewer.gallery.GalleryView,boolean) -> a
    int[] access$16(com.hippo.ehviewer.gallery.GalleryView) -> m
    int[] access$17(com.hippo.ehviewer.gallery.GalleryView) -> n
    int[] access$18(com.hippo.ehviewer.gallery.GalleryView) -> o
    void access$19(com.hippo.ehviewer.gallery.GalleryView,boolean) -> b
    void access$20(com.hippo.ehviewer.gallery.GalleryView,boolean) -> c
    boolean access$21(com.hippo.ehviewer.gallery.GalleryView) -> p
    boolean access$22(com.hippo.ehviewer.gallery.GalleryView) -> q
    boolean access$23(com.hippo.ehviewer.gallery.GalleryView) -> r
    void access$24(com.hippo.ehviewer.gallery.GalleryView,boolean) -> d
    boolean access$25(com.hippo.ehviewer.gallery.GalleryView) -> s
    int access$26(com.hippo.ehviewer.gallery.GalleryView) -> t
    void access$27(com.hippo.ehviewer.gallery.GalleryView,com.hippo.ehviewer.gallery.GalleryView$ShowItem) -> a
    int access$28(com.hippo.ehviewer.gallery.GalleryView) -> u
    void access$29(com.hippo.ehviewer.gallery.GalleryView,int) -> d
    int access$30(com.hippo.ehviewer.gallery.GalleryView) -> v
    void access$31(com.hippo.ehviewer.gallery.GalleryView,int) -> e
    void access$32(com.hippo.ehviewer.gallery.GalleryView,boolean) -> e
    void access$33(com.hippo.ehviewer.gallery.GalleryView,int) -> f
    void access$34(com.hippo.ehviewer.gallery.GalleryView,float) -> a
    boolean access$35(com.hippo.ehviewer.gallery.GalleryView) -> w
    void access$36(com.hippo.ehviewer.gallery.GalleryView,int) -> g
com.hippo.ehviewer.gallery.GalleryView$1 -> com.hippo.ehviewer.gallery.b:
    com.hippo.ehviewer.gallery.GalleryView this$0 -> a
    void onStateChange(int,int) -> a
com.hippo.ehviewer.gallery.GalleryView$BitmapImage -> com.hippo.ehviewer.gallery.c:
    com.hippo.ehviewer.gallery.glrenderer.BitmapTexture mTexture -> h
    android.graphics.Bitmap mContextBmp -> i
    com.hippo.ehviewer.gallery.GalleryView this$0 -> a
    void load(android.graphics.Bitmap) -> a
    void recycle() -> a
com.hippo.ehviewer.gallery.GalleryView$DecodeImageListener -> com.hippo.ehviewer.gallery.d:
    com.hippo.ehviewer.gallery.GalleryView this$0 -> a
    void onDecodeOver(java.lang.Object,int) -> a
com.hippo.ehviewer.gallery.GalleryView$EmptyItem -> com.hippo.ehviewer.gallery.e:
    com.hippo.ehviewer.gallery.glrenderer.ColorTexture mTexture -> b
    com.hippo.ehviewer.gallery.GalleryView this$0 -> a
    void recycle() -> a
    void draw(com.hippo.ehviewer.gallery.glrenderer.GLCanvas,int,int) -> a
com.hippo.ehviewer.gallery.GalleryView$Image -> com.hippo.ehviewer.gallery.f:
    com.hippo.ehviewer.gallery.glrenderer.UploadedTexture mTexture -> a
    float imageScale -> b
    com.hippo.ehviewer.gallery.GalleryView this$0 -> c
    void init(com.hippo.ehviewer.gallery.glrenderer.UploadedTexture) -> a
    void draw(com.hippo.ehviewer.gallery.glrenderer.GLCanvas,int,int) -> a
com.hippo.ehviewer.gallery.GalleryView$MovieImage -> com.hippo.ehviewer.gallery.g:
    com.hippo.ehviewer.gallery.glrenderer.MovieTexture mTexture -> h
    android.graphics.Movie mContextMovie -> i
    com.hippo.ehviewer.gallery.GalleryView this$0 -> a
    void load(android.graphics.Movie) -> a
    void recycle() -> a
com.hippo.ehviewer.gallery.GalleryView$MyGestureListener -> com.hippo.ehviewer.gallery.h:
    com.hippo.ehviewer.util.TimeRunner mToPreTimeRunner -> a
    com.hippo.ehviewer.util.TimeRunner mToNextTimeRunner -> b
    com.hippo.ehviewer.util.TimeRunner mReturnTimeRunner -> c
    com.hippo.ehviewer.gallery.GalleryView this$0 -> d
    boolean isInArea(int[],int,int) -> a
    boolean onSingleTapUp(float,float) -> a
    boolean onDoubleTap(float,float) -> b
    void onLongPress(android.view.MotionEvent) -> a
    boolean onScrollBegin(float,float,float,float) -> a
    boolean onScroll(float,float,float,float) -> b
    boolean onScrollEnd() -> a
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> a
    boolean onScaleBegin(float,float) -> c
    boolean onScale(float,float,float) -> a
    void onScaleEnd() -> b
    void onDown(float,float) -> d
    void onUp() -> c
    com.hippo.ehviewer.gallery.GalleryView access$0(com.hippo.ehviewer.gallery.GalleryView$MyGestureListener) -> a
com.hippo.ehviewer.gallery.GalleryView$MyGestureListener$1 -> com.hippo.ehviewer.gallery.i:
    com.hippo.ehviewer.gallery.GalleryView$MyGestureListener this$1 -> a
    void run(float,int) -> a
com.hippo.ehviewer.gallery.GalleryView$MyGestureListener$2 -> com.hippo.ehviewer.gallery.j:
    com.hippo.ehviewer.gallery.GalleryView$MyGestureListener this$1 -> a
    void run(float,int) -> a
com.hippo.ehviewer.gallery.GalleryView$MyGestureListener$3 -> com.hippo.ehviewer.gallery.k:
    com.hippo.ehviewer.gallery.GalleryView$MyGestureListener this$1 -> a
    void run(float,int) -> a
com.hippo.ehviewer.gallery.GalleryView$MyGestureListener$4 -> com.hippo.ehviewer.gallery.l:
    com.hippo.ehviewer.gallery.GalleryView$MyGestureListener this$1 -> a
    void onStart() -> a
    void onEnd() -> b
com.hippo.ehviewer.gallery.GalleryView$MyGestureListener$5 -> com.hippo.ehviewer.gallery.m:
    com.hippo.ehviewer.gallery.GalleryView$MyGestureListener this$1 -> a
    void onStart() -> a
    void onEnd() -> b
com.hippo.ehviewer.gallery.GalleryView$MyGestureListener$6 -> com.hippo.ehviewer.gallery.n:
    com.hippo.ehviewer.gallery.GalleryView$MyGestureListener this$1 -> a
    void onStart() -> a
    void onEnd() -> b
com.hippo.ehviewer.gallery.GalleryView$OnEdgeListener -> com.hippo.ehviewer.gallery.o:
    void onFirstPageEdge() -> b
    void onLastPageEdge() -> a
com.hippo.ehviewer.gallery.GalleryView$OnScrollPageListener -> com.hippo.ehviewer.gallery.p:
    void onScrollPage(int) -> a
com.hippo.ehviewer.gallery.GalleryView$OnTapTextListener -> com.hippo.ehviewer.gallery.q:
    void onTapText(int) -> a
com.hippo.ehviewer.gallery.GalleryView$ShowItem -> com.hippo.ehviewer.gallery.r:
    int width -> d
    int height -> e
    android.graphics.Rect mRect -> f
    com.hippo.ehviewer.gallery.GalleryView this$0 -> g
    void draw(com.hippo.ehviewer.gallery.glrenderer.GLCanvas) -> a
    void draw(com.hippo.ehviewer.gallery.glrenderer.GLCanvas,int,int) -> a
    void recycle() -> a
com.hippo.ehviewer.gallery.GalleryView$Text -> com.hippo.ehviewer.gallery.s:
    com.hippo.ehviewer.gallery.glrenderer.StringTexture mTexture -> b
    com.hippo.ehviewer.gallery.GalleryView this$0 -> a
    void load(java.lang.String) -> a
    void load(java.lang.String,float,int) -> a
    void draw(com.hippo.ehviewer.gallery.glrenderer.GLCanvas,int,int) -> a
    void recycle() -> a
com.hippo.ehviewer.gallery.anim.Animation -> com.hippo.ehviewer.gallery.a.a:
    long mStartTime -> a
    int mDuration -> b
    android.view.animation.Interpolator mInterpolator -> c
    void setStartTime(long) -> a
    boolean calculate(long) -> b
    void onCalculate(float) -> a
com.hippo.ehviewer.gallery.anim.CanvasAnimation -> com.hippo.ehviewer.gallery.a.b:
    int getCanvasSaveFlags() -> a
    void apply(com.hippo.ehviewer.gallery.glrenderer.GLCanvas) -> a
com.hippo.ehviewer.gallery.common.ApiHelper -> com.hippo.ehviewer.gallery.b.a:
    boolean AT_LEAST_16 -> a
    boolean USE_888_PIXEL_FORMAT -> b
    boolean ENABLE_PHOTO_EDITOR -> c
    boolean HAS_VIEW_SYSTEM_UI_FLAG_LAYOUT_STABLE -> d
    boolean HAS_VIEW_SYSTEM_UI_FLAG_HIDE_NAVIGATION -> e
    boolean HAS_MEDIA_COLUMNS_WIDTH_AND_HEIGHT -> f
    boolean HAS_REUSING_BITMAP_IN_BITMAP_REGION_DECODER -> g
    boolean HAS_REUSING_BITMAP_IN_BITMAP_FACTORY -> h
    boolean HAS_SET_BEAM_PUSH_URIS -> i
    boolean HAS_SET_DEFALT_BUFFER_SIZE -> j
    boolean HAS_RELEASE_SURFACE_TEXTURE -> k
    boolean HAS_SURFACE_TEXTURE -> l
    boolean HAS_MTP -> m
    boolean HAS_AUTO_FOCUS_MOVE_CALLBACK -> n
    boolean HAS_REMOTE_VIEWS_SERVICE -> o
    boolean HAS_INTENT_EXTRA_LOCAL_ONLY -> p
    boolean HAS_SET_SYSTEM_UI_VISIBILITY -> q
    boolean HAS_FACE_DETECTION -> r
    boolean HAS_GET_CAMERA_DISABLED -> s
    boolean HAS_MEDIA_ACTION_SOUND -> t
    boolean HAS_OLD_PANORAMA -> u
    boolean HAS_TIME_LAPSE_RECORDING -> v
    boolean HAS_ZOOM_WHEN_RECORDING -> w
    boolean HAS_CAMERA_FOCUS_AREA -> x
    boolean HAS_CAMERA_METERING_AREA -> y
    boolean HAS_FINE_RESOLUTION_QUALITY_LEVELS -> z
    boolean HAS_MOTION_EVENT_TRANSFORM -> A
    boolean HAS_EFFECTS_RECORDING_CONTEXT_INPUT -> B
    boolean HAS_GET_SUPPORTED_VIDEO_SIZE -> C
    boolean HAS_SET_ICON_ATTRIBUTE -> D
    boolean HAS_MEDIA_PROVIDER_FILES_TABLE -> E
    boolean HAS_SURFACE_TEXTURE_RECORDING -> F
    boolean HAS_ACTION_BAR -> G
    boolean HAS_VIEW_TRANSFORM_PROPERTIES -> H
    boolean HAS_CAMERA_HDR -> I
    boolean HAS_OPTIONS_IN_MUTABLE -> J
    boolean CAN_START_PREVIEW_IN_JPEG_CALLBACK -> K
    boolean HAS_VIEW_PROPERTY_ANIMATOR -> L
    boolean HAS_POST_ON_ANIMATION -> M
    boolean HAS_ANNOUNCE_FOR_ACCESSIBILITY -> N
    boolean HAS_OBJECT_ANIMATION -> O
    boolean HAS_GLES20_REQUIRED -> P
    boolean HAS_ROTATION_ANIMATION -> Q
    boolean HAS_ORIENTATION_LOCK -> R
    boolean HAS_CANCELLATION_SIGNAL -> S
    boolean HAS_MEDIA_MUXER -> T
    boolean HAS_DISPLAY_LISTENER -> U
    boolean hasField(java.lang.Class,java.lang.String) -> a
    boolean hasMethod(java.lang.String,java.lang.String,java.lang.Class[]) -> a
    boolean hasMethod(java.lang.Class,java.lang.String,java.lang.Class[]) -> a
com.hippo.ehviewer.gallery.common.Utils -> com.hippo.ehviewer.gallery.b.b:
    long[] sCrcTable -> a
    boolean IS_DEBUG_BUILD -> b
    void assertTrue(boolean) -> a
    int nextPowerOf2(int) -> a
    float clamp(float,float,float) -> a
    boolean isOpaque(int) -> b
com.hippo.ehviewer.gallery.data.DownloadImageSet -> com.hippo.ehviewer.gallery.c.a:
    android.content.BroadcastReceiver mReceiver -> e
    void unregisterReceiver() -> a
com.hippo.ehviewer.gallery.data.DownloadImageSet$1 -> com.hippo.ehviewer.gallery.c.b:
    com.hippo.ehviewer.gallery.data.DownloadImageSet this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.hippo.ehviewer.gallery.data.ImageSet -> com.hippo.ehviewer.gallery.c.c:
    android.content.Context mContext -> a
    java.lang.String mGid -> b
    java.io.File mFolder -> c
    int mSize -> d
    android.util.SparseArray mImagesDate -> e
    com.hippo.ehviewer.util.ThreadPool mThreadPool -> f
    com.hippo.ehviewer.gallery.data.ImageSet$OnStateChangeListener mOnStateChangeListener -> g
    int getSize() -> b
    void setOnStateChangeListener(com.hippo.ehviewer.gallery.data.ImageSet$OnStateChangeListener) -> a
    int getImage(int,com.hippo.ehviewer.gallery.data.ImageSet$OnDecodeOverListener) -> a
    java.lang.String getFileNameForIndex(int) -> a
    boolean getFileForName(java.lang.String,com.hippo.ehviewer.gallery.data.ImageSet$ImageData) -> a
    void changeState(int,int) -> a
com.hippo.ehviewer.gallery.data.ImageSet$1 -> com.hippo.ehviewer.gallery.c.d:
    com.hippo.ehviewer.gallery.data.ImageSet this$0 -> a
    com.hippo.ehviewer.gallery.data.ImageSet$ImageData val$imageData -> b
    int val$index -> c
    java.lang.Object run(com.hippo.ehviewer.util.ThreadPool$JobContext) -> b
com.hippo.ehviewer.gallery.data.ImageSet$2 -> com.hippo.ehviewer.gallery.c.e:
    com.hippo.ehviewer.gallery.data.ImageSet this$0 -> a
    com.hippo.ehviewer.gallery.data.ImageSet$OnDecodeOverListener val$listener -> b
    int val$index -> c
    void onFutureDone(com.hippo.ehviewer.util.Future) -> a
com.hippo.ehviewer.gallery.data.ImageSet$ImageData -> com.hippo.ehviewer.gallery.c.f:
    int state -> a
    java.lang.String fileName -> b
    int type -> c
    com.hippo.ehviewer.gallery.data.ImageSet this$0 -> d
com.hippo.ehviewer.gallery.data.ImageSet$OnDecodeOverListener -> com.hippo.ehviewer.gallery.c.g:
    void onDecodeOver(java.lang.Object,int) -> a
com.hippo.ehviewer.gallery.data.ImageSet$OnStateChangeListener -> com.hippo.ehviewer.gallery.c.h:
    void onStateChange(int,int) -> a
com.hippo.ehviewer.gallery.glrenderer.BasicTexture -> com.hippo.ehviewer.gallery.d.a:
    int mId -> a
    int mState -> b
    int mWidth -> c
    int mHeight -> d
    int mTextureWidth -> e
    int mTextureHeight -> f
    boolean mHasBorder -> h
    com.hippo.ehviewer.gallery.glrenderer.GLCanvas mCanvasRef -> g
    java.util.WeakHashMap sAllTextures -> i
    java.lang.ThreadLocal sInFinalizer -> j
    void setAssociatedCanvas(com.hippo.ehviewer.gallery.glrenderer.GLCanvas) -> a
    void setSize(int,int) -> a
    boolean isFlippedVertically() -> a
    int getId() -> b
    int getWidth() -> c
    int getHeight() -> d
    int getTextureWidth() -> e
    int getTextureHeight() -> f
    boolean hasBorder() -> g
    void setBorder(boolean) -> a
    void draw(com.hippo.ehviewer.gallery.glrenderer.GLCanvas,int,int) -> a
    void draw(com.hippo.ehviewer.gallery.glrenderer.GLCanvas,int,int,int,int) -> a
    void draw(com.hippo.ehviewer.gallery.glrenderer.GLCanvas,android.graphics.RectF,android.graphics.RectF) -> a
    boolean onBind(com.hippo.ehviewer.gallery.glrenderer.GLCanvas) -> b
    int getTarget() -> h
    boolean isLoaded() -> i
    void recycle() -> j
    void yield() -> k
    void freeResource() -> o
    void finalize() -> finalize
    boolean inFinalizer() -> l
    void yieldAllTextures() -> m
    void invalidateAllTextures() -> n
com.hippo.ehviewer.gallery.glrenderer.BitmapTexture -> com.hippo.ehviewer.gallery.d.b:
    android.graphics.Bitmap mContentBitmap -> h
    void onFreeBitmap(android.graphics.Bitmap) -> a
    android.graphics.Bitmap onGetBitmap() -> o
com.hippo.ehviewer.gallery.glrenderer.CanvasTexture -> com.hippo.ehviewer.gallery.d.c:
    android.graphics.Canvas mCanvas -> h
    android.graphics.Bitmap$Config mConfig -> j
    android.graphics.Bitmap onGetBitmap() -> o
    void onFreeBitmap(android.graphics.Bitmap) -> a
    void onDraw(android.graphics.Canvas,android.graphics.Bitmap) -> a
com.hippo.ehviewer.gallery.glrenderer.ColorTexture -> com.hippo.ehviewer.gallery.d.d:
    int mColor -> a
    int mWidth -> b
    int mHeight -> c
    void draw(com.hippo.ehviewer.gallery.glrenderer.GLCanvas,int,int) -> a
    void draw(com.hippo.ehviewer.gallery.glrenderer.GLCanvas,int,int,int,int) -> a
    boolean isOpaque() -> a_
com.hippo.ehviewer.gallery.glrenderer.GLCanvas -> com.hippo.ehviewer.gallery.d.e:
    com.hippo.ehviewer.gallery.glrenderer.GLId getGLId() -> a
    void setSize(int,int) -> a
    void clearBuffer(float[]) -> a
    void translate(float,float) -> a
    void rotate(float,float,float,float) -> a
    void save() -> b
    void save(int) -> a
    void restore() -> c
    void drawLine(float,float,float,float,com.hippo.ehviewer.gallery.glrenderer.GLPaint) -> a
    void fillRect(float,float,float,float,int) -> a
    void drawTexture(com.hippo.ehviewer.gallery.glrenderer.BasicTexture,int,int,int,int) -> a
    void drawTexture(com.hippo.ehviewer.gallery.glrenderer.BasicTexture,android.graphics.RectF,android.graphics.RectF) -> a
    boolean unloadTexture(com.hippo.ehviewer.gallery.glrenderer.BasicTexture) -> a
    void deleteRecycledResources() -> d
    void setTextureParameters(com.hippo.ehviewer.gallery.glrenderer.BasicTexture) -> b
    void initializeTextureSize(com.hippo.ehviewer.gallery.glrenderer.BasicTexture,int,int) -> a
    void initializeTexture(com.hippo.ehviewer.gallery.glrenderer.BasicTexture,android.graphics.Bitmap) -> a
    void texSubImage2D(com.hippo.ehviewer.gallery.glrenderer.BasicTexture,int,int,android.graphics.Bitmap,int,int) -> a
com.hippo.ehviewer.gallery.glrenderer.GLES11Canvas -> com.hippo.ehviewer.gallery.d.f:
    float[] BOX_COORDINATES -> e
    javax.microedition.khronos.opengles.GL11 mGL -> f
    float[] mMatrixValues -> g
    float[] mTextureMatrixValues -> h
    float[] mMapPointsBuffer -> i
    float[] mTextureColor -> j
    int mBoxCoords -> k
    com.hippo.ehviewer.gallery.glrenderer.GLES11Canvas$GLState mGLState -> l
    java.util.ArrayList mTargetStack -> m
    float mAlpha -> n
    java.util.ArrayList mRestoreStack -> o
    com.hippo.ehviewer.gallery.glrenderer.GLES11Canvas$ConfigState mRecycledRestoreAction -> p
    android.graphics.RectF mDrawTextureSourceRect -> q
    android.graphics.RectF mDrawTextureTargetRect -> r
    float[] mTempMatrix -> s
    com.hippo.ehviewer.util.IntArray mUnboundTextures -> t
    com.hippo.ehviewer.util.IntArray mDeleteBuffers -> u
    int mScreenWidth -> v
    int mScreenHeight -> w
    boolean mBlendEnabled -> x
    int[] mFrameBuffer -> y
    float[] sCropRect -> z
    com.hippo.ehviewer.gallery.glrenderer.RawTexture mTargetTexture -> A
    int mCountDrawLine -> a
    int mCountFillRect -> b
    int mCountTextureRect -> c
    int mCountTextureOES -> d
    com.hippo.ehviewer.gallery.glrenderer.GLId mGLId -> B
    void setSize(int,int) -> a
    void setAlpha(float) -> a
    java.nio.ByteBuffer allocateDirectNativeOrderBuffer(int) -> b
    void drawLine(float,float,float,float,com.hippo.ehviewer.gallery.glrenderer.GLPaint) -> a
    void fillRect(float,float,float,float,int) -> a
    void translate(float,float) -> a
    void scale(float,float,float) -> a
    void rotate(float,float,float,float) -> a
    void textureRect(float,float,float,float) -> b
    float[] mapPoints(float[],int,int,int,int) -> a
    void drawBoundTexture(com.hippo.ehviewer.gallery.glrenderer.BasicTexture,int,int,int,int) -> b
    void drawTexture(com.hippo.ehviewer.gallery.glrenderer.BasicTexture,int,int,int,int) -> a
    void drawTexture(com.hippo.ehviewer.gallery.glrenderer.BasicTexture,int,int,int,int,float) -> a
    void drawTexture(com.hippo.ehviewer.gallery.glrenderer.BasicTexture,android.graphics.RectF,android.graphics.RectF) -> a
    void convertCoordinate(android.graphics.RectF,android.graphics.RectF,com.hippo.ehviewer.gallery.glrenderer.BasicTexture) -> a
    boolean bindTexture(com.hippo.ehviewer.gallery.glrenderer.BasicTexture) -> c
    boolean isMatrixRotatedOrFlipped(float[]) -> b
    void clearBuffer(float[]) -> a
    void setTextureCoords(android.graphics.RectF) -> a
    void setTextureCoords(float,float,float,float) -> c
    boolean unloadTexture(com.hippo.ehviewer.gallery.glrenderer.BasicTexture) -> a
    void deleteRecycledResources() -> d
    void save() -> b
    void save(int) -> a
    void restore() -> c
    void freeRestoreConfig(com.hippo.ehviewer.gallery.glrenderer.GLES11Canvas$ConfigState) -> a
    com.hippo.ehviewer.gallery.glrenderer.GLES11Canvas$ConfigState obtainRestoreConfig() -> e
    void saveTransform() -> f
    void restoreTransform() -> g
    void setTextureParameters(com.hippo.ehviewer.gallery.glrenderer.BasicTexture) -> b
    void initializeTextureSize(com.hippo.ehviewer.gallery.glrenderer.BasicTexture,int,int) -> a
    void initializeTexture(com.hippo.ehviewer.gallery.glrenderer.BasicTexture,android.graphics.Bitmap) -> a
    void texSubImage2D(com.hippo.ehviewer.gallery.glrenderer.BasicTexture,int,int,android.graphics.Bitmap,int,int) -> a
    com.hippo.ehviewer.gallery.glrenderer.GLId getGLId() -> a
    float[] access$0(com.hippo.ehviewer.gallery.glrenderer.GLES11Canvas) -> a
com.hippo.ehviewer.gallery.glrenderer.GLES11Canvas$ConfigState -> com.hippo.ehviewer.gallery.d.g:
    float mAlpha -> a
    float[] mMatrix -> b
    com.hippo.ehviewer.gallery.glrenderer.GLES11Canvas$ConfigState mNextFree -> c
    void restore(com.hippo.ehviewer.gallery.glrenderer.GLES11Canvas) -> a
com.hippo.ehviewer.gallery.glrenderer.GLES11Canvas$GLState -> com.hippo.ehviewer.gallery.d.h:
    javax.microedition.khronos.opengles.GL11 mGL -> a
    int mTexEnvMode -> b
    float mTextureAlpha -> c
    int mTextureTarget -> d
    boolean mBlendEnabled -> e
    float mLineWidth -> f
    boolean mLineSmooth -> g
    void setTexEnvMode(int) -> a
    void setLineWidth(float) -> a
    void setTextureAlpha(float) -> b
    void setColorMode(int,float) -> a
    void setTextureTarget(int) -> b
    void setBlendEnabled(boolean) -> a
com.hippo.ehviewer.gallery.glrenderer.GLES11IdImpl -> com.hippo.ehviewer.gallery.d.i:
    int sNextId -> a
    java.lang.Object sLock -> b
    int generateTexture() -> a
    void glGenBuffers(int,int[],int) -> a
    void glDeleteTextures(javax.microedition.khronos.opengles.GL11,int,int[],int) -> a
    void glDeleteBuffers(javax.microedition.khronos.opengles.GL11,int,int[],int) -> b
com.hippo.ehviewer.gallery.glrenderer.GLES20Canvas -> com.hippo.ehviewer.gallery.d.j:
    java.lang.String TAG -> e
    float[] BOX_COORDINATES -> f
    float[] BOUNDS_COORDINATES -> g
    float[] mMatrices -> h
    float[] mAlphas -> i
    com.hippo.ehviewer.util.IntArray mSaveFlags -> j
    int mCurrentAlphaIndex -> k
    int mCurrentMatrixIndex -> l
    int mWidth -> m
    int mHeight -> n
    float[] mProjectionMatrix -> o
    int mScreenWidth -> p
    int mScreenHeight -> q
    int mDrawProgram -> r
    int mTextureProgram -> s
    int mOesTextureProgram -> t
    int mMeshProgram -> u
    int mBoxCoordinates -> v
    com.hippo.ehviewer.gallery.glrenderer.GLES20Canvas$ShaderParameter[] mDrawParameters -> a
    com.hippo.ehviewer.gallery.glrenderer.GLES20Canvas$ShaderParameter[] mTextureParameters -> b
    com.hippo.ehviewer.gallery.glrenderer.GLES20Canvas$ShaderParameter[] mOesTextureParameters -> c
    com.hippo.ehviewer.gallery.glrenderer.GLES20Canvas$ShaderParameter[] mMeshParameters -> d
    com.hippo.ehviewer.util.IntArray mUnboundTextures -> w
    com.hippo.ehviewer.util.IntArray mDeleteBuffers -> x
    int mCountDrawMesh -> y
    int mCountTextureRect -> z
    int mCountFillRect -> A
    int mCountDrawLine -> B
    int[] mFrameBuffer -> C
    java.util.ArrayList mTargetTextures -> D
    float[] mTempMatrix -> E
    float[] mTempColor -> F
    android.graphics.RectF mTempSourceRect -> G
    android.graphics.RectF mTempTargetRect -> H
    float[] mTempTextureMatrix -> I
    int[] mTempIntArray -> J
    com.hippo.ehviewer.gallery.glrenderer.GLId mGLId -> K
    java.nio.FloatBuffer createBuffer(float[]) -> b
    int assembleProgram(int,int,com.hippo.ehviewer.gallery.glrenderer.GLES20Canvas$ShaderParameter[]) -> a
    int loadShader(int,java.lang.String) -> a
    void setSize(int,int) -> a
    void clearBuffer(float[]) -> a
    float getAlpha() -> e
    void translate(float,float) -> a
    void scale(float,float,float) -> a
    void rotate(float,float,float,float) -> a
    void save() -> b
    void save(int) -> a
    void restore() -> c
    void drawLine(float,float,float,float,com.hippo.ehviewer.gallery.glrenderer.GLPaint) -> a
    void draw(int,int,int,float,float,float,float,com.hippo.ehviewer.gallery.glrenderer.GLPaint) -> a
    void draw(int,int,int,float,float,float,float,int,float) -> a
    void prepareDraw(int,int,float) -> a
    float[] getColor(int) -> b
    void enableBlending(boolean) -> a
    void setPosition(com.hippo.ehviewer.gallery.glrenderer.GLES20Canvas$ShaderParameter[],int) -> a
    void draw(com.hippo.ehviewer.gallery.glrenderer.GLES20Canvas$ShaderParameter[],int,int,float,float,float,float) -> a
    void setMatrix(com.hippo.ehviewer.gallery.glrenderer.GLES20Canvas$ShaderParameter[],float,float,float,float) -> a
    void fillRect(float,float,float,float,int) -> a
    void drawTexture(com.hippo.ehviewer.gallery.glrenderer.BasicTexture,int,int,int,int) -> a
    void copyTextureCoordinates(com.hippo.ehviewer.gallery.glrenderer.BasicTexture,android.graphics.RectF) -> a
    void drawTexture(com.hippo.ehviewer.gallery.glrenderer.BasicTexture,android.graphics.RectF,android.graphics.RectF) -> a
    void drawTextureRect(com.hippo.ehviewer.gallery.glrenderer.BasicTexture,android.graphics.RectF,android.graphics.RectF) -> b
    void setTextureMatrix(android.graphics.RectF) -> a
    void convertCoordinate(android.graphics.RectF,android.graphics.RectF,com.hippo.ehviewer.gallery.glrenderer.BasicTexture) -> a
    void drawTextureRect(com.hippo.ehviewer.gallery.glrenderer.BasicTexture,float[],android.graphics.RectF) -> a
    com.hippo.ehviewer.gallery.glrenderer.GLES20Canvas$ShaderParameter[] prepareTexture(com.hippo.ehviewer.gallery.glrenderer.BasicTexture) -> c
    void prepareTexture(com.hippo.ehviewer.gallery.glrenderer.BasicTexture,int,com.hippo.ehviewer.gallery.glrenderer.GLES20Canvas$ShaderParameter[]) -> a
    boolean unloadTexture(com.hippo.ehviewer.gallery.glrenderer.BasicTexture) -> a
    void deleteRecycledResources() -> d
    com.hippo.ehviewer.gallery.glrenderer.RawTexture getTargetTexture() -> g
    void setTextureParameters(com.hippo.ehviewer.gallery.glrenderer.BasicTexture) -> b
    void initializeTextureSize(com.hippo.ehviewer.gallery.glrenderer.BasicTexture,int,int) -> a
    void initializeTexture(com.hippo.ehviewer.gallery.glrenderer.BasicTexture,android.graphics.Bitmap) -> a
    void texSubImage2D(com.hippo.ehviewer.gallery.glrenderer.BasicTexture,int,int,android.graphics.Bitmap,int,int) -> a
    int uploadBuffer(java.nio.FloatBuffer) -> a
    int uploadBuffer(java.nio.Buffer,int) -> a
    void checkError() -> f
    com.hippo.ehviewer.gallery.glrenderer.GLId getGLId() -> a
com.hippo.ehviewer.gallery.glrenderer.GLES20Canvas$AttributeShaderParameter -> com.hippo.ehviewer.gallery.d.k:
    void loadHandle(int) -> a
com.hippo.ehviewer.gallery.glrenderer.GLES20Canvas$ShaderParameter -> com.hippo.ehviewer.gallery.d.l:
    int handle -> a
    java.lang.String mName -> b
    void loadHandle(int) -> a
com.hippo.ehviewer.gallery.glrenderer.GLES20Canvas$UniformShaderParameter -> com.hippo.ehviewer.gallery.d.m:
    void loadHandle(int) -> a
com.hippo.ehviewer.gallery.glrenderer.GLES20IdImpl -> com.hippo.ehviewer.gallery.d.n:
    int[] mTempIntArray -> a
    int generateTexture() -> a
    void glGenBuffers(int,int[],int) -> a
    void glDeleteTextures(javax.microedition.khronos.opengles.GL11,int,int[],int) -> a
    void glDeleteBuffers(javax.microedition.khronos.opengles.GL11,int,int[],int) -> b
com.hippo.ehviewer.gallery.glrenderer.GLId -> com.hippo.ehviewer.gallery.d.o:
    int generateTexture() -> a
    void glGenBuffers(int,int[],int) -> a
    void glDeleteTextures(javax.microedition.khronos.opengles.GL11,int,int[],int) -> a
    void glDeleteBuffers(javax.microedition.khronos.opengles.GL11,int,int[],int) -> b
com.hippo.ehviewer.gallery.glrenderer.GLPaint -> com.hippo.ehviewer.gallery.d.p:
    float mLineWidth -> a
    int mColor -> b
    void setColor(int) -> a
    int getColor() -> a
    void setLineWidth(float) -> a
    float getLineWidth() -> b
com.hippo.ehviewer.gallery.glrenderer.MovieTexture -> com.hippo.ehviewer.gallery.d.q:
    android.graphics.Movie mMovie -> j
    int mDuration -> k
    long mMovieStart -> l
    com.hippo.ehviewer.gallery.glrenderer.MovieTexture newInstance(android.graphics.Movie) -> a
    boolean onBind(com.hippo.ehviewer.gallery.glrenderer.GLCanvas) -> b
    void onDraw(android.graphics.Canvas,android.graphics.Bitmap) -> a
com.hippo.ehviewer.gallery.glrenderer.RawTexture -> com.hippo.ehviewer.gallery.d.r:
    boolean mOpaque -> h
    boolean mIsFlipped -> i
    boolean isOpaque() -> a_
    boolean isFlippedVertically() -> a
    boolean onBind(com.hippo.ehviewer.gallery.glrenderer.GLCanvas) -> b
    void yield() -> k
    int getTarget() -> h
com.hippo.ehviewer.gallery.glrenderer.StringTexture -> com.hippo.ehviewer.gallery.d.s:
    java.lang.String mText -> j
    android.text.TextPaint mPaint -> k
    android.graphics.Paint$FontMetricsInt mMetrics -> l
    android.text.TextPaint getDefaultPaint(float,int) -> a
    com.hippo.ehviewer.gallery.glrenderer.StringTexture newInstance(java.lang.String,float,int) -> a
    com.hippo.ehviewer.gallery.glrenderer.StringTexture newInstance(java.lang.String,android.text.TextPaint) -> a
    void onDraw(android.graphics.Canvas,android.graphics.Bitmap) -> a
com.hippo.ehviewer.gallery.glrenderer.Texture -> com.hippo.ehviewer.gallery.d.t:
    boolean isOpaque() -> a_
com.hippo.ehviewer.gallery.glrenderer.UploadedTexture -> com.hippo.ehviewer.gallery.d.u:
    java.util.HashMap sBorderLines -> h
    com.hippo.ehviewer.gallery.glrenderer.UploadedTexture$BorderKey sBorderKey -> j
    boolean mContentValid -> k
    boolean mIsUploading -> l
    boolean mOpaque -> m
    boolean mThrottled -> n
    int sUploadedCount -> o
    android.graphics.Bitmap mBitmap -> i
    int mBorder -> p
    android.graphics.Bitmap getBorderLine(boolean,android.graphics.Bitmap$Config,int) -> a
    android.graphics.Bitmap getBitmap() -> t
    void freeBitmap() -> u
    int getWidth() -> c
    int getHeight() -> d
    android.graphics.Bitmap onGetBitmap() -> o
    void onFreeBitmap(android.graphics.Bitmap) -> a
    void invalidateContent() -> p
    boolean isContentValid() -> q
    void updateContent(com.hippo.ehviewer.gallery.glrenderer.GLCanvas) -> c
    void resetUploadLimit() -> r
    boolean uploadLimitReached() -> s
    void uploadToCanvas(com.hippo.ehviewer.gallery.glrenderer.GLCanvas) -> d
    boolean onBind(com.hippo.ehviewer.gallery.glrenderer.GLCanvas) -> b
    int getTarget() -> h
    void setOpaque(boolean) -> b
    boolean isOpaque() -> a_
    void recycle() -> j
com.hippo.ehviewer.gallery.glrenderer.UploadedTexture$BorderKey -> com.hippo.ehviewer.gallery.d.v:
    boolean vertical -> a
    android.graphics.Bitmap$Config config -> b
    int length -> c
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    com.hippo.ehviewer.gallery.glrenderer.UploadedTexture$BorderKey clone() -> a
    java.lang.Object clone() -> clone
com.hippo.ehviewer.gallery.ui.AnimationTime -> com.hippo.ehviewer.gallery.ui.a:
    long sTime -> a
    void update() -> a
    long get() -> b
com.hippo.ehviewer.gallery.ui.DownUpDetector -> com.hippo.ehviewer.gallery.ui.b:
    boolean mStillDown -> a
    com.hippo.ehviewer.gallery.ui.DownUpDetector$DownUpListener mListener -> b
    void setState(boolean,android.view.MotionEvent) -> a
    void onTouchEvent(android.view.MotionEvent) -> a
com.hippo.ehviewer.gallery.ui.DownUpDetector$DownUpListener -> com.hippo.ehviewer.gallery.ui.c:
    void onDown(android.view.MotionEvent) -> a
    void onUp(android.view.MotionEvent) -> b
com.hippo.ehviewer.gallery.ui.GLRoot -> com.hippo.ehviewer.gallery.ui.d:
    void requestRender() -> requestRender
com.hippo.ehviewer.gallery.ui.GLRoot$OnGLIdleListener -> com.hippo.ehviewer.gallery.ui.e:
    boolean onGLIdle(com.hippo.ehviewer.gallery.glrenderer.GLCanvas,boolean) -> a
com.hippo.ehviewer.gallery.ui.GLRootView -> com.hippo.ehviewer.gallery.ui.GLRootView:
    int mFrameCount -> a
    long mFrameCountingStart -> b
    int mInvalidateColor -> c
    javax.microedition.khronos.opengles.GL11 mGL -> d
    com.hippo.ehviewer.gallery.glrenderer.GLCanvas mCanvas -> e
    com.hippo.ehviewer.gallery.ui.GLView mContentView -> f
    com.hippo.ehviewer.gallery.ui.OrientationSource mOrientationSource -> g
    int mCompensation -> h
    android.graphics.Matrix mCompensationMatrix -> i
    int mDisplayRotation -> j
    int mFlags -> k
    boolean mRenderRequested -> l
    java.util.ArrayList mAnimations -> m
    java.util.ArrayDeque mIdleListeners -> n
    com.hippo.ehviewer.gallery.ui.GLRootView$IdleRunner mIdleRunner -> o
    java.util.concurrent.locks.ReentrantLock mRenderLock -> p
    java.util.concurrent.locks.Condition mFreezeCondition -> q
    boolean mFreeze -> r
    boolean mInDownState -> s
    java.lang.Runnable mRequestRenderOnAnimationFrame -> t
    void setContentPane(com.hippo.ehviewer.gallery.ui.GLView) -> setContentPane
    void requestRender() -> requestRender
    void superRequestRender() -> c
    void requestLayoutContentPane() -> a
    void layoutContentPane() -> d
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
    void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
    void onDrawFrameLocked(javax.microedition.khronos.opengles.GL10) -> a
    void rotateCanvas(int) -> a
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    void onPause() -> onPause
    void setOrientationSource(com.hippo.ehviewer.gallery.ui.OrientationSource) -> setOrientationSource
    int getDisplayRotation() -> getDisplayRotation
    int getCompensation() -> getCompensation
    android.graphics.Matrix getCompensationMatrix() -> getCompensationMatrix
    void unfreeze() -> b
    void setLightsOutMode(boolean) -> setLightsOutMode
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    void onDetachedFromWindow() -> onDetachedFromWindow
    void finalize() -> finalize
    void access$0(com.hippo.ehviewer.gallery.ui.GLRootView) -> a
    java.util.ArrayDeque access$1(com.hippo.ehviewer.gallery.ui.GLRootView) -> b
    java.util.concurrent.locks.ReentrantLock access$2(com.hippo.ehviewer.gallery.ui.GLRootView) -> c
    com.hippo.ehviewer.gallery.glrenderer.GLCanvas access$3(com.hippo.ehviewer.gallery.ui.GLRootView) -> d
    boolean access$4(com.hippo.ehviewer.gallery.ui.GLRootView) -> e
com.hippo.ehviewer.gallery.ui.GLRootView$1 -> com.hippo.ehviewer.gallery.ui.f:
    com.hippo.ehviewer.gallery.ui.GLRootView this$0 -> a
    void run() -> run
com.hippo.ehviewer.gallery.ui.GLRootView$IdleRunner -> com.hippo.ehviewer.gallery.ui.g:
    boolean mActive -> b
    com.hippo.ehviewer.gallery.ui.GLRootView this$0 -> a
    void run() -> run
    void enable() -> a
com.hippo.ehviewer.gallery.ui.GLView -> com.hippo.ehviewer.gallery.ui.h:
    android.graphics.Rect mBounds -> a
    android.graphics.Rect mPaddings -> b
    com.hippo.ehviewer.gallery.ui.GLRoot mRoot -> j
    com.hippo.ehviewer.gallery.ui.GLView mParent -> c
    java.util.ArrayList mComponents -> k
    com.hippo.ehviewer.gallery.ui.GLView mMotionTarget -> l
    com.hippo.ehviewer.gallery.anim.CanvasAnimation mAnimation -> m
    int mViewFlags -> n
    int mMeasuredWidth -> d
    int mMeasuredHeight -> e
    int mLastWidthSpec -> o
    int mLastHeightSpec -> p
    int mScrollY -> f
    int mScrollX -> g
    int mScrollHeight -> h
    int mScrollWidth -> i
    float[] mBackgroundColor -> q
    int getVisibility() -> a
    void attachToRoot(com.hippo.ehviewer.gallery.ui.GLRoot) -> a
    void detachFromRoot() -> b
    int getComponentCount() -> c
    com.hippo.ehviewer.gallery.ui.GLView getComponent(int) -> a
    com.hippo.ehviewer.gallery.ui.GLRoot getGLRoot() -> d
    void invalidate() -> e
    void render(com.hippo.ehviewer.gallery.glrenderer.GLCanvas) -> a
    void setBackgroundColor(float[]) -> a
    void renderBackground(com.hippo.ehviewer.gallery.glrenderer.GLCanvas) -> b
    void renderChild(com.hippo.ehviewer.gallery.glrenderer.GLCanvas,com.hippo.ehviewer.gallery.ui.GLView) -> a
    boolean onTouch(android.view.MotionEvent) -> a
    boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.hippo.ehviewer.gallery.ui.GLView,boolean) -> a
    boolean dispatchTouchEvent(android.view.MotionEvent) -> b
    void layout(int,int,int,int) -> a
    boolean setBounds(int,int,int,int) -> b
    void onLayout(boolean,int,int,int,int) -> a
    void onAttachToRoot(com.hippo.ehviewer.gallery.ui.GLRoot) -> b
    void onDetachFromRoot() -> f
com.hippo.ehviewer.gallery.ui.GestureRecognizer -> com.hippo.ehviewer.gallery.ui.i:
    android.view.GestureDetector mGestureDetector -> a
    android.view.ScaleGestureDetector mScaleDetector -> b
    com.hippo.ehviewer.gallery.ui.DownUpDetector mDownUpDetector -> c
    com.hippo.ehviewer.gallery.ui.GestureRecognizer$Listener mListener -> d
    boolean mStillScroll -> e
    void onTouchEvent(android.view.MotionEvent) -> a
    com.hippo.ehviewer.gallery.ui.GestureRecognizer$Listener access$0(com.hippo.ehviewer.gallery.ui.GestureRecognizer) -> a
    void access$1(com.hippo.ehviewer.gallery.ui.GestureRecognizer,boolean) -> a
    boolean access$2(com.hippo.ehviewer.gallery.ui.GestureRecognizer) -> b
com.hippo.ehviewer.gallery.ui.GestureRecognizer$Listener -> com.hippo.ehviewer.gallery.ui.j:
    boolean onSingleTapUp(float,float) -> a
    boolean onDoubleTap(float,float) -> b
    void onLongPress(android.view.MotionEvent) -> a
    boolean onScrollBegin(float,float,float,float) -> a
    boolean onScroll(float,float,float,float) -> b
    boolean onScrollEnd() -> a
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> a
    boolean onScaleBegin(float,float) -> c
    boolean onScale(float,float,float) -> a
    void onScaleEnd() -> b
    void onDown(float,float) -> d
    void onUp() -> c
com.hippo.ehviewer.gallery.ui.GestureRecognizer$MyDownUpListener -> com.hippo.ehviewer.gallery.ui.k:
    com.hippo.ehviewer.gallery.ui.GestureRecognizer this$0 -> a
    void onDown(android.view.MotionEvent) -> a
    void onUp(android.view.MotionEvent) -> b
com.hippo.ehviewer.gallery.ui.GestureRecognizer$MyGestureListener -> com.hippo.ehviewer.gallery.ui.l:
    float firstX -> a
    float firstY -> b
    com.hippo.ehviewer.gallery.ui.GestureRecognizer this$0 -> c
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
com.hippo.ehviewer.gallery.ui.GestureRecognizer$MyScaleListener -> com.hippo.ehviewer.gallery.ui.m:
    com.hippo.ehviewer.gallery.ui.GestureRecognizer this$0 -> a
    boolean onScaleBegin(android.view.ScaleGestureDetector) -> onScaleBegin
    boolean onScale(android.view.ScaleGestureDetector) -> onScale
    void onScaleEnd(android.view.ScaleGestureDetector) -> onScaleEnd
com.hippo.ehviewer.gallery.ui.OrientationSource -> com.hippo.ehviewer.gallery.ui.n:
    int getDisplayRotation() -> a
    int getCompensation() -> b
com.hippo.ehviewer.gallery.util.GalleryUtils -> com.hippo.ehviewer.gallery.e.a:
    float sPixelDensity -> a
    java.lang.Thread sCurrentThread -> b
    float[] intColorToFloatARGBArray(int) -> a
    void setRenderThread() -> a
com.hippo.ehviewer.gallery.util.MotionEventHelper -> com.hippo.ehviewer.gallery.e.b:
    android.view.MotionEvent transformEvent(android.view.MotionEvent,android.graphics.Matrix) -> a
    android.view.MotionEvent transformEventNew(android.view.MotionEvent,android.graphics.Matrix) -> b
    android.view.MotionEvent transformEventOld(android.view.MotionEvent,android.graphics.Matrix) -> c
    int[] getPointerIds(android.view.MotionEvent) -> a
    android.view.MotionEvent$PointerCoords[] getPointerCoords(android.view.MotionEvent) -> b
    float transformAngle(android.graphics.Matrix,float) -> a
com.hippo.ehviewer.network.Constant -> com.hippo.ehviewer.b.a:
    java.lang.String defaultUserAgent -> a
    java.lang.String userAgent -> b
com.hippo.ehviewer.network.Downloader -> com.hippo.ehviewer.b.b:
    android.content.Context mContext -> a
    java.io.File mFolder -> b
    java.lang.String mPath -> c
    java.lang.String mFileName -> d
    java.net.URL mUrl -> e
    com.hippo.ehviewer.network.Downloader$Controlor mContorlor -> f
    int mTotalSize -> g
    int mDownloadSize -> h
    int mRedirectionCount -> i
    int status -> j
    com.hippo.ehviewer.network.Downloader$OnDownloadListener mListener -> k
    java.lang.Exception mException -> l
    com.hippo.ehviewer.network.Downloader$Controlor resetData(java.lang.String,java.lang.String,java.lang.String) -> a
    void setOnDownloadListener(com.hippo.ehviewer.network.Downloader$OnDownloadListener) -> a
    void run() -> run
    int getStatus() -> a
    void initFolder() -> b
    void executeDownload() -> c
    void processResponseHeaders(java.net.HttpURLConnection) -> a
    void transferData(java.net.HttpURLConnection) -> b
    void transferData(java.io.InputStream,java.io.RandomAccessFile) -> a
    int readFromResponse(byte[],java.io.InputStream) -> a
    void writeDataToDestination(byte[],int,java.io.RandomAccessFile) -> a
com.hippo.ehviewer.network.Downloader$Controlor -> com.hippo.ehviewer.b.c:
    boolean mStop -> b
    com.hippo.ehviewer.network.Downloader this$0 -> a
    void stop() -> a
    void reset() -> b
    boolean isStop() -> c
com.hippo.ehviewer.network.Downloader$OnDownloadListener -> com.hippo.ehviewer.b.d:
    void onDownloadStartConnect() -> a
    void onDownloadStartDownload(int) -> a
    void onDownloadStatusUpdate(int,int) -> a
    void onDownloadOver(int) -> b
com.hippo.ehviewer.network.HttpHelper -> com.hippo.ehviewer.b.e:
    android.content.Context mContext -> a
    java.lang.Exception mException -> b
    java.lang.String getEMsg() -> a
    java.lang.String getPageContext(java.net.HttpURLConnection) -> a
    java.lang.String get(java.lang.String) -> a
    java.lang.String post(java.lang.String,java.lang.String[][]) -> a
    java.lang.String postJson(java.lang.String,java.lang.String) -> a
    android.graphics.Bitmap getImage(java.lang.String,java.lang.String,android.support.v4.util.LruCache,com.hippo.ehviewer.DiskCache,boolean) -> a
com.hippo.ehviewer.network.ShapreCookieStore -> com.hippo.ehviewer.b.f:
    com.hippo.ehviewer.network.ShapreCookieStore$CookieDataSource datasource -> a
    java.util.Map map -> b
    void add(java.net.URI,java.net.HttpCookie) -> add
    java.net.URI cookiesUri(java.net.URI) -> a
    java.util.List get(java.net.URI) -> get
    java.util.List getCookies() -> getCookies
    java.util.List getURIs() -> getURIs
    boolean remove(java.net.URI,java.net.HttpCookie) -> remove
    boolean removeAll() -> removeAll
    void writeObject(java.net.HttpCookie,java.io.ObjectOutputStream) -> a
    java.net.HttpCookie readObject(java.io.ObjectInputStream) -> a
com.hippo.ehviewer.network.ShapreCookieStore$CookieDataSource -> com.hippo.ehviewer.b.g:
    android.content.SharedPreferences cookiePrefs -> b
    java.util.Map data -> c
    com.hippo.ehviewer.network.ShapreCookieStore this$0 -> a
    java.util.Map getAll() -> a
    void add(java.lang.String,java.net.HttpCookie) -> a
    void remove(java.lang.String,java.net.HttpCookie) -> b
    void removeAll() -> b
    void putStrings(java.lang.String,java.util.Set) -> a
    java.lang.String[] decodeStrings(java.lang.String) -> a
    java.lang.String encodeCookie(java.net.HttpCookie) -> a
    java.net.HttpCookie decodeCookie(java.lang.String) -> b
com.hippo.ehviewer.preference.AutoListPreference -> com.hippo.ehviewer.preference.AutoListPreference:
    java.lang.CharSequence getSummary() -> getSummary
    void setValue(java.lang.String) -> setValue
com.hippo.ehviewer.service.DownloadService -> com.hippo.ehviewer.service.DownloadService:
    com.hippo.ehviewer.AppContext mAppContext -> a
    com.hippo.ehviewer.service.DownloadService$ServiceBinder mBinder -> b
    android.app.NotificationManager mNotifyManager -> c
    android.support.v4.app.NotificationCompat$Builder mBuilder -> d
    com.hippo.ehviewer.util.EhClient$DownloadMangaManager downloadMangaManager -> e
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onDestroy() -> onDestroy
    void add(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void add(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,java.lang.String) -> a
    void add(com.hippo.ehviewer.DownloadInfo) -> a
    void cancel(java.lang.String) -> a
    void notifyUpdate() -> a
    void notifyUpdate(java.lang.String,int,int) -> a
    android.support.v4.app.NotificationCompat$Builder access$0(com.hippo.ehviewer.service.DownloadService) -> a
    android.app.NotificationManager access$1(com.hippo.ehviewer.service.DownloadService) -> b
com.hippo.ehviewer.service.DownloadService$1 -> com.hippo.ehviewer.service.a:
    com.hippo.ehviewer.service.DownloadService this$0 -> a
    void onDownloadMangaAllStart() -> a
    void onDownloadMangaAllOver() -> b
    void onDownloadMangaStart(java.lang.String) -> a
    void onDownloadMangaStop(java.lang.String) -> b
    void onDownloadMangaOver(java.lang.String,boolean) -> a
    void onDownloadPage(java.lang.String,int,int) -> a
com.hippo.ehviewer.service.DownloadService$ServiceBinder -> com.hippo.ehviewer.service.b:
    com.hippo.ehviewer.service.DownloadService this$0 -> a
    com.hippo.ehviewer.service.DownloadService getService() -> a
com.hippo.ehviewer.service.DownloadServiceConnection -> com.hippo.ehviewer.service.c:
    com.hippo.ehviewer.service.DownloadService mService -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    com.hippo.ehviewer.service.DownloadService getService() -> a
com.hippo.ehviewer.util.Cache -> com.hippo.ehviewer.c.a:
    android.content.Context mContext -> d
    com.hippo.ehviewer.DiskCache cpCache -> a
    android.support.v4.util.LruCache memoryCache -> b
    android.support.v4.util.LruCache mdCache -> c
    boolean mInit -> e
    void init(android.content.Context) -> a
    boolean hasSdCard() -> a
com.hippo.ehviewer.util.Cache$1 -> com.hippo.ehviewer.c.b:
    int sizeOf(java.lang.String,android.graphics.Bitmap) -> a
    int sizeOf(java.lang.Object,java.lang.Object) -> b
com.hippo.ehviewer.util.Cache$2 -> com.hippo.ehviewer.c.c:
    int sizeOf(java.lang.String,com.hippo.ehviewer.MangaDetail) -> a
    int sizeOf(java.lang.Object,java.lang.Object) -> b
com.hippo.ehviewer.util.Config -> com.hippo.ehviewer.c.d:
    java.lang.String DOWNLOAD_PATH_DEFAULT -> a
    boolean mInit -> b
    android.content.Context mContext -> c
    android.content.SharedPreferences mConfigPre -> d
    void init(android.content.Context) -> a
    boolean isAllowed() -> a
    void allowed() -> b
    boolean isLogin() -> c
    void loginNow() -> d
    void logoutNow() -> e
    java.lang.String getDownloadPath() -> f
    int getCoverDiskCacheSize() -> g
    int getPageScalingMode() -> h
    int getStartPosition() -> i
    int getScreenOriMode() -> j
    int screenOriPre2Value(int) -> a
    boolean isExhentai() -> k
    void exhentai(boolean) -> a
    int getUpdateDate() -> l
    void setUpdateDate() -> m
    void setUpdateDate(int) -> b
    java.lang.String getUpdateServer() -> n
com.hippo.ehviewer.util.Crash -> com.hippo.ehviewer.c.e:
    android.content.Context mContext -> a
    java.lang.String externalCrashFilePath -> b
    java.lang.String internalCrashFilePath -> c
    java.text.DateFormat formatter -> d
    boolean mInit -> e
    void init(android.content.Context) -> a
    void saveCrashInfo2File(java.lang.Throwable) -> a
    void collectDeviceInfo(java.lang.StringBuffer) -> a
    java.lang.String getLastCrash() -> a
com.hippo.ehviewer.util.Download -> com.hippo.ehviewer.c.f:
    android.content.Context mContext -> a
    android.content.SharedPreferences mDownloadInfoPre -> b
    java.util.ArrayList mListOrder -> c
    java.util.ArrayList mDownloadInfos -> d
    boolean mInit -> e
    void init(android.content.Context) -> a
    void getDownloadInfo() -> b
    boolean add(java.lang.String,com.hippo.ehviewer.DownloadInfo) -> a
    boolean remove(int) -> a
    com.hippo.ehviewer.DownloadInfo get(java.lang.String) -> a
    java.util.ArrayList getDownloadInfoList() -> a
    com.hippo.ehviewer.DownloadInfo get(int) -> b
    java.lang.String getKey(int) -> c
    void notify(java.lang.String) -> b
    java.lang.String encode(com.hippo.ehviewer.DownloadInfo) -> a
    com.hippo.ehviewer.DownloadInfo decode(java.lang.String) -> c
    void writeObject(com.hippo.ehviewer.DownloadInfo,java.io.ObjectOutputStream) -> a
    com.hippo.ehviewer.DownloadInfo readObject(java.io.ObjectInputStream) -> a
com.hippo.ehviewer.util.EhClient -> com.hippo.ehviewer.c.g:
    java.lang.String API_URL -> c
    java.lang.String loginUrl -> d
    java.lang.String listHeader -> a
    java.lang.String detailHeader -> b
    boolean mLogin -> e
    java.lang.String mName -> f
    java.lang.String mLogoutUrl -> g
    com.hippo.ehviewer.AppContext mAppContext -> h
    com.hippo.ehviewer.util.ThreadPool mThreadPool -> i
    android.os.Handler mHandler -> j
    android.os.Handler getGetImageHandler -> k
    void setHeader(boolean) -> a
    boolean isLogin() -> a
    java.lang.String getUsername() -> b
    void login(java.lang.String,java.lang.String,com.hippo.ehviewer.util.EhClient$OnLoginListener) -> a
    void checkLogin(com.hippo.ehviewer.util.EhClient$OnCheckLoginListener) -> a
    void logout(com.hippo.ehviewer.util.EhClient$OnLogoutListener) -> a
    void getMangaList(java.lang.String,java.lang.Object,com.hippo.ehviewer.util.EhClient$OnGetMangaListListener) -> a
    int getType(java.lang.String) -> e
    java.lang.String getRate(java.lang.String) -> f
    void getMangaDetail(java.lang.String,com.hippo.ehviewer.MangaDetail,com.hippo.ehviewer.util.EhClient$OnGetMangaDetailListener) -> a
    java.lang.String[][] getTags(java.lang.String) -> a
    java.lang.String[] getTagGroup(java.lang.String) -> b
    void getPageList(java.lang.String,java.lang.Object,com.hippo.ehviewer.util.EhClient$OnGetPageListListener) -> a
    com.hippo.ehviewer.PageList getPageList(java.lang.String) -> g
    void getMangaUrl(java.lang.String,java.lang.Object,com.hippo.ehviewer.util.EhClient$OnGetMangaUrlListener) -> a
    void getImage(java.lang.String,java.lang.String,int,android.support.v4.util.LruCache,com.hippo.ehviewer.DiskCache,java.lang.Object,com.hippo.ehviewer.util.EhClient$OnGetImageListener) -> a
    com.hippo.ehviewer.AppContext access$0(com.hippo.ehviewer.util.EhClient) -> a
    java.lang.String access$1() -> c
    java.lang.String access$2(com.hippo.ehviewer.util.EhClient) -> b
    int access$3(java.lang.String) -> c
    java.lang.String access$4(java.lang.String) -> d
    com.hippo.ehviewer.PageList access$5(com.hippo.ehviewer.util.EhClient,java.lang.String) -> a
    android.os.Handler access$6() -> d
    android.os.Handler access$7() -> e
    void access$8(com.hippo.ehviewer.util.EhClient,boolean) -> a
    void access$9(com.hippo.ehviewer.util.EhClient,java.lang.String) -> b
    void access$10(com.hippo.ehviewer.util.EhClient,java.lang.String) -> c
com.hippo.ehviewer.util.EhClient$1 -> com.hippo.ehviewer.c.h:
    void handleMessage(android.os.Message) -> handleMessage
com.hippo.ehviewer.util.EhClient$10 -> com.hippo.ehviewer.c.i:
    com.hippo.ehviewer.util.EhClient this$0 -> a
    java.lang.Object val$checkFlag -> b
    com.hippo.ehviewer.util.EhClient$GetMangaListRunnable val$task -> c
    com.hippo.ehviewer.util.EhClient$OnGetMangaListListener val$listener -> d
    void onFutureDone(com.hippo.ehviewer.util.Future) -> a
com.hippo.ehviewer.util.EhClient$11 -> com.hippo.ehviewer.c.j:
    com.hippo.ehviewer.util.EhClient this$0 -> a
    com.hippo.ehviewer.util.EhClient$GetMangaDetailRunnable val$task -> b
    java.lang.Object run(com.hippo.ehviewer.util.ThreadPool$JobContext) -> b
com.hippo.ehviewer.util.EhClient$12 -> com.hippo.ehviewer.c.k:
    com.hippo.ehviewer.util.EhClient this$0 -> a
    com.hippo.ehviewer.util.EhClient$GetMangaDetailRunnable val$task -> b
    com.hippo.ehviewer.MangaDetail val$md -> c
    com.hippo.ehviewer.util.EhClient$OnGetMangaDetailListener val$listener -> d
    void onFutureDone(com.hippo.ehviewer.util.Future) -> a
com.hippo.ehviewer.util.EhClient$13 -> com.hippo.ehviewer.c.l:
    com.hippo.ehviewer.util.EhClient this$0 -> a
    com.hippo.ehviewer.util.EhClient$GetPageListRunnable val$task -> b
    java.lang.Object run(com.hippo.ehviewer.util.ThreadPool$JobContext) -> b
com.hippo.ehviewer.util.EhClient$14 -> com.hippo.ehviewer.c.m:
    com.hippo.ehviewer.util.EhClient this$0 -> a
    java.lang.Object val$checkFlag -> b
    com.hippo.ehviewer.util.EhClient$GetPageListRunnable val$task -> c
    com.hippo.ehviewer.util.EhClient$OnGetPageListListener val$listener -> d
    void onFutureDone(com.hippo.ehviewer.util.Future) -> a
com.hippo.ehviewer.util.EhClient$15 -> com.hippo.ehviewer.c.n:
    com.hippo.ehviewer.util.EhClient this$0 -> a
    com.hippo.ehviewer.util.EhClient$GetMangaUrlRunnable val$task -> b
    java.lang.Object run(com.hippo.ehviewer.util.ThreadPool$JobContext) -> b
com.hippo.ehviewer.util.EhClient$16 -> com.hippo.ehviewer.c.o:
    com.hippo.ehviewer.util.EhClient this$0 -> a
    java.lang.Object val$checkFlag -> b
    com.hippo.ehviewer.util.EhClient$GetMangaUrlRunnable val$task -> c
    com.hippo.ehviewer.util.EhClient$OnGetMangaUrlListener val$listener -> d
    void onFutureDone(com.hippo.ehviewer.util.Future) -> a
com.hippo.ehviewer.util.EhClient$2 -> com.hippo.ehviewer.c.p:
    void handleMessage(android.os.Message) -> handleMessage
com.hippo.ehviewer.util.EhClient$3 -> com.hippo.ehviewer.c.q:
    com.hippo.ehviewer.util.EhClient this$0 -> a
    com.hippo.ehviewer.util.EhClient$LoginRunnable val$task -> b
    java.lang.Object run(com.hippo.ehviewer.util.ThreadPool$JobContext) -> b
com.hippo.ehviewer.util.EhClient$4 -> com.hippo.ehviewer.c.r:
    com.hippo.ehviewer.util.EhClient this$0 -> a
    com.hippo.ehviewer.util.EhClient$LoginRunnable val$task -> b
    com.hippo.ehviewer.util.EhClient$OnLoginListener val$listener -> c
    void onFutureDone(com.hippo.ehviewer.util.Future) -> a
com.hippo.ehviewer.util.EhClient$5 -> com.hippo.ehviewer.c.s:
    com.hippo.ehviewer.util.EhClient this$0 -> a
    com.hippo.ehviewer.util.EhClient$checkLoginRunnable val$task -> b
    java.lang.Object run(com.hippo.ehviewer.util.ThreadPool$JobContext) -> b
com.hippo.ehviewer.util.EhClient$6 -> com.hippo.ehviewer.c.t:
    com.hippo.ehviewer.util.EhClient this$0 -> a
    com.hippo.ehviewer.util.EhClient$checkLoginRunnable val$task -> b
    com.hippo.ehviewer.util.EhClient$OnCheckLoginListener val$listener -> c
    void onFutureDone(com.hippo.ehviewer.util.Future) -> a
com.hippo.ehviewer.util.EhClient$7 -> com.hippo.ehviewer.c.u:
    com.hippo.ehviewer.util.EhClient this$0 -> a
    com.hippo.ehviewer.util.EhClient$LogoutRunnable val$task -> b
    java.lang.Object run(com.hippo.ehviewer.util.ThreadPool$JobContext) -> b
com.hippo.ehviewer.util.EhClient$8 -> com.hippo.ehviewer.c.v:
    com.hippo.ehviewer.util.EhClient this$0 -> a
    com.hippo.ehviewer.util.EhClient$LogoutRunnable val$task -> b
    com.hippo.ehviewer.util.EhClient$OnLogoutListener val$listener -> c
    void onFutureDone(com.hippo.ehviewer.util.Future) -> a
com.hippo.ehviewer.util.EhClient$9 -> com.hippo.ehviewer.c.w:
    com.hippo.ehviewer.util.EhClient this$0 -> a
    com.hippo.ehviewer.util.EhClient$GetMangaListRunnable val$task -> b
    java.lang.Object run(com.hippo.ehviewer.util.ThreadPool$JobContext) -> b
com.hippo.ehviewer.util.EhClient$CheckLoginPackage -> com.hippo.ehviewer.c.x:
    boolean ok -> a
    com.hippo.ehviewer.util.EhClient$OnCheckLoginListener listener -> b
    java.lang.String eMsg -> c
    com.hippo.ehviewer.util.EhClient this$0 -> d
com.hippo.ehviewer.util.EhClient$DownloadMangaManager -> com.hippo.ehviewer.c.y:
    com.hippo.ehviewer.DownloadInfo curDownloadInfo -> b
    com.hippo.ehviewer.network.Downloader$Controlor curControlor -> c
    java.util.ArrayList mDownloadQueue -> d
    java.lang.Object taskLock -> e
    com.hippo.ehviewer.util.EhClient$OnDownloadMangaListener listener -> f
    com.hippo.ehviewer.service.DownloadService mService -> g
    boolean mStop -> h
    com.hippo.ehviewer.util.EhClient this$0 -> a
    void setOnDownloadMangaListener(com.hippo.ehviewer.util.EhClient$OnDownloadMangaListener) -> a
    void setDownloadService(com.hippo.ehviewer.service.DownloadService) -> a
    void add(com.hippo.ehviewer.DownloadInfo) -> a
    void cancel(java.lang.String) -> a
    java.lang.String getCurDownloadId() -> a
    void start() -> b
    com.hippo.ehviewer.util.EhClient$OnDownloadMangaListener access$0(com.hippo.ehviewer.util.EhClient$DownloadMangaManager) -> a
    com.hippo.ehviewer.DownloadInfo access$1(com.hippo.ehviewer.util.EhClient$DownloadMangaManager) -> b
    com.hippo.ehviewer.service.DownloadService access$2(com.hippo.ehviewer.util.EhClient$DownloadMangaManager) -> c
    java.util.ArrayList access$3(com.hippo.ehviewer.util.EhClient$DownloadMangaManager) -> d
    java.lang.Object access$4(com.hippo.ehviewer.util.EhClient$DownloadMangaManager) -> e
    void access$5(com.hippo.ehviewer.util.EhClient$DownloadMangaManager,com.hippo.ehviewer.DownloadInfo) -> a
    void access$6(com.hippo.ehviewer.util.EhClient$DownloadMangaManager,com.hippo.ehviewer.network.Downloader$Controlor) -> a
    com.hippo.ehviewer.util.EhClient access$7(com.hippo.ehviewer.util.EhClient$DownloadMangaManager) -> f
com.hippo.ehviewer.util.EhClient$DownloadMangaManager$1 -> com.hippo.ehviewer.c.z:
    com.hippo.ehviewer.util.EhClient$DownloadMangaManager this$1 -> a
    void run() -> run
    com.hippo.ehviewer.util.EhClient$DownloadMangaManager access$0(com.hippo.ehviewer.util.EhClient$DownloadMangaManager$1) -> a
com.hippo.ehviewer.util.EhClient$DownloadMangaManager$1$1 -> com.hippo.ehviewer.c.aa:
    com.hippo.ehviewer.util.EhClient$DownloadMangaManager$1 this$2 -> a
    void onDownloadStartConnect() -> a
    void onDownloadStartDownload(int) -> a
    void onDownloadStatusUpdate(int,int) -> a
    void onDownloadOver(int) -> b
com.hippo.ehviewer.util.EhClient$GetImagePackage -> com.hippo.ehviewer.c.ab:
    java.lang.Object res -> a
    java.lang.Object checkFlag -> b
    com.hippo.ehviewer.util.EhClient$OnGetImageListener listener -> c
com.hippo.ehviewer.util.EhClient$GetImageRunnable -> com.hippo.ehviewer.c.ac:
    java.lang.String url -> a
    java.lang.String key -> b
    int type -> c
    android.support.v4.util.LruCache memoryCache -> d
    com.hippo.ehviewer.DiskCache diskCache -> e
    java.lang.Object checkFlag -> f
    com.hippo.ehviewer.util.EhClient$OnGetImageListener listener -> g
    void run() -> run
    void sendMessage(java.lang.Object,int) -> a
com.hippo.ehviewer.util.EhClient$GetMangaDetailPackage -> com.hippo.ehviewer.c.ad:
    boolean ok -> a
    com.hippo.ehviewer.MangaDetail mangaDetail -> b
    com.hippo.ehviewer.util.EhClient$OnGetMangaDetailListener listener -> c
    java.lang.String eMsg -> d
    com.hippo.ehviewer.util.EhClient this$0 -> e
com.hippo.ehviewer.util.EhClient$GetMangaDetailRunnable -> com.hippo.ehviewer.c.ae:
    java.lang.String url -> d
    com.hippo.ehviewer.MangaDetail md -> e
    boolean ok -> a
    java.lang.String eMsg -> b
    com.hippo.ehviewer.util.EhClient this$0 -> c
    void run() -> run
com.hippo.ehviewer.util.EhClient$GetMangaListPackage -> com.hippo.ehviewer.c.af:
    java.lang.Object checkFlag -> a
    java.util.ArrayList lmdArray -> b
    int indexPerPage -> c
    int maxPage -> d
    com.hippo.ehviewer.util.EhClient$OnGetMangaListListener listener -> e
    java.lang.String eMsg -> f
    com.hippo.ehviewer.util.EhClient this$0 -> g
com.hippo.ehviewer.util.EhClient$GetMangaListRunnable -> com.hippo.ehviewer.c.ag:
    java.lang.String url -> f
    java.util.ArrayList lmdArray -> a
    int indexPerPage -> b
    int maxPage -> c
    java.lang.String eMsg -> d
    com.hippo.ehviewer.util.EhClient this$0 -> e
    void run() -> run
com.hippo.ehviewer.util.EhClient$GetMangaUrlPackage -> com.hippo.ehviewer.c.ah:
    java.lang.Object checkFlag -> a
    java.lang.String[] strs -> b
    com.hippo.ehviewer.util.EhClient$OnGetMangaUrlListener listener -> c
    java.lang.String eMsg -> d
    com.hippo.ehviewer.util.EhClient this$0 -> e
com.hippo.ehviewer.util.EhClient$GetMangaUrlRunnable -> com.hippo.ehviewer.c.ai:
    java.lang.String url -> d
    java.lang.String[] strs -> a
    java.lang.String eMsg -> b
    com.hippo.ehviewer.util.EhClient this$0 -> c
    void run() -> run
com.hippo.ehviewer.util.EhClient$GetPageListPackage -> com.hippo.ehviewer.c.aj:
    java.lang.Object checkFlag -> a
    com.hippo.ehviewer.PageList pageList -> b
    com.hippo.ehviewer.util.EhClient$OnGetPageListListener listener -> c
    java.lang.String eMsg -> d
    com.hippo.ehviewer.util.EhClient this$0 -> e
com.hippo.ehviewer.util.EhClient$GetPageListRunnable -> com.hippo.ehviewer.c.ak:
    java.lang.String url -> d
    com.hippo.ehviewer.PageList pageList -> a
    java.lang.String eMsg -> b
    com.hippo.ehviewer.util.EhClient this$0 -> c
    void run() -> run
com.hippo.ehviewer.util.EhClient$LoginPackage -> com.hippo.ehviewer.c.al:
    boolean ok -> a
    com.hippo.ehviewer.util.EhClient$OnLoginListener listener -> b
    java.lang.String eMsg -> c
    com.hippo.ehviewer.util.EhClient this$0 -> d
com.hippo.ehviewer.util.EhClient$LoginRunnable -> com.hippo.ehviewer.c.am:
    java.lang.String username -> d
    java.lang.String password -> e
    java.lang.String eMsg -> a
    boolean ok -> b
    com.hippo.ehviewer.util.EhClient this$0 -> c
    void run() -> run
com.hippo.ehviewer.util.EhClient$LogoutPackage -> com.hippo.ehviewer.c.an:
    boolean ok -> a
    com.hippo.ehviewer.util.EhClient$OnLogoutListener listener -> b
    java.lang.String eMsg -> c
    com.hippo.ehviewer.util.EhClient this$0 -> d
com.hippo.ehviewer.util.EhClient$LogoutRunnable -> com.hippo.ehviewer.c.ao:
    java.lang.String eMsg -> a
    boolean ok -> b
    com.hippo.ehviewer.util.EhClient this$0 -> c
    void run() -> run
com.hippo.ehviewer.util.EhClient$OnCheckLoginListener -> com.hippo.ehviewer.c.ap:
    void onSuccess() -> a
    void onFailure(java.lang.String) -> a
com.hippo.ehviewer.util.EhClient$OnDownloadMangaListener -> com.hippo.ehviewer.c.aq:
    void onDownloadMangaStart(java.lang.String) -> a
    void onDownloadMangaStop(java.lang.String) -> b
    void onDownloadMangaOver(java.lang.String,boolean) -> a
    void onDownloadPage(java.lang.String,int,int) -> a
    void onDownloadMangaAllStart() -> a
    void onDownloadMangaAllOver() -> b
com.hippo.ehviewer.util.EhClient$OnGetImageListener -> com.hippo.ehviewer.c.ar:
    void onSuccess(java.lang.Object,java.lang.Object) -> a
    void onFailure(int) -> a
com.hippo.ehviewer.util.EhClient$OnGetMangaDetailListener -> com.hippo.ehviewer.c.as:
    void onSuccess(com.hippo.ehviewer.MangaDetail) -> a
    void onFailure(java.lang.String) -> a
com.hippo.ehviewer.util.EhClient$OnGetMangaListListener -> com.hippo.ehviewer.c.at:
    void onSuccess(java.lang.Object,java.util.ArrayList,int,int) -> a
    void onFailure(java.lang.Object,java.lang.String) -> a
com.hippo.ehviewer.util.EhClient$OnGetMangaUrlListener -> com.hippo.ehviewer.c.au:
    void onSuccess(java.lang.Object,java.lang.String[]) -> a
    void onFailure(java.lang.Object,java.lang.String) -> a
com.hippo.ehviewer.util.EhClient$OnGetPageListListener -> com.hippo.ehviewer.c.av:
    void onSuccess(java.lang.Object,com.hippo.ehviewer.PageList) -> a
    void onFailure(java.lang.Object,java.lang.String) -> a
com.hippo.ehviewer.util.EhClient$OnLoginListener -> com.hippo.ehviewer.c.aw:
    void onSuccess() -> a
    void onFailure(java.lang.String) -> a
com.hippo.ehviewer.util.EhClient$OnLogoutListener -> com.hippo.ehviewer.c.ax:
    void onSuccess() -> a
    void onFailure(java.lang.String) -> a
com.hippo.ehviewer.util.EhClient$Parser -> com.hippo.ehviewer.c.ay:
    int pageSum -> b
    java.lang.String firstPage -> c
    java.lang.String prePage -> d
    java.lang.String nextPage -> e
    java.lang.String imageUrlStr -> f
    com.hippo.ehviewer.util.EhClient this$0 -> a
    int getPageSum() -> a
    java.lang.String getFirstPage() -> b
    java.lang.String getNextPage() -> c
    java.lang.String getImageUrlStr() -> d
    boolean getFirstPagePageSumForDetail(java.lang.String) -> a
    boolean getPageInfoSumForPage(java.lang.String) -> b
com.hippo.ehviewer.util.EhClient$checkLoginRunnable -> com.hippo.ehviewer.c.az:
    java.lang.String eMsg -> a
    boolean ok -> b
    java.lang.String name -> c
    java.lang.String logoutUrl -> d
    com.hippo.ehviewer.util.EhClient this$0 -> e
    void run() -> run
com.hippo.ehviewer.util.Favourite -> com.hippo.ehviewer.c.ba:
    android.content.Context mContext -> a
    android.content.SharedPreferences mFavouritePre -> b
    java.util.ArrayList mListOrder -> c
    java.util.ArrayList mFavouriteLmd -> d
    boolean mInit -> e
    void init(android.content.Context) -> a
    void getFavourite() -> b
    boolean push(com.hippo.ehviewer.ListMangaDetail) -> a
    boolean remove(int) -> a
    java.util.ArrayList getFavouriteList() -> a
    java.lang.String encodeLmd(com.hippo.ehviewer.ListMangaDetail) -> b
    com.hippo.ehviewer.ListMangaDetail decodeLmd(java.lang.String) -> a
    void writeObject(com.hippo.ehviewer.ListMangaDetail,java.io.ObjectOutputStream) -> a
    com.hippo.ehviewer.ListMangaDetail readObject(java.io.ObjectInputStream) -> a
com.hippo.ehviewer.util.Future -> com.hippo.ehviewer.c.bb:
    java.lang.Object get() -> a
com.hippo.ehviewer.util.FutureListener -> com.hippo.ehviewer.c.bc:
    void onFutureDone(com.hippo.ehviewer.util.Future) -> a
com.hippo.ehviewer.util.IntArray -> com.hippo.ehviewer.c.bd:
    int[] mData -> a
    int mSize -> b
    void add(int) -> a
    int removeLast() -> a
    int size() -> b
    int[] getInternalArray() -> c
    void clear() -> d
com.hippo.ehviewer.util.Log -> com.hippo.ehviewer.c.be:
    int d(java.lang.String,java.lang.String) -> a
    int i(java.lang.String,java.lang.String) -> b
    int w(java.lang.String,java.lang.String) -> c
    int w(java.lang.String,java.lang.String,java.lang.Throwable) -> a
    int e(java.lang.String,java.lang.String) -> d
    int e(java.lang.String,java.lang.String,java.lang.Throwable) -> b
com.hippo.ehviewer.util.PriorityThreadFactory -> com.hippo.ehviewer.c.bf:
    int mPriority -> a
    java.util.concurrent.atomic.AtomicInteger mNumber -> b
    java.lang.String mName -> c
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
    int access$0(com.hippo.ehviewer.util.PriorityThreadFactory) -> a
com.hippo.ehviewer.util.PriorityThreadFactory$1 -> com.hippo.ehviewer.c.bg:
    com.hippo.ehviewer.util.PriorityThreadFactory this$0 -> a
    void run() -> run
com.hippo.ehviewer.util.Tag -> com.hippo.ehviewer.c.bh:
    android.content.Context mContext -> a
    android.content.SharedPreferences mTagPre -> b
    java.util.ArrayList mListOrder -> c
    java.util.ArrayList mTags -> d
    boolean mInit -> e
    void init(android.content.Context) -> a
    void getTag() -> b
    boolean add(java.lang.String,com.hippo.ehviewer.ListUrls) -> a
    boolean swap(int,int) -> a
    boolean remove(java.lang.String) -> a
    com.hippo.ehviewer.ListUrls get(java.lang.String) -> b
    com.hippo.ehviewer.ListUrls get(int) -> a
    void set(int,java.lang.String,com.hippo.ehviewer.ListUrls) -> a
    void set(int,com.hippo.ehviewer.ListUrls) -> a
    java.util.ArrayList getKeyList() -> a
    java.lang.String encode(com.hippo.ehviewer.ListUrls) -> a
    com.hippo.ehviewer.ListUrls decode(java.lang.String) -> c
    void writeObject(com.hippo.ehviewer.ListUrls,java.io.ObjectOutputStream) -> a
    com.hippo.ehviewer.ListUrls readObject(java.io.ObjectInputStream) -> a
com.hippo.ehviewer.util.ThreadPool -> com.hippo.ehviewer.c.bi:
    com.hippo.ehviewer.util.ThreadPool$JobContext JOB_CONTEXT_STUB -> a
    com.hippo.ehviewer.util.ThreadPool$ResourceCounter mCpuCounter -> b
    com.hippo.ehviewer.util.ThreadPool$ResourceCounter mNetworkCounter -> c
    java.util.concurrent.Executor mExecutor -> d
    com.hippo.ehviewer.util.Future submit(com.hippo.ehviewer.util.ThreadPool$Job,com.hippo.ehviewer.util.FutureListener) -> a
com.hippo.ehviewer.util.ThreadPool$Job -> com.hippo.ehviewer.c.bj:
    java.lang.Object run(com.hippo.ehviewer.util.ThreadPool$JobContext) -> b
com.hippo.ehviewer.util.ThreadPool$JobContext -> com.hippo.ehviewer.c.bk:
com.hippo.ehviewer.util.ThreadPool$JobContextStub -> com.hippo.ehviewer.c.bl:
com.hippo.ehviewer.util.ThreadPool$ResourceCounter -> com.hippo.ehviewer.c.bm:
    int value -> a
com.hippo.ehviewer.util.ThreadPool$Worker -> com.hippo.ehviewer.c.bn:
    com.hippo.ehviewer.util.ThreadPool$Job mJob -> b
    com.hippo.ehviewer.util.FutureListener mListener -> c
    com.hippo.ehviewer.util.ThreadPool$ResourceCounter mWaitOnResource -> d
    boolean mIsCancelled -> e
    boolean mIsDone -> f
    java.lang.Object mResult -> g
    int mMode -> h
    com.hippo.ehviewer.util.ThreadPool this$0 -> a
    void run() -> run
    java.lang.Object get() -> a
    boolean setMode(int) -> a
    com.hippo.ehviewer.util.ThreadPool$ResourceCounter modeToCounter(int) -> b
    boolean acquireResource(com.hippo.ehviewer.util.ThreadPool$ResourceCounter) -> a
    void releaseResource(com.hippo.ehviewer.util.ThreadPool$ResourceCounter) -> b
com.hippo.ehviewer.util.TimeRunner -> com.hippo.ehviewer.c.bo:
    boolean mRunInThread -> a
    boolean mListenerInThread -> b
    com.hippo.ehviewer.util.TimeRunner$OnTimeListener mListener -> c
    android.os.Handler mHandler -> d
    int mDuration -> e
    int mDelay -> f
    void setOnTimerListener(com.hippo.ehviewer.util.TimeRunner$OnTimeListener) -> a
    void setDuration(int) -> a
    void start() -> a
    void start(int) -> b
    void run(float,int) -> a
    com.hippo.ehviewer.util.TimeRunner$OnTimeListener access$0(com.hippo.ehviewer.util.TimeRunner) -> a
    int access$1(com.hippo.ehviewer.util.TimeRunner) -> b
    boolean access$2(com.hippo.ehviewer.util.TimeRunner) -> c
    android.os.Handler access$3(com.hippo.ehviewer.util.TimeRunner) -> d
    int access$4(com.hippo.ehviewer.util.TimeRunner) -> e
    boolean access$5(com.hippo.ehviewer.util.TimeRunner) -> f
com.hippo.ehviewer.util.TimeRunner$1 -> com.hippo.ehviewer.c.bp:
    com.hippo.ehviewer.util.TimeRunner this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.hippo.ehviewer.util.TimeRunner$2 -> com.hippo.ehviewer.c.bq:
    com.hippo.ehviewer.util.TimeRunner this$0 -> a
    void run() -> run
com.hippo.ehviewer.util.TimeRunner$OnTimeListener -> com.hippo.ehviewer.c.br:
    void onStart() -> a
    void onEnd() -> b
com.hippo.ehviewer.util.Ui -> com.hippo.ehviewer.c.bs:
    com.hippo.ehviewer.util.Ui INSTANCE -> q
    android.content.Context mContext -> r
    android.graphics.BitmapFactory$Options opt -> s
    android.graphics.Bitmap BITMAP_DOUJINSHI -> a
    android.graphics.Bitmap BITMAP_MANGAI -> b
    android.graphics.Bitmap BITMAP_ARTIST_CG -> c
    android.graphics.Bitmap BITMAP_GAME_CG -> d
    android.graphics.Bitmap BITMAP_WESTERN -> e
    android.graphics.Bitmap BITMAP_NON_H -> f
    android.graphics.Bitmap BITMAP_IMAGE_SET -> g
    android.graphics.Bitmap BITMAP_COSPLAY -> h
    android.graphics.Bitmap BITMAP_ASIAN_PORN -> i
    android.graphics.Bitmap BITMAP_MISC -> j
    android.graphics.Bitmap BITMAP_UNKNOWN -> k
    android.graphics.Bitmap BITMAP_START -> l
    android.graphics.Bitmap BITMAP_START_HALF -> m
    android.graphics.Bitmap BITMAP_START_EMPTY -> n
    android.graphics.Bitmap BITMAP_LAUNCH -> o
    android.graphics.Bitmap BITMAP_TOUCH -> p
    boolean mInit -> t
    void init(android.content.Context) -> a
    void setType(android.widget.ImageView,int) -> a
    void addStar(android.view.ViewGroup,java.lang.String) -> a
    int dp2pix(int) -> a
    android.graphics.BitmapFactory$Options getBitmapOpt() -> a
    boolean hasNavigationBar() -> b
com.hippo.ehviewer.util.Util -> com.hippo.ehviewer.c.bt:
    java.lang.String TAG -> a
    java.lang.String[] SIZE_UNIT -> b
    void copy(java.io.InputStream,java.io.OutputStream) -> a
    void copy(java.io.InputStream,java.io.OutputStream,int) -> a
    int getResourcesType(java.lang.String) -> a
    java.lang.String getExtension(java.lang.String) -> b
    java.lang.String getName(java.lang.String) -> c
    java.lang.String byteArrayToHexString(byte[]) -> a
    byte[] hexStringToByteArray(java.lang.String) -> d
    java.lang.String InputStream2String(java.io.InputStream,java.lang.String) -> a
    java.lang.String getFileForUrl(java.lang.String) -> e
    java.lang.String[] getStrings(android.content.SharedPreferences,java.lang.String) -> a
    void putStrings(android.content.SharedPreferences,java.lang.String,java.util.List) -> a
    void closeStreamQuietly(java.io.Closeable) -> a
    void deleteContents(java.io.File) -> a
    int getDate() -> a
    java.lang.String sizeToString(long) -> a
com.hippo.ehviewer.view.AlertButton -> com.hippo.ehviewer.view.AlertButton:
    android.app.AlertDialog dialog -> a
com.hippo.ehviewer.view.CheckImage -> com.hippo.ehviewer.view.CheckImage:
    java.lang.String TAG -> a
    android.graphics.Bitmap mask -> b
    boolean mPressed -> c
    void onClick(android.view.View) -> onClick
    void onDraw(android.graphics.Canvas) -> onDraw
    void pressed() -> a
    void unpressed() -> b
    boolean isPressed() -> isPressed
com.hippo.ehviewer.view.DownloadItemLayout -> com.hippo.ehviewer.view.DownloadItemLayout:
    java.lang.String gid -> a
    int status -> b
    boolean type -> c
    int lastStartIndex -> d
    float downloadSize -> e
    boolean isWait -> f
com.hippo.ehviewer.view.GetPaddingRelativeLayout -> com.hippo.ehviewer.view.GetPaddingRelativeLayout:
    android.view.View mView1 -> a
    android.view.View mView2 -> b
    void setView(android.view.View,android.view.View) -> a
    boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
com.hippo.ehviewer.view.OlImageView -> com.hippo.ehviewer.view.OlImageView:
    java.lang.String TAG -> a
    java.lang.String url -> b
    java.lang.String key -> c
    int status -> d
    android.support.v4.util.LruCache memoryCache -> e
    com.hippo.ehviewer.DiskCache diskCache -> f
    android.graphics.Bitmap waitBitmap -> g
    android.graphics.Bitmap refreshBitmap -> h
    com.hippo.ehviewer.view.OlImageView$OnLoadListener onLoadListener -> i
    void setOnLoadListener(com.hippo.ehviewer.view.OlImageView$OnLoadListener) -> setOnLoadListener
    void setUrl(java.lang.String) -> setUrl
    java.lang.String getUrl() -> getUrl
    void setKey(java.lang.String) -> setKey
    java.lang.String getKey() -> getKey
    void setCache(android.support.v4.util.LruCache,com.hippo.ehviewer.DiskCache) -> a
    boolean loadImage(boolean) -> a
    void load() -> c
    int getStatus() -> getStatus
    void access$0(com.hippo.ehviewer.view.OlImageView,int) -> a
    com.hippo.ehviewer.view.OlImageView$OnLoadListener access$1(com.hippo.ehviewer.view.OlImageView) -> a
    android.graphics.Bitmap access$2() -> a
    android.graphics.Bitmap access$3() -> b
com.hippo.ehviewer.view.OlImageView$1 -> com.hippo.ehviewer.view.a:
    com.hippo.ehviewer.view.OlImageView this$0 -> a
    void onSuccess(java.lang.Object,java.lang.Object) -> a
    void onFailure(int) -> a
    com.hippo.ehviewer.view.OlImageView access$0(com.hippo.ehviewer.view.OlImageView$1) -> a
com.hippo.ehviewer.view.OlImageView$1$1 -> com.hippo.ehviewer.view.b:
    com.hippo.ehviewer.view.OlImageView$1 this$1 -> a
    void onClick(android.view.View) -> onClick
com.hippo.ehviewer.view.OlImageView$OnLoadListener -> com.hippo.ehviewer.view.c:
    void onLoadCompleted(boolean) -> a
com.hippo.ehviewer.view.SuperImageView -> com.hippo.ehviewer.view.d:
    java.lang.String TAG -> a
    android.graphics.Movie mMovie -> b
    long mMovieStart -> c
    int mCurrentAnimationTime -> d
    android.net.Uri mUri -> e
    int mResource -> f
    android.graphics.Matrix mMatrix -> g
    com.hippo.ehviewer.view.SuperImageView$ScaleType mScaleType -> h
    boolean mHaveFrame -> i
    boolean mAdjustViewBounds -> j
    int mMaxWidth -> k
    int mMaxHeight -> l
    android.graphics.ColorFilter mColorFilter -> m
    android.graphics.Xfermode mXfermode -> n
    int mAlpha -> o
    int mViewAlphaScale -> p
    boolean mColorMod -> q
    android.graphics.drawable.Drawable mDrawable -> r
    int[] mState -> s
    boolean mMergeState -> t
    int mLevel -> u
    int mDrawableWidth -> v
    int mDrawableHeight -> w
    android.graphics.Matrix mDrawMatrix -> x
    android.graphics.RectF mTempSrc -> y
    android.graphics.RectF mTempDst -> z
    boolean mCropToPadding -> A
    int mBaseline -> B
    boolean mBaselineAlignBottom -> C
    boolean mAdjustViewBoundsCompat -> D
    com.hippo.ehviewer.view.SuperImageView$ScaleType[] sScaleTypeArray -> E
    android.graphics.Matrix$ScaleToFit[] sS2FArray -> F
    void initImageView() -> a
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    boolean hasOverlappingRendering() -> hasOverlappingRendering
    void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean getAdjustViewBounds() -> getAdjustViewBounds
    void setAdjustViewBounds(boolean) -> setAdjustViewBounds
    int getMaxWidth() -> getMaxWidth
    void setMaxWidth(int) -> setMaxWidth
    int getMaxHeight() -> getMaxHeight
    void setMaxHeight(int) -> setMaxHeight
    android.graphics.drawable.Drawable getDrawable() -> getDrawable
    int getResourceWidth() -> getResourceWidth
    int getResourceHeight() -> getResourceHeight
    android.graphics.Movie getMovie() -> getMovie
    void setImageResource(int) -> setImageResource
    void setImageURI(android.net.Uri) -> setImageURI
    void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    void setImageMovie(android.graphics.Movie) -> setImageMovie
    void setImageInputStream(java.io.InputStream) -> setImageInputStream
    void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    void setSelected(boolean) -> setSelected
    void setImageLevel(int) -> setImageLevel
    void setScaleType(com.hippo.ehviewer.view.SuperImageView$ScaleType) -> setScaleType
    com.hippo.ehviewer.view.SuperImageView$ScaleType getScaleType() -> getScaleType
    android.graphics.Matrix getImageMatrix() -> getImageMatrix
    void setImageMatrix(android.graphics.Matrix) -> setImageMatrix
    boolean getCropToPadding() -> getCropToPadding
    void setCropToPadding(boolean) -> setCropToPadding
    void resolveUri() -> b
    int[] onCreateDrawableState(int) -> onCreateDrawableState
    void updateDrawable(android.graphics.drawable.Drawable) -> a
    void updateMovie(android.graphics.Movie) -> a
    void resizeFromResource() -> c
    void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    android.graphics.Matrix$ScaleToFit scaleTypeToScaleToFit(com.hippo.ehviewer.view.SuperImageView$ScaleType) -> a
    void onMeasure(int,int) -> onMeasure
    int resolveAdjustedSize(int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void configureBounds() -> d
    void drawableStateChanged() -> drawableStateChanged
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawMovieFrame(android.graphics.Canvas) -> a
    void updateAnimationTime() -> e
    int getBaseline() -> getBaseline
    void setBaseline(int) -> setBaseline
    void setBaselineAlignBottom(boolean) -> setBaselineAlignBottom
    boolean getBaselineAlignBottom() -> getBaselineAlignBottom
    void setColorFilter(int,android.graphics.PorterDuff$Mode) -> a
    void setColorFilter(int) -> setColorFilter
    void setXfermode(android.graphics.Xfermode) -> setXfermode
    android.graphics.ColorFilter getColorFilter() -> getColorFilter
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    int getImageAlpha() -> getImageAlpha
    void setImageAlpha(int) -> setImageAlpha
    void setAlpha(int) -> setAlpha
    void applyColorMod() -> f
    void setVisibility(int) -> setVisibility
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
com.hippo.ehviewer.view.SuperImageView$ScaleType -> com.hippo.ehviewer.view.e:
    com.hippo.ehviewer.view.SuperImageView$ScaleType MATRIX -> a
    com.hippo.ehviewer.view.SuperImageView$ScaleType FIT_XY -> b
    com.hippo.ehviewer.view.SuperImageView$ScaleType FIT_START -> c
    com.hippo.ehviewer.view.SuperImageView$ScaleType FIT_CENTER -> d
    com.hippo.ehviewer.view.SuperImageView$ScaleType FIT_END -> e
    com.hippo.ehviewer.view.SuperImageView$ScaleType CENTER -> f
    com.hippo.ehviewer.view.SuperImageView$ScaleType CENTER_CROP -> g
    com.hippo.ehviewer.view.SuperImageView$ScaleType CENTER_INSIDE -> h
    int nativeInt -> i
    com.hippo.ehviewer.view.SuperImageView$ScaleType[] ENUM$VALUES -> j
    com.hippo.ehviewer.view.SuperImageView$ScaleType[] values() -> values
    com.hippo.ehviewer.view.SuperImageView$ScaleType valueOf(java.lang.String) -> valueOf
com.hippo.ehviewer.view.TagListView -> com.hippo.ehviewer.view.TagListView:
    int SMOOTH_SCROLL_AMOUNT_AT_EDGE -> b
    int MOVE_DURATION -> c
    int LINE_THICKNESS -> d
    int SENSITY -> e
    java.util.ArrayList mItemList -> a
    int mLastEventX -> f
    int mLastEventY -> g
    int mDownY -> h
    int mDownX -> i
    int mTotalOffset -> j
    boolean mCellIsMobile -> k
    boolean mIsMobileScrolling -> l
    int mSmoothScrollAmountAtEdge -> m
    int INVALID_ID -> n
    long mAboveItemId -> o
    long mMobileItemId -> p
    long mBelowItemId -> q
    int mStableItemCount -> r
    android.graphics.drawable.BitmapDrawable mHoverCell -> s
    android.graphics.drawable.BitmapDrawable mDeleteCell -> t
    android.graphics.drawable.BitmapDrawable mModifyCell -> u
    android.graphics.Rect mHoverCellCurrentBounds -> v
    android.graphics.Rect mHoverCellOriginalBounds -> w
    boolean mIsDelete -> x
    boolean mIsModify -> y
    int INVALID_POINTER_ID -> z
    int mActivePointerId -> A
    boolean mIsWaitingForScrollFinish -> B
    int mScrollState -> C
    com.hippo.ehviewer.view.TagListView$OnModifyListener listener -> D
    com.hippo.ehviewer.view.TagListView$OnMoveLister movelistener -> E
    android.widget.AdapterView$OnItemLongClickListener mOnItemLongClickListener -> F
    android.animation.TypeEvaluator sBoundEvaluator -> G
    android.widget.AbsListView$OnScrollListener mScrollListener -> H
    void init(android.content.Context) -> a
    android.graphics.drawable.BitmapDrawable getAndAddHoverView(android.view.View) -> a
    android.graphics.drawable.BitmapDrawable getDeleteView(android.view.View) -> b
    android.graphics.Bitmap getDeleteBitmap(android.view.View) -> c
    android.graphics.drawable.BitmapDrawable getModifyView(android.view.View) -> d
    android.graphics.Bitmap getModifyBitmap(android.view.View) -> e
    android.graphics.Bitmap getBitmapWithBorder(android.view.View) -> f
    android.graphics.Bitmap getBitmapFromView(android.view.View) -> g
    void updateNeighborViewsForID(long) -> c
    android.view.View getViewForID(long) -> a
    int getPositionForID(long) -> b
    void setStableItemCount(int) -> setStableItemCount
    void setOnModifyListener(com.hippo.ehviewer.view.TagListView$OnModifyListener) -> setOnModifyListener
    void setOnMoveLister(com.hippo.ehviewer.view.TagListView$OnMoveLister) -> setOnMoveLister
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void handleCellSwitch() -> a
    void swapElements(java.util.ArrayList,int,int) -> a
    void touchEventsEnded() -> b
    void animateRemoval(android.view.View) -> h
    void touchEventsCancelled() -> c
    void handleMobileCellScroll() -> d
    boolean handleMobileCellScroll(android.graphics.Rect) -> a
    void setItemList(java.util.ArrayList) -> setItemList
    int access$0(com.hippo.ehviewer.view.TagListView) -> a
    com.hippo.ehviewer.view.TagListView$OnMoveLister access$1(com.hippo.ehviewer.view.TagListView) -> b
    void access$2(com.hippo.ehviewer.view.TagListView,int) -> a
    int access$3(com.hippo.ehviewer.view.TagListView) -> c
    int access$4(com.hippo.ehviewer.view.TagListView) -> d
    void access$5(com.hippo.ehviewer.view.TagListView,long) -> a
    android.graphics.drawable.BitmapDrawable access$6(com.hippo.ehviewer.view.TagListView,android.view.View) -> a
    void access$7(com.hippo.ehviewer.view.TagListView,android.graphics.drawable.BitmapDrawable) -> a
    android.graphics.drawable.BitmapDrawable access$8(com.hippo.ehviewer.view.TagListView,android.view.View) -> b
    void access$9(com.hippo.ehviewer.view.TagListView,android.graphics.drawable.BitmapDrawable) -> b
    android.graphics.drawable.BitmapDrawable access$10(com.hippo.ehviewer.view.TagListView,android.view.View) -> c
    void access$11(com.hippo.ehviewer.view.TagListView,android.graphics.drawable.BitmapDrawable) -> c
    void access$12(com.hippo.ehviewer.view.TagListView,boolean) -> a
    long access$13(com.hippo.ehviewer.view.TagListView) -> e
    void access$14(com.hippo.ehviewer.view.TagListView,long) -> b
    void access$15(com.hippo.ehviewer.view.TagListView,int) -> b
    boolean access$16(com.hippo.ehviewer.view.TagListView) -> f
    boolean access$17(com.hippo.ehviewer.view.TagListView) -> g
    void access$18(com.hippo.ehviewer.view.TagListView) -> h
    boolean access$19(com.hippo.ehviewer.view.TagListView) -> i
    void access$20(com.hippo.ehviewer.view.TagListView) -> j
    void access$21(com.hippo.ehviewer.view.TagListView) -> k
    int access$22(com.hippo.ehviewer.view.TagListView) -> l
    void access$23(com.hippo.ehviewer.view.TagListView,long) -> c
    void access$24(com.hippo.ehviewer.view.TagListView,long) -> d
com.hippo.ehviewer.view.TagListView$1 -> com.hippo.ehviewer.view.f:
    com.hippo.ehviewer.view.TagListView this$0 -> a
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
com.hippo.ehviewer.view.TagListView$2 -> com.hippo.ehviewer.view.g:
    android.graphics.Rect evaluate(float,android.graphics.Rect,android.graphics.Rect) -> a
    int interpolate(int,int,float) -> a
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
com.hippo.ehviewer.view.TagListView$3 -> com.hippo.ehviewer.view.h:
    int mPreviousFirstVisibleItem -> b
    int mPreviousVisibleItemCount -> c
    int mCurrentFirstVisibleItem -> d
    int mCurrentVisibleItemCount -> e
    int mCurrentScrollState -> f
    com.hippo.ehviewer.view.TagListView this$0 -> a
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void isScrollCompleted() -> c
    void checkAndHandleFirstVisibleCellChange() -> a
    void checkAndHandleLastVisibleCellChange() -> b
com.hippo.ehviewer.view.TagListView$4 -> com.hippo.ehviewer.view.i:
    com.hippo.ehviewer.view.TagListView this$0 -> a
    android.view.ViewTreeObserver val$observer -> b
    long val$switchItemID -> c
    int val$deltaY -> d
    int val$switchViewStartTop -> e
    boolean onPreDraw() -> onPreDraw
com.hippo.ehviewer.view.TagListView$5 -> com.hippo.ehviewer.view.j:
    com.hippo.ehviewer.view.TagListView this$0 -> a
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.hippo.ehviewer.view.TagListView$6 -> com.hippo.ehviewer.view.k:
    com.hippo.ehviewer.view.TagListView this$0 -> a
    android.view.View val$mobileView -> b
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.hippo.ehviewer.view.TagListView$7 -> com.hippo.ehviewer.view.l:
    com.hippo.ehviewer.view.TagListView this$0 -> a
    android.view.ViewTreeObserver val$observer -> b
    com.hippo.ehviewer.view.TagsAdapter val$mAdapter -> c
    java.util.HashMap val$mItemIdTopMap -> d
    boolean onPreDraw() -> onPreDraw
    com.hippo.ehviewer.view.TagListView access$0(com.hippo.ehviewer.view.TagListView$7) -> a
com.hippo.ehviewer.view.TagListView$7$1 -> com.hippo.ehviewer.view.m:
    com.hippo.ehviewer.view.TagListView$7 this$1 -> a
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.hippo.ehviewer.view.TagListView$7$2 -> com.hippo.ehviewer.view.n:
    com.hippo.ehviewer.view.TagListView$7 this$1 -> a
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.hippo.ehviewer.view.TagListView$OnModifyListener -> com.hippo.ehviewer.view.o:
    void onModify(int) -> a
com.hippo.ehviewer.view.TagListView$OnMoveLister -> com.hippo.ehviewer.view.p:
    void onMoveStart() -> a
    void onMoveOver() -> b
com.hippo.ehviewer.view.TagsAdapter -> com.hippo.ehviewer.view.q:
    int INVALID_ID -> a
    int lastId -> b
    java.util.HashMap mIdMap -> c
    long getItemId(int) -> getItemId
    boolean hasStableIds() -> hasStableIds
    void set(java.lang.String,java.lang.String) -> a
    void remove(java.lang.String) -> a
    void addId(java.lang.String) -> b
    void remove(java.lang.Object) -> remove
com.hippo.ehviewer.widget.AutoWrapLayout -> com.hippo.ehviewer.widget.AutoWrapLayout:
    java.util.List rectList -> a
    com.hippo.ehviewer.widget.AutoWrapLayout$BaseLine mBaseLine -> b
    com.hippo.ehviewer.widget.AutoWrapLayout$BaseLine[] sBaseLineArray -> c
    void setBaseLine(com.hippo.ehviewer.widget.AutoWrapLayout$BaseLine) -> setBaseLine
    com.hippo.ehviewer.widget.AutoWrapLayout$BaseLine getScaleType() -> getScaleType
    void adjustBaseLine(int,int,int) -> a
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    com.hippo.ehviewer.widget.AutoWrapLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> a
    com.hippo.ehviewer.widget.AutoWrapLayout$LayoutParams generateDefaultLayoutParams() -> a
    com.hippo.ehviewer.widget.AutoWrapLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> a
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
com.hippo.ehviewer.widget.AutoWrapLayout$BaseLine -> com.hippo.ehviewer.widget.a:
    com.hippo.ehviewer.widget.AutoWrapLayout$BaseLine TOP -> a
    com.hippo.ehviewer.widget.AutoWrapLayout$BaseLine CENTER -> b
    com.hippo.ehviewer.widget.AutoWrapLayout$BaseLine BOTTOM -> c
    int nativeInt -> d
    com.hippo.ehviewer.widget.AutoWrapLayout$BaseLine[] ENUM$VALUES -> e
    com.hippo.ehviewer.widget.AutoWrapLayout$BaseLine[] values() -> values
    com.hippo.ehviewer.widget.AutoWrapLayout$BaseLine valueOf(java.lang.String) -> valueOf
com.hippo.ehviewer.widget.AutoWrapLayout$LayoutParams -> com.hippo.ehviewer.widget.b:
com.hippo.ehviewer.widget.DialogBuilder -> com.hippo.ehviewer.widget.c:
    android.view.View mView -> a
    android.content.Context mContext -> b
    com.hippo.ehviewer.widget.DialogBuilder setTitle(int) -> a
    com.hippo.ehviewer.widget.DialogBuilder setTitle(java.lang.CharSequence) -> a
    com.hippo.ehviewer.widget.DialogBuilder setMessage(int) -> b
    com.hippo.ehviewer.widget.DialogBuilder setMessage(java.lang.CharSequence) -> b
    com.hippo.ehviewer.widget.DialogBuilder setLongMessage(java.lang.CharSequence) -> c
    com.hippo.ehviewer.widget.DialogBuilder setView(android.view.View,boolean) -> a
    com.hippo.ehviewer.widget.DialogBuilder setPositiveButton(int,android.view.View$OnClickListener) -> a
    com.hippo.ehviewer.widget.DialogBuilder setPositiveButton(java.lang.CharSequence,android.view.View$OnClickListener) -> a
    com.hippo.ehviewer.widget.DialogBuilder setNegativeButton(int,android.view.View$OnClickListener) -> b
    com.hippo.ehviewer.widget.DialogBuilder setNegativeButton(java.lang.CharSequence,android.view.View$OnClickListener) -> b
    com.hippo.ehviewer.widget.DialogBuilder setNeutralButton(int,android.view.View$OnClickListener) -> c
    com.hippo.ehviewer.widget.DialogBuilder setNeutralButton(java.lang.CharSequence,android.view.View$OnClickListener) -> c
    com.hippo.ehviewer.widget.DialogBuilder setCancelable(boolean) -> a
    com.hippo.ehviewer.widget.DialogBuilder setItems(int,android.widget.AdapterView$OnItemClickListener) -> a
    com.hippo.ehviewer.widget.DialogBuilder setItems(java.lang.CharSequence[],android.widget.AdapterView$OnItemClickListener) -> a
    com.hippo.ehviewer.widget.DialogBuilder setAdapter(android.widget.ListAdapter,android.widget.AdapterView$OnItemClickListener) -> a
    android.app.AlertDialog create() -> create
    android.app.AlertDialog$Builder setMessage(java.lang.CharSequence) -> setMessage
    android.app.AlertDialog$Builder setMessage(int) -> setMessage
    android.app.AlertDialog$Builder setTitle(java.lang.CharSequence) -> setTitle
    android.app.AlertDialog$Builder setTitle(int) -> setTitle
    android.app.AlertDialog$Builder setCancelable(boolean) -> setCancelable
com.hippo.ehviewer.widget.DrawerLayout -> com.hippo.ehviewer.widget.DrawerLayout:
    int[] LAYOUT_ATTRS -> a
    int mMinDrawerMargin -> b
    int mScrimColor -> c
    float mScrimOpacity -> d
    android.graphics.Paint mScrimPaint -> e
    com.hippo.ehviewer.widget.ViewDragHelper mLeftDragger -> f
    com.hippo.ehviewer.widget.ViewDragHelper mRightDragger -> g
    com.hippo.ehviewer.widget.DrawerLayout$ViewDragCallback mLeftCallback -> h
    com.hippo.ehviewer.widget.DrawerLayout$ViewDragCallback mRightCallback -> i
    int mDrawerState -> j
    boolean mInLayout -> k
    boolean mFirstLayout -> l
    int mLockModeLeft -> m
    int mLockModeRight -> n
    boolean mDisallowInterceptRequested -> o
    boolean mChildrenCanceledTouch -> p
    com.hippo.ehviewer.widget.DrawerLayout$DrawerListener mListener -> q
    float mInitialMotionX -> r
    float mInitialMotionY -> s
    android.graphics.drawable.Drawable mShadowLeft -> t
    android.graphics.drawable.Drawable mShadowRight -> u
    boolean enabled -> v
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(com.hippo.ehviewer.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> a
    int getDrawerLockMode(android.view.View) -> a
    void updateDrawerState(int,int,android.view.View) -> a
    void dispatchOnDrawerClosed(android.view.View) -> b
    void dispatchOnDrawerOpened(android.view.View) -> c
    void dispatchOnDrawerSlide(android.view.View,float) -> a
    void setDrawerViewOffset(android.view.View,float) -> b
    float getDrawerViewOffset(android.view.View) -> d
    int getDrawerViewAbsoluteGravity(android.view.View) -> e
    boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> a
    android.view.View findOpenDrawer() -> a
    android.view.View findDrawerWithGravity(int) -> a
    java.lang.String gravityToString(int) -> b
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean hasOpaqueBackground(android.view.View) -> l
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> f
    boolean isDrawerView(android.view.View) -> g
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void setEnabled(boolean) -> setEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> b
    void closeDrawers(boolean) -> a
    void openDrawer(android.view.View) -> h
    void openDrawer(int) -> c
    void closeDrawer(android.view.View) -> i
    boolean isDrawerOpen(android.view.View) -> j
    boolean isDrawerOpen(int) -> d
    boolean isDrawerVisible(android.view.View) -> k
    boolean hasPeekingDrawer() -> e
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean hasVisibleDrawer() -> f
    android.view.View findVisibleDrawer() -> g
    void cancelChildViewTouch() -> c
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    int[] access$0() -> d
com.hippo.ehviewer.widget.DrawerLayout$AccessibilityDelegate -> com.hippo.ehviewer.widget.d:
    android.graphics.Rect mTmpRect -> c
    com.hippo.ehviewer.widget.DrawerLayout this$0 -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void addChildrenForAccessibility(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.view.ViewGroup) -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean filter(android.view.View) -> b
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
com.hippo.ehviewer.widget.DrawerLayout$DrawerListener -> com.hippo.ehviewer.widget.e:
    void onDrawerSlide(android.view.View,float) -> a
    void onDrawerOpened(android.view.View) -> a
    void onDrawerClosed(android.view.View) -> b
    void onDrawerStateChanged(int) -> a
com.hippo.ehviewer.widget.DrawerLayout$LayoutParams -> com.hippo.ehviewer.widget.f:
    int gravity -> a
    float onScreen -> b
    boolean isPeeking -> c
    boolean knownOpen -> d
com.hippo.ehviewer.widget.DrawerLayout$SavedState -> com.hippo.ehviewer.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> a
    int lockModeLeft -> b
    int lockModeRight -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.hippo.ehviewer.widget.DrawerLayout$SavedState$1 -> com.hippo.ehviewer.widget.g:
    com.hippo.ehviewer.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> a
    com.hippo.ehviewer.widget.DrawerLayout$SavedState[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.hippo.ehviewer.widget.DrawerLayout$ViewDragCallback -> com.hippo.ehviewer.widget.h:
    int mAbsGravity -> b
    com.hippo.ehviewer.widget.ViewDragHelper mDragger -> c
    java.lang.Runnable mPeekRunnable -> d
    com.hippo.ehviewer.widget.DrawerLayout this$0 -> a
    void setDragger(com.hippo.ehviewer.widget.ViewDragHelper) -> a
    void removeCallbacks() -> a
    boolean tryCaptureView(android.view.View,int) -> a
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void closeOtherDrawer() -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    void peekDrawer() -> c
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getViewHorizontalDragRange(android.view.View) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
    void access$0(com.hippo.ehviewer.widget.DrawerLayout$ViewDragCallback) -> a
com.hippo.ehviewer.widget.DrawerLayout$ViewDragCallback$1 -> com.hippo.ehviewer.widget.i:
    com.hippo.ehviewer.widget.DrawerLayout$ViewDragCallback this$1 -> a
    void run() -> run
com.hippo.ehviewer.widget.LoadImageView -> com.hippo.ehviewer.widget.LoadImageView:
    int mState -> a
    java.lang.String mUrl -> b
    java.lang.String mKey -> c
    void setLoadInfo(java.lang.String,java.lang.String) -> a
    void setState(int) -> setState
    void setOnClickListener(com.hippo.ehviewer.ImageLoadManager) -> setOnClickListener
    java.lang.String getUrl() -> getUrl
    java.lang.String getKey() -> getKey
    int getState() -> getState
com.hippo.ehviewer.widget.LoadImageView$OnClickListener -> com.hippo.ehviewer.widget.j:
    com.hippo.ehviewer.ImageLoadManager mImageLoadManager -> b
    com.hippo.ehviewer.widget.LoadImageView this$0 -> a
    void onClick(android.view.View) -> onClick
com.hippo.ehviewer.widget.PullListView -> com.hippo.ehviewer.widget.PullListView:
    android.view.animation.RotateAnimation mAnimation -> a
    android.view.animation.RotateAnimation mReverseAnimation -> b
    android.view.animation.Animation mRefreshAnimation -> c
    android.view.animation.Animation mOverAnimation -> d
    android.widget.ListView mListView -> e
    android.widget.LinearLayout mHeader -> f
    android.widget.LinearLayout mFooter -> g
    android.widget.TextView mTipTextView -> h
    android.widget.ImageView mArrowImageView -> i
    android.widget.ProgressBar mProgressBar -> j
    android.widget.TextView mFooterTipTextView -> k
    android.widget.ProgressBar mFooterProgressBar -> l
    boolean isHeaderRecored -> m
    boolean isFooterRecored -> n
    java.lang.String mHeaderPullStr -> o
    java.lang.String mHeaderReleaseStr -> p
    java.lang.String mHeaderRefreshStr -> q
    java.lang.String mHeaderDoneStr -> r
    java.lang.String mHeaderCancelStr -> s
    java.lang.String mFooterRefreshStr -> t
    java.lang.String mFooterSuccessStr -> u
    java.lang.String mFooterFailStr -> v
    int headerHeight -> w
    int headerOriginalLeftPadding -> x
    int headerOriginalTopPadding -> y
    int headerOriginalRightPadding -> z
    int headerOriginalBottomPadding -> A
    int releaseTopPadding -> B
    int doneTopPadding -> C
    int pullThreshold -> D
    int pullOffestMax -> E
    boolean isActionWhenShow -> F
    int startY -> G
    int headerState -> H
    boolean isBack -> I
    int footerState -> J
    com.hippo.ehviewer.widget.PullListView$OnHeaderRefreshListener headerRefreshListener -> K
    com.hippo.ehviewer.widget.PullListView$OnFooterRefreshListener footerRefreshListener -> L
    int lastY -> M
    boolean mHeaderEnabled -> N
    boolean mFooterEnabled -> O
    void init(android.content.Context) -> a
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    int getShowOffset(int,int) -> a
    void changeHeaderViewByState() -> e
    void changeFooterViewByState() -> f
    android.widget.ListView getListView() -> getListView
    void setHeaderEnabled(boolean) -> setHeaderEnabled
    void setHeaderString(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    boolean clickHeaderRefresh(java.lang.Object) -> a
    void setOnRefreshListener(com.hippo.ehviewer.widget.PullListView$OnHeaderRefreshListener) -> setOnRefreshListener
    void onHeaderRefresh() -> g
    void onHeaderRefresh(java.lang.Object) -> b
    boolean isHeaderRefreshing() -> a
    void onHeaderRefreshComplete() -> b
    void setFooterEnabled(boolean) -> setFooterEnabled
    void setFooterString(java.lang.String,java.lang.String,java.lang.String) -> a
    void footerRefresh() -> c
    void setOnFooterRefreshListener(com.hippo.ehviewer.widget.PullListView$OnFooterRefreshListener) -> setOnFooterRefreshListener
    void onFooterRefreshComplete(boolean) -> a
    boolean isFooterRefreshing() -> d
    void onFooterRefreshComplete(boolean,boolean) -> a
    void setActionWhenShow(boolean) -> setActionWhenShow
    boolean isListAtTop() -> h
    void measureView(android.view.View) -> a
    android.widget.LinearLayout access$0(com.hippo.ehviewer.widget.PullListView) -> a
    int access$1(com.hippo.ehviewer.widget.PullListView) -> b
    int access$2(com.hippo.ehviewer.widget.PullListView) -> c
    int access$3(com.hippo.ehviewer.widget.PullListView) -> d
    int access$4(com.hippo.ehviewer.widget.PullListView) -> e
    int access$5(com.hippo.ehviewer.widget.PullListView) -> f
    int access$6(com.hippo.ehviewer.widget.PullListView) -> g
    int access$7(com.hippo.ehviewer.widget.PullListView) -> h
    int access$8(com.hippo.ehviewer.widget.PullListView) -> i
    void access$9(com.hippo.ehviewer.widget.PullListView,int) -> a
    void access$10(com.hippo.ehviewer.widget.PullListView,boolean) -> a
    void access$11(com.hippo.ehviewer.widget.PullListView,boolean) -> b
com.hippo.ehviewer.widget.PullListView$1 -> com.hippo.ehviewer.widget.k:
    com.hippo.ehviewer.widget.PullListView this$0 -> a
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
com.hippo.ehviewer.widget.PullListView$2 -> com.hippo.ehviewer.widget.l:
    com.hippo.ehviewer.widget.PullListView this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
com.hippo.ehviewer.widget.PullListView$3 -> com.hippo.ehviewer.widget.m:
    com.hippo.ehviewer.widget.PullListView this$0 -> a
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
com.hippo.ehviewer.widget.PullListView$4 -> com.hippo.ehviewer.widget.n:
    com.hippo.ehviewer.widget.PullListView this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
com.hippo.ehviewer.widget.PullListView$5 -> com.hippo.ehviewer.widget.o:
    com.hippo.ehviewer.widget.PullListView this$0 -> a
    void onClick(android.view.View) -> onClick
com.hippo.ehviewer.widget.PullListView$OnFooterRefreshListener -> com.hippo.ehviewer.widget.p:
    void onFooterRefresh() -> a
com.hippo.ehviewer.widget.PullListView$OnHeaderRefreshListener -> com.hippo.ehviewer.widget.q:
    void onHeaderRefresh() -> a
    void onHeaderRefresh(java.lang.Object) -> a
com.hippo.ehviewer.widget.SuperDialogUtil -> com.hippo.ehviewer.widget.r:
    void setTitle(android.app.AlertDialog,java.lang.String) -> a
    android.app.AlertDialog createUpdateDialog(android.content.Context,java.lang.String,java.lang.String,java.lang.String,android.view.View$OnClickListener,android.view.View$OnClickListener) -> a
com.hippo.ehviewer.widget.ViewDragHelper -> com.hippo.ehviewer.widget.s:
    int mDragState -> a
    int mTouchSlop -> b
    int mActivePointerId -> c
    float[] mInitialMotionX -> d
    float[] mInitialMotionY -> e
    float[] mLastMotionX -> f
    float[] mLastMotionY -> g
    int[] mInitialEdgesTouched -> h
    int[] mEdgeDragsInProgress -> i
    int[] mEdgeDragsLocked -> j
    int mPointersDown -> k
    android.view.VelocityTracker mVelocityTracker -> l
    float mMaxVelocity -> m
    float mMinVelocity -> n
    int mEdgeSize -> o
    int mEdgeSizeIntercept -> p
    int mTrackingEdges -> q
    android.support.v4.widget.ScrollerCompat mScroller -> r
    com.hippo.ehviewer.widget.ViewDragHelper$Callback mCallback -> s
    android.view.View mCapturedView -> t
    boolean mReleaseInProgress -> u
    android.view.ViewGroup mParentView -> v
    android.view.animation.Interpolator sInterpolator -> w
    java.lang.Runnable mSetIdleRunnable -> x
    com.hippo.ehviewer.widget.ViewDragHelper create(android.view.ViewGroup,com.hippo.ehviewer.widget.ViewDragHelper$Callback) -> a
    com.hippo.ehviewer.widget.ViewDragHelper create(android.view.ViewGroup,float,com.hippo.ehviewer.widget.ViewDragHelper$Callback) -> a
    void setMinVelocity(float) -> a
    int getViewDragState() -> a
    void setEdgeTrackingEnabled(int) -> a
    int getEdgeSize() -> b
    void captureChildView(android.view.View,int) -> a
    android.view.View getCapturedView() -> c
    int getTouchSlop() -> d
    void cancel() -> e
    boolean smoothSlideViewTo(android.view.View,int,int) -> a
    boolean settleCapturedViewAt(int,int) -> a
    boolean forceSettleCapturedViewAt(int,int,int,int) -> a
    int computeSettleDuration(android.view.View,int,int,int,int) -> a
    int computeAxisDuration(int,int,int) -> a
    int clampMag(int,int,int) -> b
    float clampMag(float,float,float) -> a
    float distanceInfluenceForSnapDuration(float) -> b
    boolean continueSettling(boolean) -> a
    void dispatchViewReleased(float,float) -> a
    void clearMotionHistory() -> f
    void clearMotionHistory(int) -> e
    void ensureMotionHistorySizeForId(int) -> f
    void saveInitialMotion(float,float,int) -> a
    void saveInitialMotionIntercept(float,float,int) -> b
    void saveLastMotion(android.view.MotionEvent) -> c
    boolean isPointerDown(int) -> b
    void setDragState(int) -> c
    boolean tryCaptureViewForDrag(android.view.View,int) -> b
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> a
    void processTouchEvent(android.view.MotionEvent) -> b
    void reportNewEdgeDrags(float,float,int) -> c
    boolean checkNewEdgeDrag(float,float,int,int) -> a
    boolean checkTouchSlop(android.view.View,float,float) -> a
    boolean checkTouchSlop(int) -> d
    boolean checkTouchSlop(int,int) -> b
    void releaseViewForPointerUp() -> g
    void dragTo(int,int,int,int) -> b
    boolean isCapturedViewUnder(int,int) -> c
    boolean isViewUnder(android.view.View,int,int) -> b
    android.view.View findTopChildUnder(int,int) -> d
    int getEdgesTouched(int,int) -> e
    int getEdgesTouchedIntercept(int,int) -> f
com.hippo.ehviewer.widget.ViewDragHelper$1 -> com.hippo.ehviewer.widget.t:
    float getInterpolation(float) -> getInterpolation
com.hippo.ehviewer.widget.ViewDragHelper$2 -> com.hippo.ehviewer.widget.u:
    com.hippo.ehviewer.widget.ViewDragHelper this$0 -> a
    void run() -> run
com.hippo.ehviewer.widget.ViewDragHelper$Callback -> com.hippo.ehviewer.widget.v:
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getOrderedChildIndex(int) -> c
    int getViewHorizontalDragRange(android.view.View) -> a
    int getViewVerticalDragRange(android.view.View) -> b
    boolean tryCaptureView(android.view.View,int) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
com.jakewharton.disklrucache.DiskLruCache -> com.a.a.a:
    java.util.regex.Pattern LEGAL_KEY_PATTERN -> a
    java.io.File directory -> c
    java.io.File journalFile -> d
    java.io.File journalFileTmp -> e
    java.io.File journalFileBackup -> f
    int appVersion -> g
    long maxSize -> h
    int valueCount -> i
    long size -> j
    java.io.Writer journalWriter -> k
    java.util.LinkedHashMap lruEntries -> l
    int redundantOpCount -> m
    long nextSequenceNumber -> n
    java.util.concurrent.ThreadPoolExecutor executorService -> b
    java.util.concurrent.Callable cleanupCallable -> o
    java.io.OutputStream NULL_OUTPUT_STREAM -> p
    com.jakewharton.disklrucache.DiskLruCache open(java.io.File,int,int,long) -> a
    void readJournal() -> e
    void readJournalLine(java.lang.String) -> d
    void processJournal() -> f
    void rebuildJournal() -> g
    void deleteIfExists(java.io.File) -> a
    void renameTo(java.io.File,java.io.File,boolean) -> a
    com.jakewharton.disklrucache.DiskLruCache$Snapshot get(java.lang.String) -> a
    com.jakewharton.disklrucache.DiskLruCache$Editor edit(java.lang.String) -> b
    com.jakewharton.disklrucache.DiskLruCache$Editor edit(java.lang.String,long) -> a
    long getMaxSize() -> a
    void setMaxSize(long) -> a
    long size() -> b
    void completeEdit(com.jakewharton.disklrucache.DiskLruCache$Editor,boolean) -> a
    boolean journalRebuildRequired() -> h
    boolean remove(java.lang.String) -> c
    void checkNotClosed() -> i
    void close() -> close
    void trimToSize() -> j
    void delete() -> c
    void validateKey(java.lang.String) -> e
    java.io.Writer access$0(com.jakewharton.disklrucache.DiskLruCache) -> a
    void access$1(com.jakewharton.disklrucache.DiskLruCache) -> b
    boolean access$2(com.jakewharton.disklrucache.DiskLruCache) -> c
    void access$3(com.jakewharton.disklrucache.DiskLruCache) -> d
    void access$4(com.jakewharton.disklrucache.DiskLruCache,int) -> a
    int access$7(com.jakewharton.disklrucache.DiskLruCache) -> e
    java.io.File access$8(com.jakewharton.disklrucache.DiskLruCache) -> f
    java.io.OutputStream access$9() -> d
    void access$10(com.jakewharton.disklrucache.DiskLruCache,com.jakewharton.disklrucache.DiskLruCache$Editor,boolean) -> a
com.jakewharton.disklrucache.DiskLruCache$1 -> com.a.a.b:
    com.jakewharton.disklrucache.DiskLruCache this$0 -> a
    java.lang.Void call() -> a
    java.lang.Object call() -> call
com.jakewharton.disklrucache.DiskLruCache$2 -> com.a.a.c:
    void write(int) -> write
com.jakewharton.disklrucache.DiskLruCache$Editor -> com.a.a.d:
    com.jakewharton.disklrucache.DiskLruCache$Entry entry -> b
    boolean[] written -> c
    boolean hasErrors -> d
    boolean committed -> e
    com.jakewharton.disklrucache.DiskLruCache this$0 -> a
    java.io.OutputStream newOutputStream(int) -> a
    void commit() -> a
    void abort() -> b
    void access$0(com.jakewharton.disklrucache.DiskLruCache$Editor,boolean) -> a
    com.jakewharton.disklrucache.DiskLruCache$Entry access$2(com.jakewharton.disklrucache.DiskLruCache$Editor) -> a
    boolean[] access$3(com.jakewharton.disklrucache.DiskLruCache$Editor) -> b
com.jakewharton.disklrucache.DiskLruCache$Editor$FaultHidingOutputStream -> com.a.a.e:
    com.jakewharton.disklrucache.DiskLruCache$Editor this$1 -> a
    void write(int) -> write
    void write(byte[],int,int) -> write
    void close() -> close
    void flush() -> flush
com.jakewharton.disklrucache.DiskLruCache$Entry -> com.a.a.f:
    java.lang.String key -> b
    long[] lengths -> c
    boolean readable -> d
    com.jakewharton.disklrucache.DiskLruCache$Editor currentEditor -> e
    long sequenceNumber -> f
    com.jakewharton.disklrucache.DiskLruCache this$0 -> a
    java.lang.String getLengths() -> a
    void setLengths(java.lang.String[]) -> a
    java.io.IOException invalidLengths(java.lang.String[]) -> b
    java.io.File getCleanFile(int) -> a
    java.io.File getDirtyFile(int) -> b
    boolean access$0(com.jakewharton.disklrucache.DiskLruCache$Entry) -> a
    com.jakewharton.disklrucache.DiskLruCache$Editor access$1(com.jakewharton.disklrucache.DiskLruCache$Entry) -> b
    java.lang.String access$2(com.jakewharton.disklrucache.DiskLruCache$Entry) -> c
    void access$4(com.jakewharton.disklrucache.DiskLruCache$Entry,boolean) -> a
    void access$5(com.jakewharton.disklrucache.DiskLruCache$Entry,com.jakewharton.disklrucache.DiskLruCache$Editor) -> a
    void access$6(com.jakewharton.disklrucache.DiskLruCache$Entry,java.lang.String[]) -> a
    long[] access$7(com.jakewharton.disklrucache.DiskLruCache$Entry) -> d
    long access$8(com.jakewharton.disklrucache.DiskLruCache$Entry) -> e
    void access$9(com.jakewharton.disklrucache.DiskLruCache$Entry,long) -> a
com.jakewharton.disklrucache.DiskLruCache$Snapshot -> com.a.a.g:
    java.lang.String key -> b
    long sequenceNumber -> c
    java.io.InputStream[] ins -> d
    long[] lengths -> e
    com.jakewharton.disklrucache.DiskLruCache this$0 -> a
    java.io.InputStream getInputStream(int) -> a
    void close() -> close
com.jakewharton.disklrucache.StrictLineReader -> com.a.a.h:
    java.io.InputStream in -> a
    java.nio.charset.Charset charset -> b
    byte[] buf -> c
    int pos -> d
    int end -> e
    void close() -> close
    java.lang.String readLine() -> a
    void fillBuf() -> b
    java.nio.charset.Charset access$0(com.jakewharton.disklrucache.StrictLineReader) -> a
com.jakewharton.disklrucache.StrictLineReader$1 -> com.a.a.i:
    com.jakewharton.disklrucache.StrictLineReader this$0 -> a
    java.lang.String toString() -> toString
com.jakewharton.disklrucache.Util -> com.a.a.j:
    java.nio.charset.Charset US_ASCII -> a
    java.nio.charset.Charset UTF_8 -> b
    void deleteContents(java.io.File) -> a
    void closeQuietly(java.io.Closeable) -> a
org.apache.commons.lang3.ArrayUtils -> a.a.a.a.a:
    java.lang.Object[] EMPTY_OBJECT_ARRAY -> a
    java.lang.Class[] EMPTY_CLASS_ARRAY -> b
    java.lang.String[] EMPTY_STRING_ARRAY -> c
    long[] EMPTY_LONG_ARRAY -> d
    java.lang.Long[] EMPTY_LONG_OBJECT_ARRAY -> e
    int[] EMPTY_INT_ARRAY -> f
    java.lang.Integer[] EMPTY_INTEGER_OBJECT_ARRAY -> g
    short[] EMPTY_SHORT_ARRAY -> h
    java.lang.Short[] EMPTY_SHORT_OBJECT_ARRAY -> i
    byte[] EMPTY_BYTE_ARRAY -> j
    java.lang.Byte[] EMPTY_BYTE_OBJECT_ARRAY -> k
    double[] EMPTY_DOUBLE_ARRAY -> l
    java.lang.Double[] EMPTY_DOUBLE_OBJECT_ARRAY -> m
    float[] EMPTY_FLOAT_ARRAY -> n
    java.lang.Float[] EMPTY_FLOAT_OBJECT_ARRAY -> o
    boolean[] EMPTY_BOOLEAN_ARRAY -> p
    java.lang.Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY -> q
    char[] EMPTY_CHAR_ARRAY -> r
    java.lang.Character[] EMPTY_CHARACTER_OBJECT_ARRAY -> s
    java.lang.Object[] clone(java.lang.Object[]) -> a
    boolean isEmpty(char[]) -> a
org.apache.commons.lang3.StringEscapeUtils -> a.a.a.a.b:
    org.apache.commons.lang3.text.translate.CharSequenceTranslator ESCAPE_JAVA -> a
    org.apache.commons.lang3.text.translate.CharSequenceTranslator ESCAPE_ECMASCRIPT -> b
    org.apache.commons.lang3.text.translate.CharSequenceTranslator ESCAPE_JSON -> c
    org.apache.commons.lang3.text.translate.CharSequenceTranslator ESCAPE_XML -> d
    org.apache.commons.lang3.text.translate.CharSequenceTranslator ESCAPE_HTML3 -> e
    org.apache.commons.lang3.text.translate.CharSequenceTranslator ESCAPE_HTML4 -> f
    org.apache.commons.lang3.text.translate.CharSequenceTranslator ESCAPE_CSV -> g
    org.apache.commons.lang3.text.translate.CharSequenceTranslator UNESCAPE_JAVA -> h
    org.apache.commons.lang3.text.translate.CharSequenceTranslator UNESCAPE_ECMASCRIPT -> i
    org.apache.commons.lang3.text.translate.CharSequenceTranslator UNESCAPE_JSON -> j
    org.apache.commons.lang3.text.translate.CharSequenceTranslator UNESCAPE_HTML3 -> k
    org.apache.commons.lang3.text.translate.CharSequenceTranslator UNESCAPE_HTML4 -> l
    org.apache.commons.lang3.text.translate.CharSequenceTranslator UNESCAPE_XML -> m
    org.apache.commons.lang3.text.translate.CharSequenceTranslator UNESCAPE_CSV -> n
    java.lang.String escapeHtml4(java.lang.String) -> a
    java.lang.String unescapeHtml4(java.lang.String) -> b
org.apache.commons.lang3.StringEscapeUtils$CsvEscaper -> a.a.a.a.c:
    java.lang.String CSV_QUOTE_STR -> a
    char[] CSV_SEARCH_CHARS -> b
    int translate(java.lang.CharSequence,int,java.io.Writer) -> a
org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper -> a.a.a.a.d:
    java.lang.String CSV_QUOTE_STR -> a
    char[] CSV_SEARCH_CHARS -> b
    int translate(java.lang.CharSequence,int,java.io.Writer) -> a
org.apache.commons.lang3.StringUtils -> a.a.a.a.e:
    java.util.regex.Pattern WHITESPACE_PATTERN -> a
    boolean isEmpty(java.lang.CharSequence) -> a
    boolean containsAny(java.lang.CharSequence,char[]) -> a
    boolean containsNone(java.lang.CharSequence,char[]) -> b
    java.lang.String replace(java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String replace(java.lang.String,java.lang.String,java.lang.String,int) -> a
org.apache.commons.lang3.text.translate.AggregateTranslator -> a.a.a.a.a.a.a:
    org.apache.commons.lang3.text.translate.CharSequenceTranslator[] translators -> a
    int translate(java.lang.CharSequence,int,java.io.Writer) -> a
org.apache.commons.lang3.text.translate.CharSequenceTranslator -> a.a.a.a.a.a.b:
    int translate(java.lang.CharSequence,int,java.io.Writer) -> a
    java.lang.String translate(java.lang.CharSequence) -> a
    void translate(java.lang.CharSequence,java.io.Writer) -> a
    org.apache.commons.lang3.text.translate.CharSequenceTranslator with(org.apache.commons.lang3.text.translate.CharSequenceTranslator[]) -> a
    java.lang.String hex(int) -> a
org.apache.commons.lang3.text.translate.CodePointTranslator -> a.a.a.a.a.a.c:
    int translate(java.lang.CharSequence,int,java.io.Writer) -> a
    boolean translate(int,java.io.Writer) -> a
org.apache.commons.lang3.text.translate.EntityArrays -> a.a.a.a.a.a.d:
    java.lang.String[][] ISO8859_1_ESCAPE -> a
    java.lang.String[][] ISO8859_1_UNESCAPE -> b
    java.lang.String[][] HTML40_EXTENDED_ESCAPE -> c
    java.lang.String[][] HTML40_EXTENDED_UNESCAPE -> d
    java.lang.String[][] BASIC_ESCAPE -> e
    java.lang.String[][] BASIC_UNESCAPE -> f
    java.lang.String[][] APOS_ESCAPE -> g
    java.lang.String[][] APOS_UNESCAPE -> h
    java.lang.String[][] JAVA_CTRL_CHARS_ESCAPE -> i
    java.lang.String[][] JAVA_CTRL_CHARS_UNESCAPE -> j
    java.lang.String[][] ISO8859_1_ESCAPE() -> a
    java.lang.String[][] ISO8859_1_UNESCAPE() -> b
    java.lang.String[][] HTML40_EXTENDED_ESCAPE() -> c
    java.lang.String[][] HTML40_EXTENDED_UNESCAPE() -> d
    java.lang.String[][] BASIC_ESCAPE() -> e
    java.lang.String[][] BASIC_UNESCAPE() -> f
    java.lang.String[][] APOS_ESCAPE() -> g
    java.lang.String[][] APOS_UNESCAPE() -> h
    java.lang.String[][] JAVA_CTRL_CHARS_ESCAPE() -> i
    java.lang.String[][] JAVA_CTRL_CHARS_UNESCAPE() -> j
    java.lang.String[][] invert(java.lang.String[][]) -> a
org.apache.commons.lang3.text.translate.JavaUnicodeEscaper -> a.a.a.a.a.a.e:
    org.apache.commons.lang3.text.translate.JavaUnicodeEscaper outsideOf(int,int) -> a
    java.lang.String toUtf16Escape(int) -> b
org.apache.commons.lang3.text.translate.LookupTranslator -> a.a.a.a.a.a.f:
    java.util.HashMap lookupMap -> a
    int shortest -> b
    int longest -> c
    int translate(java.lang.CharSequence,int,java.io.Writer) -> a
org.apache.commons.lang3.text.translate.NumericEntityUnescaper -> a.a.a.a.a.a.g:
    java.util.EnumSet options -> a
    boolean isSet(org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION) -> a
    int translate(java.lang.CharSequence,int,java.io.Writer) -> a
org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION -> a.a.a.a.a.a.h:
    org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION semiColonRequired -> a
    org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION semiColonOptional -> b
    org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION errorIfNoSemiColon -> c
    org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION[] $VALUES -> d
    org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION[] values() -> values
    org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION valueOf(java.lang.String) -> valueOf
org.apache.commons.lang3.text.translate.OctalUnescaper -> a.a.a.a.a.a.i:
    int translate(java.lang.CharSequence,int,java.io.Writer) -> a
    boolean isOctalDigit(char) -> a
    boolean isZeroToThree(char) -> b
org.apache.commons.lang3.text.translate.UnicodeEscaper -> a.a.a.a.a.a.j:
    int below -> a
    int above -> b
    boolean between -> c
    boolean translate(int,java.io.Writer) -> a
    java.lang.String toUtf16Escape(int) -> b
org.apache.commons.lang3.text.translate.UnicodeUnescaper -> a.a.a.a.a.a.k:
    int translate(java.lang.CharSequence,int,java.io.Writer) -> a
